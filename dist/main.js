/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@seald-io/binary-search-tree/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@seald-io/binary-search-tree/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports.BinarySearchTree = __webpack_require__(/*! ./lib/bst */ \"./node_modules/@seald-io/binary-search-tree/lib/bst.js\")\nmodule.exports.AVLTree = __webpack_require__(/*! ./lib/avltree */ \"./node_modules/@seald-io/binary-search-tree/lib/avltree.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL2JpbmFyeS1zZWFyY2gtdHJlZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL2JpbmFyeS1zZWFyY2gtdHJlZS9pbmRleC5qcz8xZWVjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzLkJpbmFyeVNlYXJjaFRyZWUgPSByZXF1aXJlKCcuL2xpYi9ic3QnKVxubW9kdWxlLmV4cG9ydHMuQVZMVHJlZSA9IHJlcXVpcmUoJy4vbGliL2F2bHRyZWUnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/binary-search-tree/index.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/binary-search-tree/lib/avltree.js":
/*!******************************************************************!*\
  !*** ./node_modules/@seald-io/binary-search-tree/lib/avltree.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Self-balancing binary search tree using the AVL implementation\n */\nconst BinarySearchTree = __webpack_require__(/*! ./bst */ \"./node_modules/@seald-io/binary-search-tree/lib/bst.js\")\nconst customUtils = __webpack_require__(/*! ./customUtils */ \"./node_modules/@seald-io/binary-search-tree/lib/customUtils.js\")\n\nclass AVLTree {\n  /**\n   * Constructor\n   * We can't use a direct pointer to the root node (as in the simple binary search tree)\n   * as the root will change during tree rotations\n   * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n   * @param {Function} options.compareKeys Initialize this BST's compareKeys\n   */\n  constructor (options) {\n    this.tree = new _AVLTree(options)\n  }\n\n  checkIsAVLT () { this.tree.checkIsAVLT() }\n\n  // Insert in the internal tree, update the pointer to the root if needed\n  insert (key, value) {\n    const newTree = this.tree.insert(key, value)\n\n    // If newTree is undefined, that means its structure was not modified\n    if (newTree) { this.tree = newTree }\n  }\n\n  // Delete a value\n  delete (key, value) {\n    const newTree = this.tree.delete(key, value)\n\n    // If newTree is undefined, that means its structure was not modified\n    if (newTree) { this.tree = newTree }\n  }\n}\n\nclass _AVLTree extends BinarySearchTree {\n  /**\n   * Constructor of the internal AVLTree\n   * @param {Object} options Optional\n   * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n   * @param {Key}      options.key Initialize this BST's key with key\n   * @param {Value}    options.value Initialize this BST's data with [value]\n   * @param {Function} options.compareKeys Initialize this BST's compareKeys\n   */\n  constructor (options) {\n    super()\n    options = options || {}\n\n    this.left = null\n    this.right = null\n    this.parent = options.parent !== undefined ? options.parent : null\n    if (Object.prototype.hasOwnProperty.call(options, 'key')) this.key = options.key\n    this.data = Object.prototype.hasOwnProperty.call(options, 'value') ? [options.value] : []\n    this.unique = options.unique || false\n\n    this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction\n    this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality\n  }\n\n  /**\n   * Check the recorded height is correct for every node\n   * Throws if one height doesn't match\n   */\n  checkHeightCorrect () {\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) { return } // Empty tree\n\n    if (this.left && this.left.height === undefined) { throw new Error('Undefined height for node ' + this.left.key) }\n    if (this.right && this.right.height === undefined) { throw new Error('Undefined height for node ' + this.right.key) }\n    if (this.height === undefined) { throw new Error('Undefined height for node ' + this.key) }\n\n    const leftH = this.left ? this.left.height : 0\n    const rightH = this.right ? this.right.height : 0\n\n    if (this.height !== 1 + Math.max(leftH, rightH)) { throw new Error('Height constraint failed for node ' + this.key) }\n    if (this.left) { this.left.checkHeightCorrect() }\n    if (this.right) { this.right.checkHeightCorrect() }\n  }\n\n  /**\n   * Return the balance factor\n   */\n  balanceFactor () {\n    const leftH = this.left ? this.left.height : 0\n    const rightH = this.right ? this.right.height : 0\n    return leftH - rightH\n  }\n\n  /**\n   * Check that the balance factors are all between -1 and 1\n   */\n  checkBalanceFactors () {\n    if (Math.abs(this.balanceFactor()) > 1) { throw new Error('Tree is unbalanced at node ' + this.key) }\n\n    if (this.left) { this.left.checkBalanceFactors() }\n    if (this.right) { this.right.checkBalanceFactors() }\n  }\n\n  /**\n   * When checking if the BST conditions are met, also check that the heights are correct\n   * and the tree is balanced\n   */\n  checkIsAVLT () {\n    super.checkIsBST()\n    this.checkHeightCorrect()\n    this.checkBalanceFactors()\n  }\n\n  /**\n   * Perform a right rotation of the tree if possible\n   * and return the root of the resulting tree\n   * The resulting tree's nodes' heights are also updated\n   */\n  rightRotation () {\n    const q = this\n    const p = this.left\n\n    if (!p) return q // No change\n\n    const b = p.right\n\n    // Alter tree structure\n    if (q.parent) {\n      p.parent = q.parent\n      if (q.parent.left === q) q.parent.left = p\n      else q.parent.right = p\n    } else {\n      p.parent = null\n    }\n    p.right = q\n    q.parent = p\n    q.left = b\n    if (b) { b.parent = q }\n\n    // Update heights\n    const ah = p.left ? p.left.height : 0\n    const bh = b ? b.height : 0\n    const ch = q.right ? q.right.height : 0\n    q.height = Math.max(bh, ch) + 1\n    p.height = Math.max(ah, q.height) + 1\n\n    return p\n  }\n\n  /**\n   * Perform a left rotation of the tree if possible\n   * and return the root of the resulting tree\n   * The resulting tree's nodes' heights are also updated\n   */\n  leftRotation () {\n    const p = this\n    const q = this.right\n\n    if (!q) { return this } // No change\n\n    const b = q.left\n\n    // Alter tree structure\n    if (p.parent) {\n      q.parent = p.parent\n      if (p.parent.left === p) p.parent.left = q\n      else p.parent.right = q\n    } else {\n      q.parent = null\n    }\n    q.left = p\n    p.parent = q\n    p.right = b\n    if (b) { b.parent = p }\n\n    // Update heights\n    const ah = p.left ? p.left.height : 0\n    const bh = b ? b.height : 0\n    const ch = q.right ? q.right.height : 0\n    p.height = Math.max(ah, bh) + 1\n    q.height = Math.max(ch, p.height) + 1\n\n    return q\n  }\n\n  /**\n   * Modify the tree if its right subtree is too small compared to the left\n   * Return the new root if any\n   */\n  rightTooSmall () {\n    if (this.balanceFactor() <= 1) return this // Right is not too small, don't change\n\n    if (this.left.balanceFactor() < 0) this.left.leftRotation()\n\n    return this.rightRotation()\n  }\n\n  /**\n   * Modify the tree if its left subtree is too small compared to the right\n   * Return the new root if any\n   */\n  leftTooSmall () {\n    if (this.balanceFactor() >= -1) { return this } // Left is not too small, don't change\n\n    if (this.right.balanceFactor() > 0) this.right.rightRotation()\n\n    return this.leftRotation()\n  }\n\n  /**\n   * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n   * in the insert and delete functions).\n   * Returns the new root of the tree\n   * Of course, the first element of the path must be the root of the tree\n   */\n  rebalanceAlongPath (path) {\n    let newRoot = this\n    let rotated\n    let i\n\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) {\n      delete this.height\n      return this\n    } // Empty tree\n\n    // Rebalance the tree and update all heights\n    for (i = path.length - 1; i >= 0; i -= 1) {\n      path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0)\n\n      if (path[i].balanceFactor() > 1) {\n        rotated = path[i].rightTooSmall()\n        if (i === 0) newRoot = rotated\n      }\n\n      if (path[i].balanceFactor() < -1) {\n        rotated = path[i].leftTooSmall()\n        if (i === 0) newRoot = rotated\n      }\n    }\n\n    return newRoot\n  }\n\n  /**\n   * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n   * Return a pointer to the root node, which may have changed\n   */\n  insert (key, value) {\n    const insertPath = []\n    let currentNode = this\n\n    // Empty tree, insert as root\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) {\n      this.key = key\n      this.data.push(value)\n      this.height = 1\n      return this\n    }\n\n    // Insert new leaf at the right place\n    while (true) {\n      // Same key: no change in the tree structure\n      if (currentNode.compareKeys(currentNode.key, key) === 0) {\n        if (currentNode.unique) {\n          const err = new Error(`Can't insert key ${key}, it violates the unique constraint`)\n          err.key = key\n          err.errorType = 'uniqueViolated'\n          throw err\n        } else currentNode.data.push(value)\n        return this\n      }\n\n      insertPath.push(currentNode)\n\n      if (currentNode.compareKeys(key, currentNode.key) < 0) {\n        if (!currentNode.left) {\n          insertPath.push(currentNode.createLeftChild({ key: key, value: value }))\n          break\n        } else currentNode = currentNode.left\n      } else {\n        if (!currentNode.right) {\n          insertPath.push(currentNode.createRightChild({ key: key, value: value }))\n          break\n        } else currentNode = currentNode.right\n      }\n    }\n\n    return this.rebalanceAlongPath(insertPath)\n  }\n\n  /**\n   * Delete a key or just a value and return the new root of the tree\n   * @param {Key} key\n   * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n   */\n  delete (key, value) {\n    const newData = []\n    let replaceWith\n    let currentNode = this\n    const deletePath = []\n\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return this // Empty tree\n\n    // Either no match is found and the function will return from within the loop\n    // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n    while (true) {\n      if (currentNode.compareKeys(key, currentNode.key) === 0) { break }\n\n      deletePath.push(currentNode)\n\n      if (currentNode.compareKeys(key, currentNode.key) < 0) {\n        if (currentNode.left) {\n          currentNode = currentNode.left\n        } else return this // Key not found, no modification\n      } else {\n        // currentNode.compareKeys(key, currentNode.key) is > 0\n        if (currentNode.right) {\n          currentNode = currentNode.right\n        } else return this // Key not found, no modification\n      }\n    }\n\n    // Delete only a value (no tree modification)\n    if (currentNode.data.length > 1 && value !== undefined) {\n      currentNode.data.forEach(function (d) {\n        if (!currentNode.checkValueEquality(d, value)) newData.push(d)\n      })\n      currentNode.data = newData\n      return this\n    }\n\n    // Delete a whole node\n\n    // Leaf\n    if (!currentNode.left && !currentNode.right) {\n      if (currentNode === this) { // This leaf is also the root\n        delete currentNode.key\n        currentNode.data = []\n        delete currentNode.height\n        return this\n      } else {\n        if (currentNode.parent.left === currentNode) currentNode.parent.left = null\n        else currentNode.parent.right = null\n        return this.rebalanceAlongPath(deletePath)\n      }\n    }\n\n    // Node with only one child\n    if (!currentNode.left || !currentNode.right) {\n      replaceWith = currentNode.left ? currentNode.left : currentNode.right\n\n      if (currentNode === this) { // This node is also the root\n        replaceWith.parent = null\n        return replaceWith // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n      } else {\n        if (currentNode.parent.left === currentNode) {\n          currentNode.parent.left = replaceWith\n          replaceWith.parent = currentNode.parent\n        } else {\n          currentNode.parent.right = replaceWith\n          replaceWith.parent = currentNode.parent\n        }\n\n        return this.rebalanceAlongPath(deletePath)\n      }\n    }\n\n    // Node with two children\n    // Use the in-order predecessor (no need to randomize since we actively rebalance)\n    deletePath.push(currentNode)\n    replaceWith = currentNode.left\n\n    // Special case: the in-order predecessor is right below the node to delete\n    if (!replaceWith.right) {\n      currentNode.key = replaceWith.key\n      currentNode.data = replaceWith.data\n      currentNode.left = replaceWith.left\n      if (replaceWith.left) { replaceWith.left.parent = currentNode }\n      return this.rebalanceAlongPath(deletePath)\n    }\n\n    // After this loop, replaceWith is the right-most leaf in the left subtree\n    // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n    while (true) {\n      if (replaceWith.right) {\n        deletePath.push(replaceWith)\n        replaceWith = replaceWith.right\n      } else break\n    }\n\n    currentNode.key = replaceWith.key\n    currentNode.data = replaceWith.data\n\n    replaceWith.parent.right = replaceWith.left\n    if (replaceWith.left) replaceWith.left.parent = replaceWith.parent\n\n    return this.rebalanceAlongPath(deletePath)\n  }\n}\n\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\nAVLTree._AVLTree = _AVLTree;\n\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments)\n  }\n})\n\n// Interface\nmodule.exports = AVLTree\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/binary-search-tree/lib/avltree.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/binary-search-tree/lib/bst.js":
/*!**************************************************************!*\
  !*** ./node_modules/@seald-io/binary-search-tree/lib/bst.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Simple binary search tree\n */\nconst customUtils = __webpack_require__(/*! ./customUtils */ \"./node_modules/@seald-io/binary-search-tree/lib/customUtils.js\")\n\nclass BinarySearchTree {\n  /**\n   * Constructor\n   * @param {Object} options Optional\n   * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n   * @param {Key}      options.key Initialize this BST's key with key\n   * @param {Value}    options.value Initialize this BST's data with [value]\n   * @param {Function} options.compareKeys Initialize this BST's compareKeys\n   */\n  constructor (options) {\n    options = options || {}\n\n    this.left = null\n    this.right = null\n    this.parent = options.parent !== undefined ? options.parent : null\n    if (Object.prototype.hasOwnProperty.call(options, 'key')) { this.key = options.key }\n    this.data = Object.prototype.hasOwnProperty.call(options, 'value') ? [options.value] : []\n    this.unique = options.unique || false\n\n    this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction\n    this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality\n  }\n\n  /**\n   * Get the descendant with max key\n   */\n  getMaxKeyDescendant () {\n    if (this.right) return this.right.getMaxKeyDescendant()\n    else return this\n  }\n\n  /**\n   * Get the maximum key\n   */\n  getMaxKey () {\n    return this.getMaxKeyDescendant().key\n  }\n\n  /**\n   * Get the descendant with min key\n   */\n  getMinKeyDescendant () {\n    if (this.left) return this.left.getMinKeyDescendant()\n    else return this\n  }\n\n  /**\n   * Get the minimum key\n   */\n  getMinKey () {\n    return this.getMinKeyDescendant().key\n  }\n\n  /**\n   * Check that all nodes (incl. leaves) fullfil condition given by fn\n   * test is a function passed every (key, data) and which throws if the condition is not met\n   */\n  checkAllNodesFullfillCondition (test) {\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return\n\n    test(this.key, this.data)\n    if (this.left) this.left.checkAllNodesFullfillCondition(test)\n    if (this.right) this.right.checkAllNodesFullfillCondition(test)\n  }\n\n  /**\n   * Check that the core BST properties on node ordering are verified\n   * Throw if they aren't\n   */\n  checkNodeOrdering () {\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return\n\n    if (this.left) {\n      this.left.checkAllNodesFullfillCondition(k => {\n        if (this.compareKeys(k, this.key) >= 0) throw new Error(`Tree with root ${this.key} is not a binary search tree`)\n      })\n      this.left.checkNodeOrdering()\n    }\n\n    if (this.right) {\n      this.right.checkAllNodesFullfillCondition(k => {\n        if (this.compareKeys(k, this.key) <= 0) throw new Error(`Tree with root ${this.key} is not a binary search tree`)\n      })\n      this.right.checkNodeOrdering()\n    }\n  }\n\n  /**\n   * Check that all pointers are coherent in this tree\n   */\n  checkInternalPointers () {\n    if (this.left) {\n      if (this.left.parent !== this) throw new Error(`Parent pointer broken for key ${this.key}`)\n      this.left.checkInternalPointers()\n    }\n\n    if (this.right) {\n      if (this.right.parent !== this) throw new Error(`Parent pointer broken for key ${this.key}`)\n      this.right.checkInternalPointers()\n    }\n  }\n\n  /**\n   * Check that a tree is a BST as defined here (node ordering and pointer references)\n   */\n  checkIsBST () {\n    this.checkNodeOrdering()\n    this.checkInternalPointers()\n    if (this.parent) throw new Error(\"The root shouldn't have a parent\")\n  }\n\n  /**\n   * Get number of keys inserted\n   */\n  getNumberOfKeys () {\n    let res\n\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return 0\n\n    res = 1\n    if (this.left) res += this.left.getNumberOfKeys()\n    if (this.right) res += this.right.getNumberOfKeys()\n\n    return res\n  }\n\n  /**\n   * Create a BST similar (i.e. same options except for key and value) to the current one\n   * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n   * @param {Object} options see constructor\n   */\n  createSimilar (options) {\n    options = options || {}\n    options.unique = this.unique\n    options.compareKeys = this.compareKeys\n    options.checkValueEquality = this.checkValueEquality\n\n    return new this.constructor(options)\n  }\n\n  /**\n   * Create the left child of this BST and return it\n   */\n  createLeftChild (options) {\n    const leftChild = this.createSimilar(options)\n    leftChild.parent = this\n    this.left = leftChild\n\n    return leftChild\n  }\n\n  /**\n   * Create the right child of this BST and return it\n   */\n  createRightChild (options) {\n    const rightChild = this.createSimilar(options)\n    rightChild.parent = this\n    this.right = rightChild\n\n    return rightChild\n  }\n\n  /**\n   * Insert a new element\n   */\n  insert (key, value) {\n    // Empty tree, insert as root\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) {\n      this.key = key\n      this.data.push(value)\n      return\n    }\n\n    // Same key as root\n    if (this.compareKeys(this.key, key) === 0) {\n      if (this.unique) {\n        const err = new Error(`Can't insert key ${key}, it violates the unique constraint`)\n        err.key = key\n        err.errorType = 'uniqueViolated'\n        throw err\n      } else this.data.push(value)\n      return\n    }\n\n    if (this.compareKeys(key, this.key) < 0) {\n      // Insert in left subtree\n      if (this.left) this.left.insert(key, value)\n      else this.createLeftChild({ key: key, value: value })\n    } else {\n      // Insert in right subtree\n      if (this.right) this.right.insert(key, value)\n      else this.createRightChild({ key: key, value: value })\n    }\n  }\n\n  /**\n   * Search for all data corresponding to a key\n   */\n  search (key) {\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return []\n\n    if (this.compareKeys(this.key, key) === 0) return this.data\n\n    if (this.compareKeys(key, this.key) < 0) {\n      if (this.left) return this.left.search(key)\n      else return []\n    } else {\n      if (this.right) return this.right.search(key)\n      else return []\n    }\n  }\n\n  /**\n   * Return a function that tells whether a given key matches a lower bound\n   */\n  getLowerBoundMatcher (query) {\n    // No lower bound\n    if (!Object.prototype.hasOwnProperty.call(query, '$gt') && !Object.prototype.hasOwnProperty.call(query, '$gte')) return () => true\n\n    if (Object.prototype.hasOwnProperty.call(query, '$gt') && Object.prototype.hasOwnProperty.call(query, '$gte')) {\n      if (this.compareKeys(query.$gte, query.$gt) === 0) return key => this.compareKeys(key, query.$gt) > 0\n\n      if (this.compareKeys(query.$gte, query.$gt) > 0) return key => this.compareKeys(key, query.$gte) >= 0\n      else return key => this.compareKeys(key, query.$gt) > 0\n    }\n\n    if (Object.prototype.hasOwnProperty.call(query, '$gt')) return key => this.compareKeys(key, query.$gt) > 0\n    else return key => this.compareKeys(key, query.$gte) >= 0\n  }\n\n  /**\n   * Return a function that tells whether a given key matches an upper bound\n   */\n  getUpperBoundMatcher (query) {\n    // No lower bound\n    if (!Object.prototype.hasOwnProperty.call(query, '$lt') && !Object.prototype.hasOwnProperty.call(query, '$lte')) return () => true\n\n    if (Object.prototype.hasOwnProperty.call(query, '$lt') && Object.prototype.hasOwnProperty.call(query, '$lte')) {\n      if (this.compareKeys(query.$lte, query.$lt) === 0) return key => this.compareKeys(key, query.$lt) < 0\n\n      if (this.compareKeys(query.$lte, query.$lt) < 0) return key => this.compareKeys(key, query.$lte) <= 0\n      else return key => this.compareKeys(key, query.$lt) < 0\n    }\n\n    if (Object.prototype.hasOwnProperty.call(query, '$lt')) return key => this.compareKeys(key, query.$lt) < 0\n    else return key => this.compareKeys(key, query.$lte) <= 0\n  }\n\n  /**\n   * Get all data for a key between bounds\n   * Return it in key order\n   * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n   * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n   */\n  betweenBounds (query, lbm, ubm) {\n    const res = []\n\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return [] // Empty tree\n\n    lbm = lbm || this.getLowerBoundMatcher(query)\n    ubm = ubm || this.getUpperBoundMatcher(query)\n\n    if (lbm(this.key) && this.left) append(res, this.left.betweenBounds(query, lbm, ubm))\n    if (lbm(this.key) && ubm(this.key)) append(res, this.data)\n    if (ubm(this.key) && this.right) append(res, this.right.betweenBounds(query, lbm, ubm))\n\n    return res\n  }\n\n  /**\n   * Delete the current node if it is a leaf\n   * Return true if it was deleted\n   */\n  deleteIfLeaf () {\n    if (this.left || this.right) return false\n\n    // The leaf is itself a root\n    if (!this.parent) {\n      delete this.key\n      this.data = []\n      return true\n    }\n\n    if (this.parent.left === this) this.parent.left = null\n    else this.parent.right = null\n\n    return true\n  }\n\n  /**\n   * Delete the current node if it has only one child\n   * Return true if it was deleted\n   */\n  deleteIfOnlyOneChild () {\n    let child\n\n    if (this.left && !this.right) child = this.left\n    if (!this.left && this.right) child = this.right\n    if (!child) return false\n\n    // Root\n    if (!this.parent) {\n      this.key = child.key\n      this.data = child.data\n\n      this.left = null\n      if (child.left) {\n        this.left = child.left\n        child.left.parent = this\n      }\n\n      this.right = null\n      if (child.right) {\n        this.right = child.right\n        child.right.parent = this\n      }\n\n      return true\n    }\n\n    if (this.parent.left === this) {\n      this.parent.left = child\n      child.parent = this.parent\n    } else {\n      this.parent.right = child\n      child.parent = this.parent\n    }\n\n    return true\n  }\n\n  /**\n   * Delete a key or just a value\n   * @param {Key} key\n   * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n   */\n  delete (key, value) {\n    const newData = []\n    let replaceWith\n\n    if (!Object.prototype.hasOwnProperty.call(this, 'key')) return\n\n    if (this.compareKeys(key, this.key) < 0) {\n      if (this.left) this.left.delete(key, value)\n      return\n    }\n\n    if (this.compareKeys(key, this.key) > 0) {\n      if (this.right) this.right.delete(key, value)\n      return\n    }\n\n    if (!this.compareKeys(key, this.key) === 0) return\n\n    // Delete only a value\n    if (this.data.length > 1 && value !== undefined) {\n      this.data.forEach(d => {\n        if (!this.checkValueEquality(d, value)) newData.push(d)\n      })\n      this.data = newData\n      return\n    }\n\n    // Delete the whole node\n    if (this.deleteIfLeaf()) return\n\n    if (this.deleteIfOnlyOneChild()) return\n\n    // We are in the case where the node to delete has two children\n    if (Math.random() >= 0.5) { // Randomize replacement to avoid unbalancing the tree too much\n      // Use the in-order predecessor\n      replaceWith = this.left.getMaxKeyDescendant()\n\n      this.key = replaceWith.key\n      this.data = replaceWith.data\n\n      if (this === replaceWith.parent) { // Special case\n        this.left = replaceWith.left\n        if (replaceWith.left) replaceWith.left.parent = replaceWith.parent\n      } else {\n        replaceWith.parent.right = replaceWith.left\n        if (replaceWith.left) replaceWith.left.parent = replaceWith.parent\n      }\n    } else {\n      // Use the in-order successor\n      replaceWith = this.right.getMinKeyDescendant()\n\n      this.key = replaceWith.key\n      this.data = replaceWith.data\n\n      if (this === replaceWith.parent) { // Special case\n        this.right = replaceWith.right\n        if (replaceWith.right) replaceWith.right.parent = replaceWith.parent\n      } else {\n        replaceWith.parent.left = replaceWith.right\n        if (replaceWith.right) replaceWith.right.parent = replaceWith.parent\n      }\n    }\n  }\n\n  /**\n   * Execute a function on every node of the tree, in key order\n   * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n   */\n  executeOnEveryNode (fn) {\n    if (this.left) this.left.executeOnEveryNode(fn)\n    fn(this)\n    if (this.right) this.right.executeOnEveryNode(fn)\n  }\n\n  /**\n   * Pretty print a tree\n   * @param {Boolean} printData To print the nodes' data along with the key\n   */\n  prettyPrint (printData, spacing) {\n    spacing = spacing || ''\n\n    console.log(`${spacing}* ${this.key}`)\n    if (printData) console.log(`${spacing}* ${this.data}`)\n\n    if (!this.left && !this.right) return\n\n    if (this.left) this.left.prettyPrint(printData, `${spacing}  `)\n    else console.log(`${spacing}  *`)\n\n    if (this.right) this.right.prettyPrint(printData, `${spacing}  `)\n    else console.log(`${spacing}  *`)\n  }\n}\n\n// ================================\n// Methods used to test the tree\n// ================================\n\n// ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n// Append all elements in toAppend to array\nfunction append (array, toAppend) {\n  for (let i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i])\n  }\n}\n\n// Interface\nmodule.exports = BinarySearchTree\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/binary-search-tree/lib/bst.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/binary-search-tree/lib/customUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@seald-io/binary-search-tree/lib/customUtils.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nconst getRandomArray = n => {\n  if (n === 0) return []\n  if (n === 1) return [0]\n\n  const res = getRandomArray(n - 1)\n  const next = Math.floor(Math.random() * n)\n  res.splice(next, 0, n - 1) // Add n-1 at a random position in the array\n\n  return res\n}\n\nmodule.exports.getRandomArray = getRandomArray\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nconst defaultCompareKeysFunction = (a, b) => {\n  if (a < b) return -1\n  if (a > b) return 1\n  if (a === b) return 0\n\n  const err = new Error(\"Couldn't compare elements\")\n  err.a = a\n  err.b = b\n  throw err\n}\n\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nconst defaultCheckValueEquality = (a, b) => a === b\n\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL2JpbmFyeS1zZWFyY2gtdHJlZS9saWIvY3VzdG9tVXRpbHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL0BzZWFsZC1pby9iaW5hcnktc2VhcmNoLXRyZWUvbGliL2N1c3RvbVV0aWxzLmpzP2UwMzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm4gYW4gYXJyYXkgd2l0aCB0aGUgbnVtYmVycyBmcm9tIDAgdG8gbi0xLCBpbiBhIHJhbmRvbSBvcmRlclxuICovXG5jb25zdCBnZXRSYW5kb21BcnJheSA9IG4gPT4ge1xuICBpZiAobiA9PT0gMCkgcmV0dXJuIFtdXG4gIGlmIChuID09PSAxKSByZXR1cm4gWzBdXG5cbiAgY29uc3QgcmVzID0gZ2V0UmFuZG9tQXJyYXkobiAtIDEpXG4gIGNvbnN0IG5leHQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBuKVxuICByZXMuc3BsaWNlKG5leHQsIDAsIG4gLSAxKSAvLyBBZGQgbi0xIGF0IGEgcmFuZG9tIHBvc2l0aW9uIGluIHRoZSBhcnJheVxuXG4gIHJldHVybiByZXNcbn1cblxubW9kdWxlLmV4cG9ydHMuZ2V0UmFuZG9tQXJyYXkgPSBnZXRSYW5kb21BcnJheVxuXG4vKlxuICogRGVmYXVsdCBjb21wYXJlS2V5cyBmdW5jdGlvbiB3aWxsIHdvcmsgZm9yIG51bWJlcnMsIHN0cmluZ3MgYW5kIGRhdGVzXG4gKi9cbmNvbnN0IGRlZmF1bHRDb21wYXJlS2V5c0Z1bmN0aW9uID0gKGEsIGIpID0+IHtcbiAgaWYgKGEgPCBiKSByZXR1cm4gLTFcbiAgaWYgKGEgPiBiKSByZXR1cm4gMVxuICBpZiAoYSA9PT0gYikgcmV0dXJuIDBcblxuICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoXCJDb3VsZG4ndCBjb21wYXJlIGVsZW1lbnRzXCIpXG4gIGVyci5hID0gYVxuICBlcnIuYiA9IGJcbiAgdGhyb3cgZXJyXG59XG5cbm1vZHVsZS5leHBvcnRzLmRlZmF1bHRDb21wYXJlS2V5c0Z1bmN0aW9uID0gZGVmYXVsdENvbXBhcmVLZXlzRnVuY3Rpb25cblxuLyoqXG4gKiBDaGVjayB3aGV0aGVyIHR3byB2YWx1ZXMgYXJlIGVxdWFsICh1c2VkIGluIG5vbi11bmlxdWUgZGVsZXRpb24pXG4gKi9cbmNvbnN0IGRlZmF1bHRDaGVja1ZhbHVlRXF1YWxpdHkgPSAoYSwgYikgPT4gYSA9PT0gYlxuXG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0Q2hlY2tWYWx1ZUVxdWFsaXR5ID0gZGVmYXVsdENoZWNrVmFsdWVFcXVhbGl0eVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/binary-search-tree/lib/customUtils.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/index.js":
/*!**********************************************!*\
  !*** ./node_modules/@seald-io/nedb/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Datastore = __webpack_require__(/*! ./lib/datastore */ \"./node_modules/@seald-io/nedb/lib/datastore.js\")\n\nmodule.exports = Datastore\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvaW5kZXguanM/NjE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEYXRhc3RvcmUgPSByZXF1aXJlKCcuL2xpYi9kYXRhc3RvcmUnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IERhdGFzdG9yZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/index.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/byline.js":
/*!***************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/byline.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Forked from https://github.com/jahewson/node-byline\n\n// Copyright (C) 2011-2015 John Hewson\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n/**\n * @module byline\n * @private\n */\nconst stream = __webpack_require__(/*! stream */ \"stream\")\nconst timers = __webpack_require__(/*! timers */ \"timers\")\n\nconst createLineStream = (readStream, options) => {\n  if (!readStream) throw new Error('expected readStream')\n  if (!readStream.readable) throw new Error('readStream must be readable')\n  const ls = new LineStream(options)\n  readStream.pipe(ls)\n  return ls\n}\n\n/**\n * Fork from {@link https://github.com/jahewson/node-byline}.\n * @see https://github.com/jahewson/node-byline\n * @alias module:byline.LineStream\n * @private\n */\nclass LineStream extends stream.Transform {\n  constructor (options) {\n    super(options)\n    options = options || {}\n\n    // use objectMode to stop the output from being buffered\n    // which re-concatanates the lines, just without newlines.\n    this._readableState.objectMode = true\n    this._lineBuffer = []\n    this._keepEmptyLines = options.keepEmptyLines || false\n    this._lastChunkEndedWithCR = false\n\n    // take the source's encoding if we don't have one\n    this.once('pipe', src => {\n      if (!this.encoding && src instanceof stream.Readable) this.encoding = src._readableState.encoding // but we can't do this for old-style streams\n    })\n  }\n\n  _transform (chunk, encoding, done) {\n    // decode binary chunks as UTF-8\n    encoding = encoding || 'utf8'\n\n    if (Buffer.isBuffer(chunk)) {\n      if (encoding === 'buffer') {\n        chunk = chunk.toString() // utf8\n        encoding = 'utf8'\n      } else chunk = chunk.toString(encoding)\n    }\n    this._chunkEncoding = encoding\n\n    // see: http://www.unicode.org/reports/tr18/#Line_Boundaries\n    const lines = chunk.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g)\n\n    // don't split CRLF which spans chunks\n    if (this._lastChunkEndedWithCR && chunk[0] === '\\n') lines.shift()\n\n    if (this._lineBuffer.length > 0) {\n      this._lineBuffer[this._lineBuffer.length - 1] += lines[0]\n      lines.shift()\n    }\n\n    this._lastChunkEndedWithCR = chunk[chunk.length - 1] === '\\r'\n    this._lineBuffer = this._lineBuffer.concat(lines)\n    this._pushBuffer(encoding, 1, done)\n  }\n\n  _pushBuffer (encoding, keep, done) {\n    // always buffer the last (possibly partial) line\n    while (this._lineBuffer.length > keep) {\n      const line = this._lineBuffer.shift()\n      // skip empty lines\n      if (this._keepEmptyLines || line.length > 0) {\n        if (!this.push(this._reencode(line, encoding))) {\n          // when the high-water mark is reached, defer pushes until the next tick\n          timers.setImmediate(() => { this._pushBuffer(encoding, keep, done) })\n          return\n        }\n      }\n    }\n    done()\n  }\n\n  _flush (done) {\n    this._pushBuffer(this._chunkEncoding, 0, done)\n  }\n\n  // see Readable::push\n  _reencode (line, chunkEncoding) {\n    if (this.encoding && this.encoding !== chunkEncoding) return Buffer.from(line, chunkEncoding).toString(this.encoding)\n    else if (this.encoding) return line // this should be the most common case, i.e. we're using an encoded source stream\n    else return Buffer.from(line, chunkEncoding)\n  }\n}\n\nmodule.exports = createLineStream\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL2J5bGluZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9Ac2VhbGQtaW8vbmVkYi9saWIvYnlsaW5lLmpzPzhjZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRm9ya2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2phaGV3c29uL25vZGUtYnlsaW5lXG5cbi8vIENvcHlyaWdodCAoQykgMjAxMS0yMDE1IEpvaG4gSGV3c29uXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG9cbi8vIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlXG4vLyByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Jcbi8vIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbi8vIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1Ncbi8vIElOIFRIRSBTT0ZUV0FSRS5cbi8qKlxuICogQG1vZHVsZSBieWxpbmVcbiAqIEBwcml2YXRlXG4gKi9cbmNvbnN0IHN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpXG5jb25zdCB0aW1lcnMgPSByZXF1aXJlKCd0aW1lcnMnKVxuXG5jb25zdCBjcmVhdGVMaW5lU3RyZWFtID0gKHJlYWRTdHJlYW0sIG9wdGlvbnMpID0+IHtcbiAgaWYgKCFyZWFkU3RyZWFtKSB0aHJvdyBuZXcgRXJyb3IoJ2V4cGVjdGVkIHJlYWRTdHJlYW0nKVxuICBpZiAoIXJlYWRTdHJlYW0ucmVhZGFibGUpIHRocm93IG5ldyBFcnJvcigncmVhZFN0cmVhbSBtdXN0IGJlIHJlYWRhYmxlJylcbiAgY29uc3QgbHMgPSBuZXcgTGluZVN0cmVhbShvcHRpb25zKVxuICByZWFkU3RyZWFtLnBpcGUobHMpXG4gIHJldHVybiBsc1xufVxuXG4vKipcbiAqIEZvcmsgZnJvbSB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2phaGV3c29uL25vZGUtYnlsaW5lfS5cbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2phaGV3c29uL25vZGUtYnlsaW5lXG4gKiBAYWxpYXMgbW9kdWxlOmJ5bGluZS5MaW5lU3RyZWFtXG4gKiBAcHJpdmF0ZVxuICovXG5jbGFzcyBMaW5lU3RyZWFtIGV4dGVuZHMgc3RyZWFtLlRyYW5zZm9ybSB7XG4gIGNvbnN0cnVjdG9yIChvcHRpb25zKSB7XG4gICAgc3VwZXIob3B0aW9ucylcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gICAgLy8gdXNlIG9iamVjdE1vZGUgdG8gc3RvcCB0aGUgb3V0cHV0IGZyb20gYmVpbmcgYnVmZmVyZWRcbiAgICAvLyB3aGljaCByZS1jb25jYXRhbmF0ZXMgdGhlIGxpbmVzLCBqdXN0IHdpdGhvdXQgbmV3bGluZXMuXG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5vYmplY3RNb2RlID0gdHJ1ZVxuICAgIHRoaXMuX2xpbmVCdWZmZXIgPSBbXVxuICAgIHRoaXMuX2tlZXBFbXB0eUxpbmVzID0gb3B0aW9ucy5rZWVwRW1wdHlMaW5lcyB8fCBmYWxzZVxuICAgIHRoaXMuX2xhc3RDaHVua0VuZGVkV2l0aENSID0gZmFsc2VcblxuICAgIC8vIHRha2UgdGhlIHNvdXJjZSdzIGVuY29kaW5nIGlmIHdlIGRvbid0IGhhdmUgb25lXG4gICAgdGhpcy5vbmNlKCdwaXBlJywgc3JjID0+IHtcbiAgICAgIGlmICghdGhpcy5lbmNvZGluZyAmJiBzcmMgaW5zdGFuY2VvZiBzdHJlYW0uUmVhZGFibGUpIHRoaXMuZW5jb2RpbmcgPSBzcmMuX3JlYWRhYmxlU3RhdGUuZW5jb2RpbmcgLy8gYnV0IHdlIGNhbid0IGRvIHRoaXMgZm9yIG9sZC1zdHlsZSBzdHJlYW1zXG4gICAgfSlcbiAgfVxuXG4gIF90cmFuc2Zvcm0gKGNodW5rLCBlbmNvZGluZywgZG9uZSkge1xuICAgIC8vIGRlY29kZSBiaW5hcnkgY2h1bmtzIGFzIFVURi04XG4gICAgZW5jb2RpbmcgPSBlbmNvZGluZyB8fCAndXRmOCdcblxuICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoY2h1bmspKSB7XG4gICAgICBpZiAoZW5jb2RpbmcgPT09ICdidWZmZXInKSB7XG4gICAgICAgIGNodW5rID0gY2h1bmsudG9TdHJpbmcoKSAvLyB1dGY4XG4gICAgICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgICB9IGVsc2UgY2h1bmsgPSBjaHVuay50b1N0cmluZyhlbmNvZGluZylcbiAgICB9XG4gICAgdGhpcy5fY2h1bmtFbmNvZGluZyA9IGVuY29kaW5nXG5cbiAgICAvLyBzZWU6IGh0dHA6Ly93d3cudW5pY29kZS5vcmcvcmVwb3J0cy90cjE4LyNMaW5lX0JvdW5kYXJpZXNcbiAgICBjb25zdCBsaW5lcyA9IGNodW5rLnNwbGl0KC9cXHJcXG58W1xcblxcdlxcZlxcclxceDg1XFx1MjAyOFxcdTIwMjldL2cpXG5cbiAgICAvLyBkb24ndCBzcGxpdCBDUkxGIHdoaWNoIHNwYW5zIGNodW5rc1xuICAgIGlmICh0aGlzLl9sYXN0Q2h1bmtFbmRlZFdpdGhDUiAmJiBjaHVua1swXSA9PT0gJ1xcbicpIGxpbmVzLnNoaWZ0KClcblxuICAgIGlmICh0aGlzLl9saW5lQnVmZmVyLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuX2xpbmVCdWZmZXJbdGhpcy5fbGluZUJ1ZmZlci5sZW5ndGggLSAxXSArPSBsaW5lc1swXVxuICAgICAgbGluZXMuc2hpZnQoKVxuICAgIH1cblxuICAgIHRoaXMuX2xhc3RDaHVua0VuZGVkV2l0aENSID0gY2h1bmtbY2h1bmsubGVuZ3RoIC0gMV0gPT09ICdcXHInXG4gICAgdGhpcy5fbGluZUJ1ZmZlciA9IHRoaXMuX2xpbmVCdWZmZXIuY29uY2F0KGxpbmVzKVxuICAgIHRoaXMuX3B1c2hCdWZmZXIoZW5jb2RpbmcsIDEsIGRvbmUpXG4gIH1cblxuICBfcHVzaEJ1ZmZlciAoZW5jb2RpbmcsIGtlZXAsIGRvbmUpIHtcbiAgICAvLyBhbHdheXMgYnVmZmVyIHRoZSBsYXN0IChwb3NzaWJseSBwYXJ0aWFsKSBsaW5lXG4gICAgd2hpbGUgKHRoaXMuX2xpbmVCdWZmZXIubGVuZ3RoID4ga2VlcCkge1xuICAgICAgY29uc3QgbGluZSA9IHRoaXMuX2xpbmVCdWZmZXIuc2hpZnQoKVxuICAgICAgLy8gc2tpcCBlbXB0eSBsaW5lc1xuICAgICAgaWYgKHRoaXMuX2tlZXBFbXB0eUxpbmVzIHx8IGxpbmUubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAoIXRoaXMucHVzaCh0aGlzLl9yZWVuY29kZShsaW5lLCBlbmNvZGluZykpKSB7XG4gICAgICAgICAgLy8gd2hlbiB0aGUgaGlnaC13YXRlciBtYXJrIGlzIHJlYWNoZWQsIGRlZmVyIHB1c2hlcyB1bnRpbCB0aGUgbmV4dCB0aWNrXG4gICAgICAgICAgdGltZXJzLnNldEltbWVkaWF0ZSgoKSA9PiB7IHRoaXMuX3B1c2hCdWZmZXIoZW5jb2RpbmcsIGtlZXAsIGRvbmUpIH0pXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZG9uZSgpXG4gIH1cblxuICBfZmx1c2ggKGRvbmUpIHtcbiAgICB0aGlzLl9wdXNoQnVmZmVyKHRoaXMuX2NodW5rRW5jb2RpbmcsIDAsIGRvbmUpXG4gIH1cblxuICAvLyBzZWUgUmVhZGFibGU6OnB1c2hcbiAgX3JlZW5jb2RlIChsaW5lLCBjaHVua0VuY29kaW5nKSB7XG4gICAgaWYgKHRoaXMuZW5jb2RpbmcgJiYgdGhpcy5lbmNvZGluZyAhPT0gY2h1bmtFbmNvZGluZykgcmV0dXJuIEJ1ZmZlci5mcm9tKGxpbmUsIGNodW5rRW5jb2RpbmcpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpXG4gICAgZWxzZSBpZiAodGhpcy5lbmNvZGluZykgcmV0dXJuIGxpbmUgLy8gdGhpcyBzaG91bGQgYmUgdGhlIG1vc3QgY29tbW9uIGNhc2UsIGkuZS4gd2UncmUgdXNpbmcgYW4gZW5jb2RlZCBzb3VyY2Ugc3RyZWFtXG4gICAgZWxzZSByZXR1cm4gQnVmZmVyLmZyb20obGluZSwgY2h1bmtFbmNvZGluZylcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUxpbmVTdHJlYW1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/byline.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/cursor.js":
/*!***************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/cursor.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const model = __webpack_require__(/*! ./model.js */ \"./node_modules/@seald-io/nedb/lib/model.js\")\nconst { callbackify } = __webpack_require__(/*! util */ \"util\")\n\n/**\n * Has a callback\n * @callback Cursor~mapFn\n * @param {document[]} res\n * @return {*|Promise<*>}\n */\n\n/**\n * Manage access to data, be it to find, update or remove it.\n *\n * It extends `Promise` so that its methods (which return `this`) are chainable & awaitable.\n * @extends Promise\n */\nclass Cursor {\n  /**\n   * Create a new cursor for this collection.\n   * @param {Datastore} db - The datastore this cursor is bound to\n   * @param {query} query - The query this cursor will operate on\n   * @param {Cursor~mapFn} [mapFn] - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n   */\n  constructor (db, query, mapFn) {\n    /**\n     * @protected\n     * @type {Datastore}\n     */\n    this.db = db\n    /**\n     * @protected\n     * @type {query}\n     */\n    this.query = query || {}\n    /**\n     * The handler to be executed after cursor has found the results.\n     * @type {Cursor~mapFn}\n     * @protected\n     */\n    if (mapFn) this.mapFn = mapFn\n    /**\n     * @see Cursor#limit\n     * @type {undefined|number}\n     * @private\n     */\n    this._limit = undefined\n    /**\n     * @see Cursor#skip\n     * @type {undefined|number}\n     * @private\n     */\n    this._skip = undefined\n    /**\n     * @see Cursor#sort\n     * @type {undefined|Object.<string, number>}\n     * @private\n     */\n    this._sort = undefined\n    /**\n     * @see Cursor#projection\n     * @type {undefined|Object.<string, number>}\n     * @private\n     */\n    this._projection = undefined\n  }\n\n  /**\n   * Set a limit to the number of results for the given Cursor.\n   * @param {Number} limit\n   * @return {Cursor} the same instance of Cursor, (useful for chaining).\n   */\n  limit (limit) {\n    this._limit = limit\n    return this\n  }\n\n  /**\n   * Skip a number of results for the given Cursor.\n   * @param {Number} skip\n   * @return {Cursor} the same instance of Cursor, (useful for chaining).\n   */\n  skip (skip) {\n    this._skip = skip\n    return this\n  }\n\n  /**\n   * Sort results of the query for the given Cursor.\n   * @param {Object.<string, number>} sortQuery - sortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n   * @return {Cursor} the same instance of Cursor, (useful for chaining).\n   */\n  sort (sortQuery) {\n    this._sort = sortQuery\n    return this\n  }\n\n  /**\n   * Add the use of a projection to the given Cursor.\n   * @param {Object.<string, number>} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n   * { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits.\n   * @return {Cursor} the same instance of Cursor, (useful for chaining).\n   */\n  projection (projection) {\n    this._projection = projection\n    return this\n  }\n\n  /**\n   * Apply the projection.\n   *\n   * This is an internal function. You should use {@link Cursor#execAsync} or {@link Cursor#exec}.\n   * @param {document[]} candidates\n   * @return {document[]}\n   * @private\n   */\n  _project (candidates) {\n    const res = []\n    let action\n\n    if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n      return candidates\n    }\n\n    const keepId = this._projection._id !== 0\n    const { _id, ...rest } = this._projection\n    this._projection = rest\n\n    // Check for consistency\n    const keys = Object.keys(this._projection)\n    keys.forEach(k => {\n      if (action !== undefined && this._projection[k] !== action) throw new Error('Can\\'t both keep and omit fields except for _id')\n      action = this._projection[k]\n    })\n\n    // Do the actual projection\n    candidates.forEach(candidate => {\n      let toPush\n      if (action === 1) { // pick-type projection\n        toPush = { $set: {} }\n        keys.forEach(k => {\n          toPush.$set[k] = model.getDotValue(candidate, k)\n          if (toPush.$set[k] === undefined) delete toPush.$set[k]\n        })\n        toPush = model.modify({}, toPush)\n      } else { // omit-type projection\n        toPush = { $unset: {} }\n        keys.forEach(k => { toPush.$unset[k] = true })\n        toPush = model.modify(candidate, toPush)\n      }\n      if (keepId) toPush._id = candidate._id\n      else delete toPush._id\n      res.push(toPush)\n    })\n\n    return res\n  }\n\n  /**\n   * Get all matching elements\n   * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n   * This is an internal function, use execAsync which uses the executor\n   * @return {document[]|Promise<*>}\n   * @private\n   */\n  async _execAsync () {\n    let res = []\n    let added = 0\n    let skipped = 0\n\n    const candidates = await this.db._getCandidatesAsync(this.query)\n\n    for (const candidate of candidates) {\n      if (model.match(candidate, this.query)) {\n        // If a sort is defined, wait for the results to be sorted before applying limit and skip\n        if (!this._sort) {\n          if (this._skip && this._skip > skipped) skipped += 1\n          else {\n            res.push(candidate)\n            added += 1\n            if (this._limit && this._limit <= added) break\n          }\n        } else res.push(candidate)\n      }\n    }\n\n    // Apply all sorts\n    if (this._sort) {\n      // Sorting\n      const criteria = Object.entries(this._sort).map(([key, direction]) => ({ key, direction }))\n      res.sort((a, b) => {\n        for (const criterion of criteria) {\n          const compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), this.db.compareStrings)\n          if (compare !== 0) return compare\n        }\n        return 0\n      })\n\n      // Applying limit and skip\n      const limit = this._limit || res.length\n      const skip = this._skip || 0\n\n      res = res.slice(skip, skip + limit)\n    }\n\n    // Apply projection\n    res = this._project(res)\n    if (this.mapFn) return this.mapFn(res)\n    return res\n  }\n\n  /**\n   * @callback Cursor~execCallback\n   * @param {Error} err\n   * @param {document[]|*} res If a mapFn was given to the Cursor, then the type of this parameter is the one returned by the mapFn.\n   */\n\n  /**\n   * Callback version of {@link Cursor#exec}.\n   * @param {Cursor~execCallback} _callback\n   * @see Cursor#execAsync\n   */\n  exec (_callback) {\n    callbackify(() => this.execAsync())(_callback)\n  }\n\n  /**\n   * Get all matching elements.\n   * Will return pointers to matched elements (shallow copies), returning full copies is the role of {@link Datastore#findAsync} or {@link Datastore#findOneAsync}.\n   * @return {Promise<document[]|*>}\n   * @async\n   */\n  execAsync () {\n    return this.db.executor.pushAsync(() => this._execAsync())\n  }\n\n  then (onFulfilled, onRejected) {\n    return this.execAsync().then(onFulfilled, onRejected)\n  }\n\n  catch (onRejected) {\n    return this.execAsync().catch(onRejected)\n  }\n\n  finally (onFinally) {\n    return this.execAsync().finally(onFinally)\n  }\n}\n\n// Interface\nmodule.exports = Cursor\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/cursor.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/customUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/customUtils.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Utility functions that need to be reimplemented for each environment.\n * This is the version for Node.js\n * @module customUtilsNode\n * @private\n */\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\")\n\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n * @param {number} len\n * @return {string}\n * @alias module:customUtilsNode.uid\n */\nconst uid = len => crypto.randomBytes(Math.ceil(Math.max(8, len * 2)))\n  .toString('base64')\n  .replace(/[+/]/g, '')\n  .slice(0, len)\n\n// Interface\nmodule.exports.uid = uid\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL2N1c3RvbVV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9Ac2VhbGQtaW8vbmVkYi9saWIvY3VzdG9tVXRpbHMuanM/NWQ1MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSByZWltcGxlbWVudGVkIGZvciBlYWNoIGVudmlyb25tZW50LlxuICogVGhpcyBpcyB0aGUgdmVyc2lvbiBmb3IgTm9kZS5qc1xuICogQG1vZHVsZSBjdXN0b21VdGlsc05vZGVcbiAqIEBwcml2YXRlXG4gKi9cbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpXG5cbi8qKlxuICogUmV0dXJuIGEgcmFuZG9tIGFscGhhbnVtZXJpY2FsIHN0cmluZyBvZiBsZW5ndGggbGVuXG4gKiBUaGVyZSBpcyBhIHZlcnkgc21hbGwgcHJvYmFiaWxpdHkgKGxlc3MgdGhhbiAxLzEsMDAwLDAwMCkgZm9yIHRoZSBsZW5ndGggdG8gYmUgbGVzcyB0aGFuIGxlblxuICogKGlsIHRoZSBiYXNlNjQgY29udmVyc2lvbiB5aWVsZHMgdG9vIG1hbnkgcGx1c2VzIGFuZCBzbGFzaGVzKSBidXRcbiAqIHRoYXQncyBub3QgYW4gaXNzdWUgaGVyZVxuICogVGhlIHByb2JhYmlsaXR5IG9mIGEgY29sbGlzaW9uIGlzIGV4dHJlbWVseSBzbWFsbCAobmVlZCAzKjEwXjEyIGRvY3VtZW50cyB0byBoYXZlIG9uZSBjaGFuY2UgaW4gYSBtaWxsaW9uIG9mIGEgY29sbGlzaW9uKVxuICogU2VlIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmlydGhkYXlfcHJvYmxlbVxuICogQHBhcmFtIHtudW1iZXJ9IGxlblxuICogQHJldHVybiB7c3RyaW5nfVxuICogQGFsaWFzIG1vZHVsZTpjdXN0b21VdGlsc05vZGUudWlkXG4gKi9cbmNvbnN0IHVpZCA9IGxlbiA9PiBjcnlwdG8ucmFuZG9tQnl0ZXMoTWF0aC5jZWlsKE1hdGgubWF4KDgsIGxlbiAqIDIpKSlcbiAgLnRvU3RyaW5nKCdiYXNlNjQnKVxuICAucmVwbGFjZSgvWysvXS9nLCAnJylcbiAgLnNsaWNlKDAsIGxlbilcblxuLy8gSW50ZXJmYWNlXG5tb2R1bGUuZXhwb3J0cy51aWQgPSB1aWRcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/customUtils.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/datastore.js":
/*!******************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/datastore.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventEmitter } = __webpack_require__(/*! events */ \"events\")\nconst { callbackify, deprecate } = __webpack_require__(/*! util */ \"util\")\nconst Cursor = __webpack_require__(/*! ./cursor.js */ \"./node_modules/@seald-io/nedb/lib/cursor.js\")\nconst customUtils = __webpack_require__(/*! ./customUtils.js */ \"./node_modules/@seald-io/nedb/lib/customUtils.js\")\nconst Executor = __webpack_require__(/*! ./executor.js */ \"./node_modules/@seald-io/nedb/lib/executor.js\")\nconst Index = __webpack_require__(/*! ./indexes.js */ \"./node_modules/@seald-io/nedb/lib/indexes.js\")\nconst model = __webpack_require__(/*! ./model.js */ \"./node_modules/@seald-io/nedb/lib/model.js\")\nconst Persistence = __webpack_require__(/*! ./persistence.js */ \"./node_modules/@seald-io/nedb/lib/persistence.js\")\nconst { isDate } = __webpack_require__(/*! ./utils.js */ \"./node_modules/@seald-io/nedb/lib/utils.js\")\n\n/**\n * Callback with no parameter\n * @callback NoParamCallback\n * @param {?Error} err\n */\n\n/**\n * String comparison function.\n * ```\n *   if (a < b) return -1\n *   if (a > b) return 1\n *   return 0\n * ```\n * @callback compareStrings\n * @param {string} a\n * @param {string} b\n * @return {number}\n */\n\n/**\n * Callback that returns an Array of documents.\n * @callback MultipleDocumentsCallback\n * @param {?Error} err\n * @param {?document[]} docs\n */\n\n/**\n * Callback that returns a single document.\n * @callback SingleDocumentCallback\n * @param {?Error} err\n * @param {?document} docs\n */\n\n/**\n * Generic async function.\n * @callback AsyncFunction\n * @param {...*} args\n * @return {Promise<*>}\n */\n\n/**\n * Callback with generic parameters.\n * @callback GenericCallback\n * @param {?Error} err\n * @param {...*} args\n */\n\n/**\n * Compaction event. Happens when the Datastore's Persistence has been compacted.\n * It happens when calling {@link Datastore#compactDatafileAsync}, which is called periodically if you have called\n * {@link Datastore#setAutocompactionInterval}.\n *\n * @event Datastore#event:\"compaction.done\"\n * @type {undefined}\n */\n\n/**\n * Generic document in NeDB.\n * It consists of an Object with anything you want inside.\n * @typedef document\n * @property {?string} [_id] Internal `_id` of the document, which can be `null` or undefined at some points (when not\n * inserted yet for example).\n * @type {object}\n */\n\n/**\n * Nedb query.\n *\n * Each key of a query references a field name, which can use the dot-notation to reference subfields inside nested\n * documents, arrays, arrays of subdocuments and to match a specific element of an array.\n *\n * Each value of a query can be one of the following:\n * - `string`: matches all documents which have this string as value for the referenced field name\n * - `number`: matches all documents which have this number as value for the referenced field name\n * - `Regexp`: matches all documents which have a value that matches the given `Regexp` for the referenced field name\n * - `object`: matches all documents which have this object as deep-value for the referenced field name\n * - Comparison operators: the syntax is `{ field: { $op: value } }` where `$op` is any comparison operator:\n *   - `$lt`, `$lte`: less than, less than or equal\n *   - `$gt`, `$gte`: greater than, greater than or equal\n *   - `$in`: member of. `value` must be an array of values\n *   - `$ne`, `$nin`: not equal, not a member of\n *   - `$stat`: checks whether the document posses the property `field`. `value` should be true or false\n *   - `$regex`: checks whether a string is matched by the regular expression. Contrary to MongoDB, the use of\n *   `$options` with `$regex` is not supported, because it doesn't give you more power than regex flags. Basic\n *   queries are more readable so only use the `$regex` operator when you need to use another operator with it\n *   - `$size`: if the referenced filed is an Array, matches on the size of the array\n *   - `$elemMatch`: matches if at least one array element matches the sub-query entirely\n * - Logical operators: You can combine queries using logical operators:\n *   - For `$or` and `$and`, the syntax is `{ $op: [query1, query2, ...] }`.\n *   - For `$not`, the syntax is `{ $not: query }`\n *   - For `$where`, the syntax is:\n *   ```\n *   { $where: function () {\n *     // object is 'this'\n *     // return a boolean\n *   } }\n *   ```\n * @typedef query\n * @type {Object.<string, *>}\n */\n\n/**\n * Nedb projection.\n *\n * You can give `find` and `findOne` an optional second argument, `projections`.\n * The syntax is the same as MongoDB: `{ a: 1, b: 1 }` to return only the `a`\n * and `b` fields, `{ a: 0, b: 0 }` to omit these two fields. You cannot use both\n * modes at the time, except for `_id` which is by default always returned and\n * which you can choose to omit. You can project on nested documents.\n *\n * To reference subfields, you can use the dot-notation.\n *\n * @typedef projection\n * @type {Object.<string, 0|1>}\n */\n\n/**\n * The `beforeDeserialization` and `afterDeserialization` callbacks are hooks which are executed respectively before\n * parsing each document and after stringifying them. They can be used for example to encrypt the Datastore.\n * The `beforeDeserialization` should revert what `afterDeserialization` has done.\n * @callback serializationHook\n * @param {string} x\n * @return {string}\n */\n\n/**\n * @external EventEmitter\n * @see http://nodejs.org/api/events.html\n */\n\n/**\n * @class\n * @classdesc The `Datastore` class is the main class of NeDB.\n * @extends external:EventEmitter\n * @emits Datastore#event:\"compaction.done\"\n * @typicalname NeDB\n */\nclass Datastore extends EventEmitter {\n  /**\n   * Create a new collection, either persistent or in-memory.\n   *\n   * If you use a persistent datastore without the `autoload` option, you need to call {@link Datastore#loadDatabase} or\n   * {@link Datastore#loadDatabaseAsync} manually. This function fetches the data from datafile and prepares the database.\n   * **Don't forget it!** If you use a persistent datastore, no command (insert, find, update, remove) will be executed\n   * before it is called, so make sure to call it yourself or use the `autoload` option.\n   *\n   * Also, if loading fails, all commands registered to the {@link Datastore#executor} afterwards will not be executed.\n   * They will be registered and executed, in sequence, only after a successful loading.\n   *\n   * @param {object|string} options Can be an object or a string. If options is a string, the behavior is the same as in\n   * v0.6: it will be interpreted as `options.filename`. **Giving a string is deprecated, and will be removed in the\n   * next major version.**\n   * @param {string} [options.filename = null] Path to the file where the data is persisted. If left blank, the datastore is\n   * automatically considered in-memory only. It cannot end with a `~` which is used in the temporary files NeDB uses to\n   * perform crash-safe writes. Not used if `options.inMemoryOnly` is `true`.\n   * @param {boolean} [options.inMemoryOnly = false] If set to true, no data will be written in storage. This option has\n   * priority over `options.filename`.\n   * @param {object} [options.modes] Permissions to use for FS. Only used for Node.js storage module. Will not work on Windows.\n   * @param {number} [options.modes.fileMode = 0o644] Permissions to use for database files\n   * @param {number} [options.modes.dirMode = 0o755] Permissions to use for database directories\n   * @param {boolean} [options.timestampData = false] If set to true, createdAt and updatedAt will be created and\n   * populated automatically (if not specified by user)\n   * @param {boolean} [options.autoload = false] If used, the database will automatically be loaded from the datafile\n   * upon creation (you don't need to call `loadDatabase`). Any command issued before load is finished is buffered and\n   * will be executed when load is done. When autoloading is done, you can either use the `onload` callback, or you can\n   * use `this.autoloadPromise` which resolves (or rejects) when autloading is done.\n   * @param {NoParamCallback} [options.onload] If you use autoloading, this is the handler called after the `loadDatabase`. It\n   * takes one `error` argument. If you use autoloading without specifying this handler, and an error happens during\n   * load, an error will be thrown.\n   * @param {serializationHook} [options.beforeDeserialization] Hook you can use to transform data after it was serialized and\n   * before it is written to disk. Can be used for example to encrypt data before writing database to disk. This\n   * function takes a string as parameter (one line of an NeDB data file) and outputs the transformed string, **which\n   * must absolutely not contain a `\\n` character** (or data will be lost).\n   * @param {serializationHook} [options.afterSerialization] Inverse of `afterSerialization`. Make sure to include both and not\n   * just one, or you risk data loss. For the same reason, make sure both functions are inverses of one another. Some\n   * failsafe mechanisms are in place to prevent data loss if you misuse the serialization hooks: NeDB checks that never\n   * one is declared without the other, and checks that they are reverse of one another by testing on random strings of\n   * various lengths. In addition, if too much data is detected as corrupt, NeDB will refuse to start as it could mean\n   * you're not using the deserialization hook corresponding to the serialization hook used before.\n   * @param {number} [options.corruptAlertThreshold = 0.1] Between 0 and 1, defaults to 10%. NeDB will refuse to start\n   * if more than this percentage of the datafile is corrupt. 0 means you don't tolerate any corruption, 1 means you\n   * don't care.\n   * @param {compareStrings} [options.compareStrings] If specified, it overrides default string comparison which is not\n   * well adapted to non-US characters in particular accented letters. Native `localCompare` will most of the time be\n   * the right choice.\n   * @param {boolean} [options.testSerializationHooks=true] Whether to test the serialization hooks or not,\n   * might be CPU-intensive\n   */\n  constructor (options) {\n    super()\n    let filename\n\n    // Retrocompatibility with v0.6 and before\n    if (typeof options === 'string') {\n      deprecate(() => {\n        filename = options\n        this.inMemoryOnly = false // Default\n      }, '@seald-io/nedb: Giving a string to the Datastore constructor is deprecated and will be removed in the next major version. Please use an options object with an argument \\'filename\\'.')()\n    } else {\n      options = options || {}\n      filename = options.filename\n      /**\n       * Determines if the `Datastore` keeps data in-memory, or if it saves it in storage. Is not read after\n       * instanciation.\n       * @type {boolean}\n       * @protected\n       */\n      this.inMemoryOnly = options.inMemoryOnly || false\n      /**\n       * Determines if the `Datastore` should autoload the database upon instantiation. Is not read after instanciation.\n       * @type {boolean}\n       * @protected\n       */\n      this.autoload = options.autoload || false\n      /**\n       * Determines if the `Datastore` should add `createdAt` and `updatedAt` fields automatically if not set by the user.\n       * @type {boolean}\n       * @protected\n       */\n      this.timestampData = options.timestampData || false\n    }\n\n    // Determine whether in memory or persistent\n    if (!filename || typeof filename !== 'string' || filename.length === 0) {\n      /**\n       * If null, it means `inMemoryOnly` is `true`. The `filename` is the name given to the storage module. Is not read\n       * after instanciation.\n       * @type {?string}\n       * @protected\n       */\n      this.filename = null\n      this.inMemoryOnly = true\n    } else {\n      this.filename = filename\n    }\n\n    // String comparison function\n    /**\n     * Overrides default string comparison which is not well adapted to non-US characters in particular accented\n     * letters. Native `localCompare` will most of the time be the right choice\n     * @type {compareStrings}\n     * @function\n     * @protected\n     */\n    this.compareStrings = options.compareStrings\n\n    // Persistence handling\n    /**\n     * The `Persistence` instance for this `Datastore`.\n     * @type {Persistence}\n     */\n    this.persistence = new Persistence({\n      db: this,\n      afterSerialization: options.afterSerialization,\n      beforeDeserialization: options.beforeDeserialization,\n      corruptAlertThreshold: options.corruptAlertThreshold,\n      modes: options.modes,\n      testSerializationHooks: options.testSerializationHooks\n    })\n\n    // This new executor is ready if we don't use persistence\n    // If we do, it will only be ready once loadDatabase is called\n    /**\n     * The `Executor` instance for this `Datastore`. It is used in all methods exposed by the {@link Datastore},\n     * any {@link Cursor} produced by the `Datastore` and by {@link Datastore#compactDatafileAsync} to ensure operations\n     * are performed sequentially in the database.\n     * @type {Executor}\n     * @protected\n     */\n    this.executor = new Executor()\n    if (this.inMemoryOnly) this.executor.ready = true\n\n    /**\n     * Indexed by field name, dot notation can be used.\n     * _id is always indexed and since _ids are generated randomly the underlying binary search tree is always well-balanced\n     * @type {Object.<string, Index>}\n     * @protected\n     */\n    this.indexes = {}\n    this.indexes._id = new Index({ fieldName: '_id', unique: true })\n    /**\n     * Stores the time to live (TTL) of the indexes created. The key represents the field name, the value the number of\n     * seconds after which data with this index field should be removed.\n     * @type {Object.<string, number>}\n     * @protected\n     */\n    this.ttlIndexes = {}\n\n    // Queue a load of the database right away and call the onload handler\n    // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n    if (this.autoload) {\n      /**\n       * A Promise that resolves when the autoload has finished.\n       *\n       * The onload callback is not awaited by this Promise, it is started immediately after that.\n       * @type {?Promise}\n       */\n      this.autoloadPromise = this.loadDatabaseAsync()\n      this.autoloadPromise\n        .then(() => {\n          if (options.onload) options.onload()\n        }, err => {\n          if (options.onload) options.onload(err)\n          else throw err\n        })\n    } else this.autoloadPromise = null\n    /**\n     * Interval if {@link Datastore#setAutocompactionInterval} was called.\n     * @private\n     * @type {null|number}\n     */\n    this._autocompactionIntervalId = null\n  }\n\n  /**\n   * Queue a compaction/rewrite of the datafile.\n   * It works by rewriting the database file, and compacts it since the cache always contains only the number of\n   * documents in the collection while the data file is append-only so it may grow larger.\n   *\n   * @async\n   */\n  compactDatafileAsync () {\n    return this.executor.pushAsync(() => this.persistence.persistCachedDatabaseAsync())\n  }\n\n  /**\n   * Callback version of {@link Datastore#compactDatafileAsync}.\n   * @param {NoParamCallback} [callback = () => {}]\n   * @see Datastore#compactDatafileAsync\n   */\n  compactDatafile (callback) {\n    const promise = this.compactDatafileAsync()\n    if (typeof callback === 'function') callbackify(() => promise)(callback)\n  }\n\n  /**\n   * Set automatic compaction every `interval` ms\n   * @param {Number} interval in milliseconds, with an enforced minimum of 5000 milliseconds\n   */\n  setAutocompactionInterval (interval) {\n    const minInterval = 5000\n    if (Number.isNaN(Number(interval))) throw new Error('Interval must be a non-NaN number')\n    const realInterval = Math.max(Number(interval), minInterval)\n\n    this.stopAutocompaction()\n\n    this._autocompactionIntervalId = setInterval(() => {\n      this.compactDatafile()\n    }, realInterval)\n  }\n\n  /**\n   * Stop autocompaction (do nothing if automatic compaction was not running)\n   */\n  stopAutocompaction () {\n    if (this._autocompactionIntervalId) {\n      clearInterval(this._autocompactionIntervalId)\n      this._autocompactionIntervalId = null\n    }\n  }\n\n  /**\n   * Callback version of {@link Datastore#loadDatabaseAsync}.\n   * @param {NoParamCallback} [callback]\n   * @see Datastore#loadDatabaseAsync\n   */\n  loadDatabase (callback) {\n    const promise = this.loadDatabaseAsync()\n    if (typeof callback === 'function') callbackify(() => promise)(callback)\n  }\n\n  /**\n   * Stops auto-compaction, finishes all queued operations, drops the database both in memory and in storage.\n   * **WARNING**: it is not recommended re-using an instance of NeDB if its database has been dropped, it is\n   * preferable to instantiate a new one.\n   * @async\n   * @return {Promise}\n   */\n  dropDatabaseAsync () {\n    return this.persistence.dropDatabaseAsync() // the executor is exceptionally used by Persistence\n  }\n\n  /**\n   * Callback version of {@link Datastore#dropDatabaseAsync}.\n   * @param {NoParamCallback} [callback]\n   * @see Datastore#dropDatabaseAsync\n   */\n  dropDatabase (callback) {\n    const promise = this.dropDatabaseAsync()\n    if (typeof callback === 'function') callbackify(() => promise)(callback)\n  }\n\n  /**\n   * Load the database from the datafile, and trigger the execution of buffered commands if any.\n   * @async\n   * @return {Promise}\n   */\n  loadDatabaseAsync () {\n    return this.executor.pushAsync(() => this.persistence.loadDatabaseAsync(), true)\n  }\n\n  /**\n   * Get an array of all the data in the database.\n   * @return {document[]}\n   */\n  getAllData () {\n    return this.indexes._id.getAll()\n  }\n\n  /**\n   * Reset all currently defined indexes.\n   * @param {?document|?document[]} [newData]\n   * @private\n   */\n  _resetIndexes (newData) {\n    for (const index of Object.values(this.indexes)) {\n      index.reset(newData)\n    }\n  }\n\n  /**\n   * Callback version of {@link Datastore#ensureIndex}.\n   * @param {object} options\n   * @param {string} options.fieldName\n   * @param {boolean} [options.unique = false]\n   * @param {boolean} [options.sparse = false]\n   * @param {number} [options.expireAfterSeconds]\n   * @param {NoParamCallback} [callback]\n   * @see Datastore#ensureIndex\n   */\n  ensureIndex (options = {}, callback) {\n    const promise = this.ensureIndexAsync(options) // to make sure the synchronous part of ensureIndexAsync is executed synchronously\n    if (typeof callback === 'function') callbackify(() => promise)(callback)\n  }\n\n  /**\n   * Ensure an index is kept for this field. Same parameters as lib/indexes\n   * This function acts synchronously on the indexes, however the persistence of the indexes is deferred with the\n   * executor.\n   * @param {object} options\n   * @param {string} options.fieldName Name of the field to index. Use the dot notation to index a field in a nested\n   * document.\n   * @param {boolean} [options.unique = false] Enforce field uniqueness. Note that a unique index will raise an error\n   * if you try to index two documents for which the field is not defined.\n   * @param {boolean} [options.sparse = false] Don't index documents for which the field is not defined. Use this option\n   * along with \"unique\" if you want to accept multiple documents for which it is not defined.\n   * @param {number} [options.expireAfterSeconds] - If set, the created index is a TTL (time to live) index, that will\n   * automatically remove documents when the system date becomes larger than the date on the indexed field plus\n   * `expireAfterSeconds`. Documents where the indexed field is not specified or not a `Date` object are ignored.\n   * @return {Promise<void>}\n   */\n  async ensureIndexAsync (options = {}) {\n    if (!options.fieldName) {\n      const err = new Error('Cannot create an index without a fieldName')\n      err.missingFieldName = true\n      throw err\n    }\n    if (this.indexes[options.fieldName]) return\n\n    this.indexes[options.fieldName] = new Index(options)\n    if (options.expireAfterSeconds !== undefined) this.ttlIndexes[options.fieldName] = options.expireAfterSeconds // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n    try {\n      this.indexes[options.fieldName].insert(this.getAllData())\n    } catch (e) {\n      delete this.indexes[options.fieldName]\n      throw e\n    }\n\n    // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n    await this.executor.pushAsync(() => this.persistence.persistNewStateAsync([{ $$indexCreated: options }]), true)\n  }\n\n  /**\n   * Callback version of {@link Datastore#removeIndexAsync}.\n   * @param {string} fieldName\n   * @param {NoParamCallback} [callback]\n   * @see Datastore#removeIndexAsync\n   */\n  removeIndex (fieldName, callback = () => {}) {\n    const promise = this.removeIndexAsync(fieldName)\n    callbackify(() => promise)(callback)\n  }\n\n  /**\n   * Remove an index.\n   * @param {string} fieldName Field name of the index to remove. Use the dot notation to remove an index referring to a\n   * field in a nested document.\n   * @return {Promise<void>}\n   * @see Datastore#removeIndex\n   */\n  async removeIndexAsync (fieldName) {\n    delete this.indexes[fieldName]\n\n    await this.executor.pushAsync(() => this.persistence.persistNewStateAsync([{ $$indexRemoved: fieldName }]), true)\n  }\n\n  /**\n   * Add one or several document(s) to all indexes.\n   *\n   * This is an internal function.\n   * @param {document} doc\n   * @private\n   */\n  _addToIndexes (doc) {\n    let failingIndex\n    let error\n    const keys = Object.keys(this.indexes)\n\n    for (let i = 0; i < keys.length; i += 1) {\n      try {\n        this.indexes[keys[i]].insert(doc)\n      } catch (e) {\n        failingIndex = i\n        error = e\n        break\n      }\n    }\n\n    // If an error happened, we need to rollback the insert on all other indexes\n    if (error) {\n      for (let i = 0; i < failingIndex; i += 1) {\n        this.indexes[keys[i]].remove(doc)\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Remove one or several document(s) from all indexes.\n   *\n   * This is an internal function.\n   * @param {document} doc\n   * @private\n   */\n  _removeFromIndexes (doc) {\n    for (const index of Object.values(this.indexes)) {\n      index.remove(doc)\n    }\n  }\n\n  /**\n   * Update one or several documents in all indexes.\n   *\n   * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs.\n   *\n   * If one update violates a constraint, all changes are rolled back.\n   *\n   * This is an internal function.\n   * @param {document|Array.<{oldDoc: document, newDoc: document}>} oldDoc Document to update, or an `Array` of\n   * `{oldDoc, newDoc}` pairs.\n   * @param {document} [newDoc] Document to replace the oldDoc with. If the first argument is an `Array` of\n   * `{oldDoc, newDoc}` pairs, this second argument is ignored.\n   * @private\n   */\n  _updateIndexes (oldDoc, newDoc) {\n    let failingIndex\n    let error\n    const keys = Object.keys(this.indexes)\n\n    for (let i = 0; i < keys.length; i += 1) {\n      try {\n        this.indexes[keys[i]].update(oldDoc, newDoc)\n      } catch (e) {\n        failingIndex = i\n        error = e\n        break\n      }\n    }\n\n    // If an error happened, we need to rollback the update on all other indexes\n    if (error) {\n      for (let i = 0; i < failingIndex; i += 1) {\n        this.indexes[keys[i]].revertUpdate(oldDoc, newDoc)\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get all candidate documents matching the query, regardless of their expiry status.\n   * @param {query} query\n   * @return {document[]}\n   *\n   * @private\n   */\n  _getRawCandidates (query) {\n    const indexNames = Object.keys(this.indexes)\n    // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n    // For a basic match\n    let usableQuery\n    usableQuery = Object.entries(query)\n      .filter(([k, v]) =>\n        !!(typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || isDate(v) || v === null) &&\n        indexNames.includes(k)\n      )\n      .pop()\n    if (usableQuery) return this.indexes[usableQuery[0]].getMatching(usableQuery[1])\n    // For a $in match\n    usableQuery = Object.entries(query)\n      .filter(([k, v]) =>\n        !!(query[k] && Object.prototype.hasOwnProperty.call(query[k], '$in')) &&\n        indexNames.includes(k)\n      )\n      .pop()\n    if (usableQuery) return this.indexes[usableQuery[0]].getMatching(usableQuery[1].$in)\n    // For a comparison match\n    usableQuery = Object.entries(query)\n      .filter(([k, v]) =>\n        !!(query[k] && (Object.prototype.hasOwnProperty.call(query[k], '$lt') || Object.prototype.hasOwnProperty.call(query[k], '$lte') || Object.prototype.hasOwnProperty.call(query[k], '$gt') || Object.prototype.hasOwnProperty.call(query[k], '$gte'))) &&\n        indexNames.includes(k)\n      )\n      .pop()\n    if (usableQuery) return this.indexes[usableQuery[0]].getBetweenBounds(usableQuery[1])\n    // By default, return all the DB data\n    return this.getAllData()\n  }\n\n  /**\n   * Return the list of candidates for a given query\n   * Crude implementation for now, we return the candidates given by the first usable index if any\n   * We try the following query types, in this order: basic match, $in match, comparison match\n   * One way to make it better would be to enable the use of multiple indexes if the first usable index\n   * returns too much data. I may do it in the future.\n   *\n   * Returned candidates will be scanned to find and remove all expired documents\n   *\n   * This is an internal function.\n   * @param {query} query\n   * @param {boolean} [dontExpireStaleDocs = false] If true don't remove stale docs. Useful for the remove function\n   * which shouldn't be impacted by expirations.\n   * @return {Promise<document[]>} candidates\n   * @private\n   */\n  async _getCandidatesAsync (query, dontExpireStaleDocs = false) {\n    const validDocs = []\n\n    // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n    const docs = this._getRawCandidates(query)\n    // STEP 2: remove all expired documents\n    if (!dontExpireStaleDocs) {\n      const expiredDocsIds = []\n      const ttlIndexesFieldNames = Object.keys(this.ttlIndexes)\n\n      docs.forEach(doc => {\n        if (ttlIndexesFieldNames.every(i => !(doc[i] !== undefined && isDate(doc[i]) && Date.now() > doc[i].getTime() + this.ttlIndexes[i] * 1000))) validDocs.push(doc)\n        else expiredDocsIds.push(doc._id)\n      })\n      for (const _id of expiredDocsIds) {\n        await this._removeAsync({ _id: _id }, {})\n      }\n    } else validDocs.push(...docs)\n    return validDocs\n  }\n\n  /**\n   * Insert a new document\n   * This is an internal function, use {@link Datastore#insertAsync} which has the same signature.\n   * @param {document|document[]} newDoc\n   * @return {Promise<document|document[]>}\n   * @private\n   */\n  async _insertAsync (newDoc) {\n    const preparedDoc = this._prepareDocumentForInsertion(newDoc)\n    this._insertInCache(preparedDoc)\n\n    await this.persistence.persistNewStateAsync(Array.isArray(preparedDoc) ? preparedDoc : [preparedDoc])\n    return model.deepCopy(preparedDoc)\n  }\n\n  /**\n   * Create a new _id that's not already in use\n   * @return {string} id\n   * @private\n   */\n  _createNewId () {\n    let attemptId = customUtils.uid(16)\n    // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n    if (this.indexes._id.getMatching(attemptId).length > 0) attemptId = this._createNewId()\n    return attemptId\n  }\n\n  /**\n   * Prepare a document (or array of documents) to be inserted in a database\n   * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n   * @param {document|document[]} newDoc document, or Array of documents, to prepare\n   * @return {document|document[]} prepared document, or Array of prepared documents\n   * @private\n   */\n  _prepareDocumentForInsertion (newDoc) {\n    let preparedDoc\n\n    if (Array.isArray(newDoc)) {\n      preparedDoc = []\n      newDoc.forEach(doc => { preparedDoc.push(this._prepareDocumentForInsertion(doc)) })\n    } else {\n      preparedDoc = model.deepCopy(newDoc)\n      if (preparedDoc._id === undefined) preparedDoc._id = this._createNewId()\n      const now = new Date()\n      if (this.timestampData && preparedDoc.createdAt === undefined) preparedDoc.createdAt = now\n      if (this.timestampData && preparedDoc.updatedAt === undefined) preparedDoc.updatedAt = now\n      model.checkObject(preparedDoc)\n    }\n\n    return preparedDoc\n  }\n\n  /**\n   * If newDoc is an array of documents, this will insert all documents in the cache\n   * @param {document|document[]} preparedDoc\n   * @private\n   */\n  _insertInCache (preparedDoc) {\n    if (Array.isArray(preparedDoc)) this._insertMultipleDocsInCache(preparedDoc)\n    else this._addToIndexes(preparedDoc)\n  }\n\n  /**\n   * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n   * inserts and throws the error\n   * @param {document[]} preparedDocs\n   * @private\n   */\n  _insertMultipleDocsInCache (preparedDocs) {\n    let failingIndex\n    let error\n\n    for (let i = 0; i < preparedDocs.length; i += 1) {\n      try {\n        this._addToIndexes(preparedDocs[i])\n      } catch (e) {\n        error = e\n        failingIndex = i\n        break\n      }\n    }\n\n    if (error) {\n      for (let i = 0; i < failingIndex; i += 1) {\n        this._removeFromIndexes(preparedDocs[i])\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Callback version of {@link Datastore#insertAsync}.\n   * @param {document|document[]} newDoc\n   * @param {SingleDocumentCallback|MultipleDocumentsCallback} [callback]\n   * @see Datastore#insertAsync\n   */\n  insert (newDoc, callback) {\n    const promise = this.insertAsync(newDoc)\n    if (typeof callback === 'function') callbackify(() => promise)(callback)\n  }\n\n  /**\n   * Insert a new document, or new documents.\n   * @param {document|document[]} newDoc Document or array of documents to insert.\n   * @return {Promise<document|document[]>} The document(s) inserted.\n   * @async\n   */\n  insertAsync (newDoc) {\n    return this.executor.pushAsync(() => this._insertAsync(newDoc))\n  }\n\n  /**\n   * Callback for {@link Datastore#countCallback}.\n   * @callback Datastore~countCallback\n   * @param {?Error} err\n   * @param {?number} count\n   */\n\n  /**\n   * Callback-version of {@link Datastore#countAsync}.\n   * @param {query} query\n   * @param {Datastore~countCallback} [callback]\n   * @return {Cursor<number>|undefined}\n   * @see Datastore#countAsync\n   */\n  count (query, callback) {\n    const cursor = this.countAsync(query)\n\n    if (typeof callback === 'function') callbackify(cursor.execAsync.bind(cursor))(callback)\n    else return cursor\n  }\n\n  /**\n   * Count all documents matching the query.\n   * @param {query} query MongoDB-style query\n   * @return {Cursor<number>} count\n   * @async\n   */\n  countAsync (query) {\n    return new Cursor(this, query, docs => docs.length)\n  }\n\n  /**\n   * Callback version of {@link Datastore#findAsync}.\n   * @param {query} query\n   * @param {projection|MultipleDocumentsCallback} [projection = {}]\n   * @param {MultipleDocumentsCallback} [callback]\n   * @return {Cursor<document[]>|undefined}\n   * @see Datastore#findAsync\n   */\n  find (query, projection, callback) {\n    if (arguments.length === 1) {\n      projection = {}\n      // callback is undefined, will return a cursor\n    } else if (arguments.length === 2) {\n      if (typeof projection === 'function') {\n        callback = projection\n        projection = {}\n      } // If not assume projection is an object and callback undefined\n    }\n\n    const cursor = this.findAsync(query, projection)\n\n    if (typeof callback === 'function') callbackify(cursor.execAsync.bind(cursor))(callback)\n    else return cursor\n  }\n\n  /**\n   * Find all documents matching the query.\n   * We return the {@link Cursor} that the user can either `await` directly or use to can {@link Cursor#limit} or\n   * {@link Cursor#skip} before.\n   * @param {query} query MongoDB-style query\n   * @param {projection} [projection = {}] MongoDB-style projection\n   * @return {Cursor<document[]>}\n   * @async\n   */\n  findAsync (query, projection = {}) {\n    const cursor = new Cursor(this, query, docs => docs.map(doc => model.deepCopy(doc)))\n\n    cursor.projection(projection)\n    return cursor\n  }\n\n  /**\n   * @callback Datastore~findOneCallback\n   * @param {?Error} err\n   * @param {document} doc\n   */\n\n  /**\n   * Callback version of {@link Datastore#findOneAsync}.\n   * @param {query} query\n   * @param {projection|SingleDocumentCallback} [projection = {}]\n   * @param {SingleDocumentCallback} [callback]\n   * @return {Cursor<document>|undefined}\n   * @see Datastore#findOneAsync\n   */\n  findOne (query, projection, callback) {\n    if (arguments.length === 1) {\n      projection = {}\n      // callback is undefined, will return a cursor\n    } else if (arguments.length === 2) {\n      if (typeof projection === 'function') {\n        callback = projection\n        projection = {}\n      } // If not assume projection is an object and callback undefined\n    }\n\n    const cursor = this.findOneAsync(query, projection)\n\n    if (typeof callback === 'function') callbackify(cursor.execAsync.bind(cursor))(callback)\n    else return cursor\n  }\n\n  /**\n   * Find one document matching the query.\n   * We return the {@link Cursor} that the user can either `await` directly or use to can {@link Cursor#skip} before.\n   * @param {query} query MongoDB-style query\n   * @param {projection} projection MongoDB-style projection\n   * @return {Cursor<document>}\n   */\n  findOneAsync (query, projection = {}) {\n    const cursor = new Cursor(this, query, docs => docs.length === 1 ? model.deepCopy(docs[0]) : null)\n\n    cursor.projection(projection).limit(1)\n    return cursor\n  }\n\n  /**\n   * See {@link Datastore#updateAsync} return type for the definition of the callback parameters.\n   *\n   * **WARNING:** Prior to 3.0.0, `upsert` was either `true` of falsy (but not `false`), it is now always a boolean.\n   * `affectedDocuments` could be `undefined` when `returnUpdatedDocs` was `false`, it is now `null` in these cases.\n   *\n   * **WARNING:** Prior to 1.8.0, the `upsert` argument was not given, it was impossible for the developer to determine\n   * during a `{ multi: false, returnUpdatedDocs: true, upsert: true }` update if it inserted a document or just updated\n   * it.\n   *\n   * @callback Datastore~updateCallback\n   * @param {?Error} err\n   * @param {number} numAffected\n   * @param {?document[]|?document} affectedDocuments\n   * @param {boolean} upsert\n   * @see {Datastore#updateAsync}\n   */\n\n  /**\n   * Version without the using {@link Datastore~executor} of {@link Datastore#updateAsync}, use it instead.\n   *\n   * @param {query} query\n   * @param {document|update} update\n   * @param {Object} options\n   * @param {boolean} [options.multi = false]\n   * @param {boolean} [options.upsert = false]\n   * @param {boolean} [options.returnUpdatedDocs = false]\n   * @return {Promise<{numAffected: number, affectedDocuments: document[]|document|null, upsert: boolean}>}\n   * @private\n   * @see Datastore#updateAsync\n   */\n  async _updateAsync (query, update, options) {\n    const multi = options.multi !== undefined ? options.multi : false\n    const upsert = options.upsert !== undefined ? options.upsert : false\n\n    // If upsert option is set, check whether we need to insert the doc\n    if (upsert) {\n      const cursor = new Cursor(this, query)\n\n      // Need to use an internal function not tied to the executor to avoid deadlock\n      const docs = await cursor.limit(1)._execAsync()\n\n      if (docs.length !== 1) {\n        let toBeInserted\n\n        try {\n          model.checkObject(update)\n          // updateQuery is a simple object with no modifier, use it as the document to insert\n          toBeInserted = update\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          toBeInserted = model.modify(model.deepCopy(query, true), update)\n        }\n        const newDoc = await this._insertAsync(toBeInserted)\n        return { numAffected: 1, affectedDocuments: newDoc, upsert: true }\n      }\n    }\n    // Perform the update\n    let numReplaced = 0\n    let modifiedDoc\n    const modifications = []\n    let createdAt\n\n    const candidates = await this._getCandidatesAsync(query)\n    // Preparing update (if an error is thrown here neither the datafile nor\n    // the in-memory indexes are affected)\n    for (const candidate of candidates) {\n      if (model.match(candidate, query) && (multi || numReplaced === 0)) {\n        numReplaced += 1\n        if (this.timestampData) { createdAt = candidate.createdAt }\n        modifiedDoc = model.modify(candidate, update)\n        if (this.timestampData) {\n          modifiedDoc.createdAt = createdAt\n          modifiedDoc.updatedAt = new Date()\n        }\n        modifications.push({ oldDoc: candidate, newDoc: modifiedDoc })\n      }\n    }\n\n    // Change the docs in memory\n    this._updateIndexes(modifications)\n\n    // Update the datafile\n    const updatedDocs = modifications.map(x => x.newDoc)\n    await this.persistence.persistNewStateAsync(updatedDocs)\n    if (!options.returnUpdatedDocs) return { numAffected: numReplaced, upsert: false, affectedDocuments: null }\n    else {\n      let updatedDocsDC = []\n      updatedDocs.forEach(doc => { updatedDocsDC.push(model.deepCopy(doc)) })\n      if (!multi) updatedDocsDC = updatedDocsDC[0]\n      return { numAffected: numReplaced, affectedDocuments: updatedDocsDC, upsert: false }\n    }\n  }\n\n  /**\n   * Callback version of {@link Datastore#updateAsync}.\n   * @param {query} query\n   * @param {document|*} update\n   * @param {Object|Datastore~updateCallback} [options|]\n   * @param {boolean} [options.multi = false]\n   * @param {boolean} [options.upsert = false]\n   * @param {boolean} [options.returnUpdatedDocs = false]\n   * @param {Datastore~updateCallback} [callback]\n   * @see Datastore#updateAsync\n   *\n   */\n  update (query, update, options, callback) {\n    if (typeof options === 'function') {\n      callback = options\n      options = {}\n    }\n    const _callback = (err, res = {}) => {\n      if (callback) callback(err, res.numAffected, res.affectedDocuments, res.upsert)\n    }\n    callbackify((query, update, options) => this.updateAsync(query, update, options))(query, update, options, _callback)\n  }\n\n  /**\n   * Update all docs matching query.\n   * @param {query} query is the same kind of finding query you use with `find` and `findOne`.\n   * @param {document|*} update specifies how the documents should be modified. It is either a new document or a\n   * set of modifiers (you cannot use both together, it doesn't make sense!). Using a new document will replace the\n   * matched docs. Using a set of modifiers will create the fields they need to modify if they don't exist, and you can\n   * apply them to subdocs. Available field modifiers are `$set` to change a field's value, `$unset` to delete a field,\n   * `$inc` to increment a field's value and `$min`/`$max` to change field's value, only if provided value is\n   * less/greater than current value. To work on arrays, you have `$push`, `$pop`, `$addToSet`, `$pull`, and the special\n   * `$each` and `$slice`.\n   * @param {Object} [options = {}] Optional options\n   * @param {boolean} [options.multi = false] If true, can update multiple documents\n   * @param {boolean} [options.upsert = false] If true, can insert a new document corresponding to the `update` rules if\n   * your `query` doesn't match anything. If your `update` is a simple object with no modifiers, it is the inserted\n   * document. In the other case, the `query` is stripped from all operator recursively, and the `update` is applied to\n   * it.\n   * @param {boolean} [options.returnUpdatedDocs = false] (not Mongo-DB compatible) If true and update is not an upsert,\n   * will return the array of documents matched by the find query and updated. Updated documents will be returned even\n   * if the update did not actually modify them.\n   * @return {Promise<{numAffected: number, affectedDocuments: document[]|document|null, upsert: boolean}>}\n   * - `upsert` is `true` if and only if the update did insert a document, **cannot be true if `options.upsert !== true`**.\n   * - `numAffected` is the number of documents affected by the update or insertion (if `options.multi` is `false` or `options.upsert` is `true`, cannot exceed `1`);\n   * - `affectedDocuments` can be one of the following:\n   *    - If `upsert` is `true`, the inserted document;\n   *    - If `options.returnUpdatedDocs` is `false`, `null`;\n   *    - If `options.returnUpdatedDocs` is `true`:\n   *      - If `options.multi` is `false`, the updated document;\n   *      - If `options.multi` is `false`, the array of updated documents.\n   * @async\n   */\n  updateAsync (query, update, options = {}) {\n    return this.executor.pushAsync(() => this._updateAsync(query, update, options))\n  }\n\n  /**\n   * @callback Datastore~removeCallback\n   * @param {?Error} err\n   * @param {?number} numRemoved\n   */\n\n  /**\n   * Internal version without using the {@link Datastore#executor} of {@link Datastore#removeAsync}, use it instead.\n   *\n   * @param {query} query\n   * @param {object} [options]\n   * @param {boolean} [options.multi = false]\n   * @return {Promise<number>}\n   * @private\n   * @see Datastore#removeAsync\n   */\n  async _removeAsync (query, options = {}) {\n    const multi = options.multi !== undefined ? options.multi : false\n\n    const candidates = await this._getCandidatesAsync(query, true)\n    const removedDocs = []\n    let numRemoved = 0\n\n    candidates.forEach(d => {\n      if (model.match(d, query) && (multi || numRemoved === 0)) {\n        numRemoved += 1\n        removedDocs.push({ $$deleted: true, _id: d._id })\n        this._removeFromIndexes(d)\n      }\n    })\n\n    await this.persistence.persistNewStateAsync(removedDocs)\n    return numRemoved\n  }\n\n  /**\n   * Callback version of {@link Datastore#removeAsync}.\n   * @param {query} query\n   * @param {object|Datastore~removeCallback} [options={}]\n   * @param {boolean} [options.multi = false]\n   * @param {Datastore~removeCallback} [cb = () => {}]\n   * @see Datastore#removeAsync\n   */\n  remove (query, options, cb) {\n    if (typeof options === 'function') {\n      cb = options\n      options = {}\n    }\n    const callback = cb || (() => {})\n    callbackify((query, options) => this.removeAsync(query, options))(query, options, callback)\n  }\n\n  /**\n   * Remove all docs matching the query.\n   * @param {query} query MongoDB-style query\n   * @param {object} [options={}] Optional options\n   * @param {boolean} [options.multi = false] If true, can update multiple documents\n   * @return {Promise<number>} How many documents were removed\n   * @async\n   */\n  removeAsync (query, options = {}) {\n    return this.executor.pushAsync(() => this._removeAsync(query, options))\n  }\n}\n\nmodule.exports = Datastore\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/datastore.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/executor.js":
/*!*****************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/executor.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Waterfall = __webpack_require__(/*! ./waterfall */ \"./node_modules/@seald-io/nedb/lib/waterfall.js\")\n\n/**\n * Executes operations sequentially.\n * Has an option for a buffer that can be triggered afterwards.\n * @private\n */\nclass Executor {\n  /**\n   * Instantiates a new Executor.\n   */\n  constructor () {\n    /**\n     * If this.ready is `false`, then every task pushed will be buffered until this.processBuffer is called.\n     * @type {boolean}\n     * @private\n     */\n    this.ready = false\n    /**\n     * The main queue\n     * @type {Waterfall}\n     * @private\n     */\n    this.queue = new Waterfall()\n    /**\n     * The buffer queue\n     * @type {Waterfall}\n     * @private\n     */\n    this.buffer = null\n    /**\n     * Method to trigger the buffer processing.\n     *\n     * Do not be use directly, use `this.processBuffer` instead.\n     * @function\n     * @private\n     */\n    this._triggerBuffer = null\n    this.resetBuffer()\n  }\n\n  /**\n   * If executor is ready, queue task (and process it immediately if executor was idle)\n   * If not, buffer task for later processing\n   * @param {AsyncFunction} task Function to execute\n   * @param {boolean} [forceQueuing = false] Optional (defaults to false) force executor to queue task even if it is not ready\n   * @return {Promise<*>}\n   * @async\n   * @see Executor#push\n   */\n  pushAsync (task, forceQueuing = false) {\n    if (this.ready || forceQueuing) return this.queue.waterfall(task)()\n    else return this.buffer.waterfall(task)()\n  }\n\n  /**\n   * Queue all tasks in buffer (in the same order they came in)\n   * Automatically sets executor as ready\n   */\n  processBuffer () {\n    this.ready = true\n    this._triggerBuffer()\n    this.queue.waterfall(() => this.buffer.guardian)\n  }\n\n  /**\n   * Removes all tasks queued up in the buffer\n   */\n  resetBuffer () {\n    this.buffer = new Waterfall()\n    this.buffer.chain(new Promise(resolve => {\n      this._triggerBuffer = resolve\n    }))\n    if (this.ready) this._triggerBuffer()\n  }\n}\n\n// Interface\nmodule.exports = Executor\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL2V4ZWN1dG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL2V4ZWN1dG9yLmpzP2RiZjciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgV2F0ZXJmYWxsID0gcmVxdWlyZSgnLi93YXRlcmZhbGwnKVxuXG4vKipcbiAqIEV4ZWN1dGVzIG9wZXJhdGlvbnMgc2VxdWVudGlhbGx5LlxuICogSGFzIGFuIG9wdGlvbiBmb3IgYSBidWZmZXIgdGhhdCBjYW4gYmUgdHJpZ2dlcmVkIGFmdGVyd2FyZHMuXG4gKiBAcHJpdmF0ZVxuICovXG5jbGFzcyBFeGVjdXRvciB7XG4gIC8qKlxuICAgKiBJbnN0YW50aWF0ZXMgYSBuZXcgRXhlY3V0b3IuXG4gICAqL1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgLyoqXG4gICAgICogSWYgdGhpcy5yZWFkeSBpcyBgZmFsc2VgLCB0aGVuIGV2ZXJ5IHRhc2sgcHVzaGVkIHdpbGwgYmUgYnVmZmVyZWQgdW50aWwgdGhpcy5wcm9jZXNzQnVmZmVyIGlzIGNhbGxlZC5cbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHRoaXMucmVhZHkgPSBmYWxzZVxuICAgIC8qKlxuICAgICAqIFRoZSBtYWluIHF1ZXVlXG4gICAgICogQHR5cGUge1dhdGVyZmFsbH1cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHRoaXMucXVldWUgPSBuZXcgV2F0ZXJmYWxsKClcbiAgICAvKipcbiAgICAgKiBUaGUgYnVmZmVyIHF1ZXVlXG4gICAgICogQHR5cGUge1dhdGVyZmFsbH1cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHRoaXMuYnVmZmVyID0gbnVsbFxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byB0cmlnZ2VyIHRoZSBidWZmZXIgcHJvY2Vzc2luZy5cbiAgICAgKlxuICAgICAqIERvIG5vdCBiZSB1c2UgZGlyZWN0bHksIHVzZSBgdGhpcy5wcm9jZXNzQnVmZmVyYCBpbnN0ZWFkLlxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgdGhpcy5fdHJpZ2dlckJ1ZmZlciA9IG51bGxcbiAgICB0aGlzLnJlc2V0QnVmZmVyKClcbiAgfVxuXG4gIC8qKlxuICAgKiBJZiBleGVjdXRvciBpcyByZWFkeSwgcXVldWUgdGFzayAoYW5kIHByb2Nlc3MgaXQgaW1tZWRpYXRlbHkgaWYgZXhlY3V0b3Igd2FzIGlkbGUpXG4gICAqIElmIG5vdCwgYnVmZmVyIHRhc2sgZm9yIGxhdGVyIHByb2Nlc3NpbmdcbiAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSB0YXNrIEZ1bmN0aW9uIHRvIGV4ZWN1dGVcbiAgICogQHBhcmFtIHtib29sZWFufSBbZm9yY2VRdWV1aW5nID0gZmFsc2VdIE9wdGlvbmFsIChkZWZhdWx0cyB0byBmYWxzZSkgZm9yY2UgZXhlY3V0b3IgdG8gcXVldWUgdGFzayBldmVuIGlmIGl0IGlzIG5vdCByZWFkeVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPCo+fVxuICAgKiBAYXN5bmNcbiAgICogQHNlZSBFeGVjdXRvciNwdXNoXG4gICAqL1xuICBwdXNoQXN5bmMgKHRhc2ssIGZvcmNlUXVldWluZyA9IGZhbHNlKSB7XG4gICAgaWYgKHRoaXMucmVhZHkgfHwgZm9yY2VRdWV1aW5nKSByZXR1cm4gdGhpcy5xdWV1ZS53YXRlcmZhbGwodGFzaykoKVxuICAgIGVsc2UgcmV0dXJuIHRoaXMuYnVmZmVyLndhdGVyZmFsbCh0YXNrKSgpXG4gIH1cblxuICAvKipcbiAgICogUXVldWUgYWxsIHRhc2tzIGluIGJ1ZmZlciAoaW4gdGhlIHNhbWUgb3JkZXIgdGhleSBjYW1lIGluKVxuICAgKiBBdXRvbWF0aWNhbGx5IHNldHMgZXhlY3V0b3IgYXMgcmVhZHlcbiAgICovXG4gIHByb2Nlc3NCdWZmZXIgKCkge1xuICAgIHRoaXMucmVhZHkgPSB0cnVlXG4gICAgdGhpcy5fdHJpZ2dlckJ1ZmZlcigpXG4gICAgdGhpcy5xdWV1ZS53YXRlcmZhbGwoKCkgPT4gdGhpcy5idWZmZXIuZ3VhcmRpYW4pXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhbGwgdGFza3MgcXVldWVkIHVwIGluIHRoZSBidWZmZXJcbiAgICovXG4gIHJlc2V0QnVmZmVyICgpIHtcbiAgICB0aGlzLmJ1ZmZlciA9IG5ldyBXYXRlcmZhbGwoKVxuICAgIHRoaXMuYnVmZmVyLmNoYWluKG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5fdHJpZ2dlckJ1ZmZlciA9IHJlc29sdmVcbiAgICB9KSlcbiAgICBpZiAodGhpcy5yZWFkeSkgdGhpcy5fdHJpZ2dlckJ1ZmZlcigpXG4gIH1cbn1cblxuLy8gSW50ZXJmYWNlXG5tb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dG9yXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/executor.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/indexes.js":
/*!****************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/indexes.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const BinarySearchTree = (__webpack_require__(/*! @seald-io/binary-search-tree */ \"./node_modules/@seald-io/binary-search-tree/index.js\").AVLTree)\nconst model = __webpack_require__(/*! ./model.js */ \"./node_modules/@seald-io/nedb/lib/model.js\")\nconst { uniq, isDate } = __webpack_require__(/*! ./utils.js */ \"./node_modules/@seald-io/nedb/lib/utils.js\")\n\n/**\n * Two indexed pointers are equal if they point to the same place\n * @param {*} a\n * @param {*} b\n * @return {boolean}\n * @private\n */\nconst checkValueEquality = (a, b) => a === b\n\n/**\n * Type-aware projection\n * @param {*} elt\n * @return {string|*}\n * @private\n */\nconst projectForUnique = elt => {\n  if (elt === null) return '$null'\n  if (typeof elt === 'string') return '$string' + elt\n  if (typeof elt === 'boolean') return '$boolean' + elt\n  if (typeof elt === 'number') return '$number' + elt\n  if (isDate(elt)) return '$date' + elt.getTime()\n\n  return elt // Arrays and objects, will check for pointer equality\n}\n\n/**\n * Indexes on field names, with atomic operations and which can optionally enforce a unique constraint or allow indexed\n * fields to be undefined\n * @private\n */\nclass Index {\n  /**\n   * Create a new index\n   * All methods on an index guarantee that either the whole operation was successful and the index changed\n   * or the operation was unsuccessful and an error is thrown while the index is unchanged\n   * @param {object} options\n   * @param {string} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n   * @param {boolean} [options.unique = false] Enforces a unique constraint\n   * @param {boolean} [options.sparse = false] Allows a sparse index (we can have documents for which fieldName is `undefined`)\n   */\n  constructor (options) {\n    /**\n     * On which field the index applies to (may use dot notation to index on sub fields).\n     * @type {string}\n     */\n    this.fieldName = options.fieldName\n    /**\n     * Defines if the index enforces a unique constraint for this index.\n     * @type {boolean}\n     */\n    this.unique = options.unique || false\n    /**\n     * Defines if we can have documents for which fieldName is `undefined`\n     * @type {boolean}\n     */\n    this.sparse = options.sparse || false\n\n    /**\n     * Options object given to the underlying BinarySearchTree.\n     * @type {{unique: boolean, checkValueEquality: (function(*, *): boolean), compareKeys: ((function(*, *, compareStrings): (number|number))|*)}}\n     */\n    this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality }\n\n    /**\n     * Underlying BinarySearchTree for this index. Uses an AVLTree for optimization.\n     * @type {AVLTree}\n     */\n    this.tree = new BinarySearchTree(this.treeOptions)\n  }\n\n  /**\n   * Reset an index\n   * @param {?document|?document[]} [newData] Data to initialize the index with. If an error is thrown during\n   * insertion, the index is not modified.\n   */\n  reset (newData) {\n    this.tree = new BinarySearchTree(this.treeOptions)\n\n    if (newData) this.insert(newData)\n  }\n\n  /**\n   * Insert a new document in the index\n   * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n   * O(log(n))\n   * @param {document|document[]} doc The document, or array of documents, to insert.\n   */\n  insert (doc) {\n    let keys\n    let failingIndex\n    let error\n\n    if (Array.isArray(doc)) {\n      this.insertMultipleDocs(doc)\n      return\n    }\n\n    const key = model.getDotValue(doc, this.fieldName)\n\n    // We don't index documents that don't contain the field if the index is sparse\n    if (key === undefined && this.sparse) return\n\n    if (!Array.isArray(key)) this.tree.insert(key, doc)\n    else {\n      // If an insert fails due to a unique constraint, roll back all inserts before it\n      keys = uniq(key, projectForUnique)\n\n      for (let i = 0; i < keys.length; i += 1) {\n        try {\n          this.tree.insert(keys[i], doc)\n        } catch (e) {\n          error = e\n          failingIndex = i\n          break\n        }\n      }\n\n      if (error) {\n        for (let i = 0; i < failingIndex; i += 1) {\n          this.tree.delete(keys[i], doc)\n        }\n\n        throw error\n      }\n    }\n  }\n\n  /**\n   * Insert an array of documents in the index\n   * If a constraint is violated, the changes should be rolled back and an error thrown\n   * @param {document[]} docs Array of documents to insert.\n   * @private\n   */\n  insertMultipleDocs (docs) {\n    let error\n    let failingIndex\n\n    for (let i = 0; i < docs.length; i += 1) {\n      try {\n        this.insert(docs[i])\n      } catch (e) {\n        error = e\n        failingIndex = i\n        break\n      }\n    }\n\n    if (error) {\n      for (let i = 0; i < failingIndex; i += 1) {\n        this.remove(docs[i])\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Removes a document from the index.\n   * If an array is passed, we remove all its elements\n   * The remove operation is safe with regards to the 'unique' constraint\n   * O(log(n))\n   * @param {document[]|document} doc The document, or Array of documents, to remove.\n   */\n  remove (doc) {\n    if (Array.isArray(doc)) {\n      doc.forEach(d => { this.remove(d) })\n      return\n    }\n\n    const key = model.getDotValue(doc, this.fieldName)\n\n    if (key === undefined && this.sparse) return\n\n    if (!Array.isArray(key)) {\n      this.tree.delete(key, doc)\n    } else {\n      uniq(key, projectForUnique).forEach(_key => {\n        this.tree.delete(_key, doc)\n      })\n    }\n  }\n\n  /**\n   * Update a document in the index\n   * If a constraint is violated, changes are rolled back and an error thrown\n   * Naive implementation, still in O(log(n))\n   * @param {document|Array.<{oldDoc: document, newDoc: document}>} oldDoc Document to update, or an `Array` of\n   * `{oldDoc, newDoc}` pairs.\n   * @param {document} [newDoc] Document to replace the oldDoc with. If the first argument is an `Array` of\n   * `{oldDoc, newDoc}` pairs, this second argument is ignored.\n   */\n  update (oldDoc, newDoc) {\n    if (Array.isArray(oldDoc)) {\n      this.updateMultipleDocs(oldDoc)\n      return\n    }\n\n    this.remove(oldDoc)\n\n    try {\n      this.insert(newDoc)\n    } catch (e) {\n      this.insert(oldDoc)\n      throw e\n    }\n  }\n\n  /**\n   * Update multiple documents in the index\n   * If a constraint is violated, the changes need to be rolled back\n   * and an error thrown\n   * @param {Array.<{oldDoc: document, newDoc: document}>} pairs\n   *\n   * @private\n   */\n  updateMultipleDocs (pairs) {\n    let failingIndex\n    let error\n\n    for (let i = 0; i < pairs.length; i += 1) {\n      this.remove(pairs[i].oldDoc)\n    }\n\n    for (let i = 0; i < pairs.length; i += 1) {\n      try {\n        this.insert(pairs[i].newDoc)\n      } catch (e) {\n        error = e\n        failingIndex = i\n        break\n      }\n    }\n\n    // If an error was raised, roll back changes in the inverse order\n    if (error) {\n      for (let i = 0; i < failingIndex; i += 1) {\n        this.remove(pairs[i].newDoc)\n      }\n\n      for (let i = 0; i < pairs.length; i += 1) {\n        this.insert(pairs[i].oldDoc)\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Revert an update\n   * @param {document|Array.<{oldDoc: document, newDoc: document}>} oldDoc Document to revert to, or an `Array` of `{oldDoc, newDoc}` pairs.\n   * @param {document} [newDoc] Document to revert from. If the first argument is an Array of {oldDoc, newDoc}, this second argument is ignored.\n   */\n  revertUpdate (oldDoc, newDoc) {\n    const revert = []\n\n    if (!Array.isArray(oldDoc)) this.update(newDoc, oldDoc)\n    else {\n      oldDoc.forEach(pair => {\n        revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc })\n      })\n      this.update(revert)\n    }\n  }\n\n  /**\n   * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n   * @param {Array.<*>|*} value Value to match the key against\n   * @return {document[]}\n   */\n  getMatching (value) {\n    if (!Array.isArray(value)) return this.tree.search(value)\n    else {\n      const _res = {}\n      const res = []\n\n      value.forEach(v => {\n        this.getMatching(v).forEach(doc => {\n          _res[doc._id] = doc\n        })\n      })\n\n      Object.keys(_res).forEach(_id => {\n        res.push(_res[_id])\n      })\n\n      return res\n    }\n  }\n\n  /**\n   * Get all documents in index whose key is between bounds are they are defined by query\n   * Documents are sorted by key\n   * @param {object} query An object with at least one matcher among $gt, $gte, $lt, $lte.\n   * @param {*} [query.$gt] Greater than matcher.\n   * @param {*} [query.$gte] Greater than or equal matcher.\n   * @param {*} [query.$lt] Lower than matcher.\n   * @param {*} [query.$lte] Lower than or equal matcher.\n   * @return {document[]}\n   */\n  getBetweenBounds (query) {\n    return this.tree.betweenBounds(query)\n  }\n\n  /**\n   * Get all elements in the index\n   * @return {document[]}\n   */\n  getAll () {\n    const res = []\n\n    this.tree.executeOnEveryNode(node => {\n      res.push(...node.data)\n    })\n\n    return res\n  }\n}\n\n// Interface\nmodule.exports = Index\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL2luZGV4ZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL2luZGV4ZXMuanM/NWY4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCaW5hcnlTZWFyY2hUcmVlID0gcmVxdWlyZSgnQHNlYWxkLWlvL2JpbmFyeS1zZWFyY2gtdHJlZScpLkFWTFRyZWVcbmNvbnN0IG1vZGVsID0gcmVxdWlyZSgnLi9tb2RlbC5qcycpXG5jb25zdCB7IHVuaXEsIGlzRGF0ZSB9ID0gcmVxdWlyZSgnLi91dGlscy5qcycpXG5cbi8qKlxuICogVHdvIGluZGV4ZWQgcG9pbnRlcnMgYXJlIGVxdWFsIGlmIHRoZXkgcG9pbnQgdG8gdGhlIHNhbWUgcGxhY2VcbiAqIEBwYXJhbSB7Kn0gYVxuICogQHBhcmFtIHsqfSBiXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuY29uc3QgY2hlY2tWYWx1ZUVxdWFsaXR5ID0gKGEsIGIpID0+IGEgPT09IGJcblxuLyoqXG4gKiBUeXBlLWF3YXJlIHByb2plY3Rpb25cbiAqIEBwYXJhbSB7Kn0gZWx0XG4gKiBAcmV0dXJuIHtzdHJpbmd8Kn1cbiAqIEBwcml2YXRlXG4gKi9cbmNvbnN0IHByb2plY3RGb3JVbmlxdWUgPSBlbHQgPT4ge1xuICBpZiAoZWx0ID09PSBudWxsKSByZXR1cm4gJyRudWxsJ1xuICBpZiAodHlwZW9mIGVsdCA9PT0gJ3N0cmluZycpIHJldHVybiAnJHN0cmluZycgKyBlbHRcbiAgaWYgKHR5cGVvZiBlbHQgPT09ICdib29sZWFuJykgcmV0dXJuICckYm9vbGVhbicgKyBlbHRcbiAgaWYgKHR5cGVvZiBlbHQgPT09ICdudW1iZXInKSByZXR1cm4gJyRudW1iZXInICsgZWx0XG4gIGlmIChpc0RhdGUoZWx0KSkgcmV0dXJuICckZGF0ZScgKyBlbHQuZ2V0VGltZSgpXG5cbiAgcmV0dXJuIGVsdCAvLyBBcnJheXMgYW5kIG9iamVjdHMsIHdpbGwgY2hlY2sgZm9yIHBvaW50ZXIgZXF1YWxpdHlcbn1cblxuLyoqXG4gKiBJbmRleGVzIG9uIGZpZWxkIG5hbWVzLCB3aXRoIGF0b21pYyBvcGVyYXRpb25zIGFuZCB3aGljaCBjYW4gb3B0aW9uYWxseSBlbmZvcmNlIGEgdW5pcXVlIGNvbnN0cmFpbnQgb3IgYWxsb3cgaW5kZXhlZFxuICogZmllbGRzIHRvIGJlIHVuZGVmaW5lZFxuICogQHByaXZhdGVcbiAqL1xuY2xhc3MgSW5kZXgge1xuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IGluZGV4XG4gICAqIEFsbCBtZXRob2RzIG9uIGFuIGluZGV4IGd1YXJhbnRlZSB0aGF0IGVpdGhlciB0aGUgd2hvbGUgb3BlcmF0aW9uIHdhcyBzdWNjZXNzZnVsIGFuZCB0aGUgaW5kZXggY2hhbmdlZFxuICAgKiBvciB0aGUgb3BlcmF0aW9uIHdhcyB1bnN1Y2Nlc3NmdWwgYW5kIGFuIGVycm9yIGlzIHRocm93biB3aGlsZSB0aGUgaW5kZXggaXMgdW5jaGFuZ2VkXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBvcHRpb25zLmZpZWxkTmFtZSBPbiB3aGljaCBmaWVsZCBzaG91bGQgdGhlIGluZGV4IGFwcGx5IChjYW4gdXNlIGRvdCBub3RhdGlvbiB0byBpbmRleCBvbiBzdWIgZmllbGRzKVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnVuaXF1ZSA9IGZhbHNlXSBFbmZvcmNlcyBhIHVuaXF1ZSBjb25zdHJhaW50XG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuc3BhcnNlID0gZmFsc2VdIEFsbG93cyBhIHNwYXJzZSBpbmRleCAod2UgY2FuIGhhdmUgZG9jdW1lbnRzIGZvciB3aGljaCBmaWVsZE5hbWUgaXMgYHVuZGVmaW5lZGApXG4gICAqL1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIC8qKlxuICAgICAqIE9uIHdoaWNoIGZpZWxkIHRoZSBpbmRleCBhcHBsaWVzIHRvIChtYXkgdXNlIGRvdCBub3RhdGlvbiB0byBpbmRleCBvbiBzdWIgZmllbGRzKS5cbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHRoaXMuZmllbGROYW1lID0gb3B0aW9ucy5maWVsZE5hbWVcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGlmIHRoZSBpbmRleCBlbmZvcmNlcyBhIHVuaXF1ZSBjb25zdHJhaW50IGZvciB0aGlzIGluZGV4LlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIHRoaXMudW5pcXVlID0gb3B0aW9ucy51bmlxdWUgfHwgZmFsc2VcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGlmIHdlIGNhbiBoYXZlIGRvY3VtZW50cyBmb3Igd2hpY2ggZmllbGROYW1lIGlzIGB1bmRlZmluZWRgXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgdGhpcy5zcGFyc2UgPSBvcHRpb25zLnNwYXJzZSB8fCBmYWxzZVxuXG4gICAgLyoqXG4gICAgICogT3B0aW9ucyBvYmplY3QgZ2l2ZW4gdG8gdGhlIHVuZGVybHlpbmcgQmluYXJ5U2VhcmNoVHJlZS5cbiAgICAgKiBAdHlwZSB7e3VuaXF1ZTogYm9vbGVhbiwgY2hlY2tWYWx1ZUVxdWFsaXR5OiAoZnVuY3Rpb24oKiwgKik6IGJvb2xlYW4pLCBjb21wYXJlS2V5czogKChmdW5jdGlvbigqLCAqLCBjb21wYXJlU3RyaW5ncyk6IChudW1iZXJ8bnVtYmVyKSl8Kil9fVxuICAgICAqL1xuICAgIHRoaXMudHJlZU9wdGlvbnMgPSB7IHVuaXF1ZTogdGhpcy51bmlxdWUsIGNvbXBhcmVLZXlzOiBtb2RlbC5jb21wYXJlVGhpbmdzLCBjaGVja1ZhbHVlRXF1YWxpdHk6IGNoZWNrVmFsdWVFcXVhbGl0eSB9XG5cbiAgICAvKipcbiAgICAgKiBVbmRlcmx5aW5nIEJpbmFyeVNlYXJjaFRyZWUgZm9yIHRoaXMgaW5kZXguIFVzZXMgYW4gQVZMVHJlZSBmb3Igb3B0aW1pemF0aW9uLlxuICAgICAqIEB0eXBlIHtBVkxUcmVlfVxuICAgICAqL1xuICAgIHRoaXMudHJlZSA9IG5ldyBCaW5hcnlTZWFyY2hUcmVlKHRoaXMudHJlZU9wdGlvbnMpXG4gIH1cblxuICAvKipcbiAgICogUmVzZXQgYW4gaW5kZXhcbiAgICogQHBhcmFtIHs/ZG9jdW1lbnR8P2RvY3VtZW50W119IFtuZXdEYXRhXSBEYXRhIHRvIGluaXRpYWxpemUgdGhlIGluZGV4IHdpdGguIElmIGFuIGVycm9yIGlzIHRocm93biBkdXJpbmdcbiAgICogaW5zZXJ0aW9uLCB0aGUgaW5kZXggaXMgbm90IG1vZGlmaWVkLlxuICAgKi9cbiAgcmVzZXQgKG5ld0RhdGEpIHtcbiAgICB0aGlzLnRyZWUgPSBuZXcgQmluYXJ5U2VhcmNoVHJlZSh0aGlzLnRyZWVPcHRpb25zKVxuXG4gICAgaWYgKG5ld0RhdGEpIHRoaXMuaW5zZXJ0KG5ld0RhdGEpXG4gIH1cblxuICAvKipcbiAgICogSW5zZXJ0IGEgbmV3IGRvY3VtZW50IGluIHRoZSBpbmRleFxuICAgKiBJZiBhbiBhcnJheSBpcyBwYXNzZWQsIHdlIGluc2VydCBhbGwgaXRzIGVsZW1lbnRzIChpZiBvbmUgaW5zZXJ0aW9uIGZhaWxzIHRoZSBpbmRleCBpcyBub3QgbW9kaWZpZWQpXG4gICAqIE8obG9nKG4pKVxuICAgKiBAcGFyYW0ge2RvY3VtZW50fGRvY3VtZW50W119IGRvYyBUaGUgZG9jdW1lbnQsIG9yIGFycmF5IG9mIGRvY3VtZW50cywgdG8gaW5zZXJ0LlxuICAgKi9cbiAgaW5zZXJ0IChkb2MpIHtcbiAgICBsZXQga2V5c1xuICAgIGxldCBmYWlsaW5nSW5kZXhcbiAgICBsZXQgZXJyb3JcblxuICAgIGlmIChBcnJheS5pc0FycmF5KGRvYykpIHtcbiAgICAgIHRoaXMuaW5zZXJ0TXVsdGlwbGVEb2NzKGRvYylcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGtleSA9IG1vZGVsLmdldERvdFZhbHVlKGRvYywgdGhpcy5maWVsZE5hbWUpXG5cbiAgICAvLyBXZSBkb24ndCBpbmRleCBkb2N1bWVudHMgdGhhdCBkb24ndCBjb250YWluIHRoZSBmaWVsZCBpZiB0aGUgaW5kZXggaXMgc3BhcnNlXG4gICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkICYmIHRoaXMuc3BhcnNlKSByZXR1cm5cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShrZXkpKSB0aGlzLnRyZWUuaW5zZXJ0KGtleSwgZG9jKVxuICAgIGVsc2Uge1xuICAgICAgLy8gSWYgYW4gaW5zZXJ0IGZhaWxzIGR1ZSB0byBhIHVuaXF1ZSBjb25zdHJhaW50LCByb2xsIGJhY2sgYWxsIGluc2VydHMgYmVmb3JlIGl0XG4gICAgICBrZXlzID0gdW5pcShrZXksIHByb2plY3RGb3JVbmlxdWUpXG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHRoaXMudHJlZS5pbnNlcnQoa2V5c1tpXSwgZG9jKVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgZXJyb3IgPSBlXG4gICAgICAgICAgZmFpbGluZ0luZGV4ID0gaVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmFpbGluZ0luZGV4OyBpICs9IDEpIHtcbiAgICAgICAgICB0aGlzLnRyZWUuZGVsZXRlKGtleXNbaV0sIGRvYylcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IGVycm9yXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEluc2VydCBhbiBhcnJheSBvZiBkb2N1bWVudHMgaW4gdGhlIGluZGV4XG4gICAqIElmIGEgY29uc3RyYWludCBpcyB2aW9sYXRlZCwgdGhlIGNoYW5nZXMgc2hvdWxkIGJlIHJvbGxlZCBiYWNrIGFuZCBhbiBlcnJvciB0aHJvd25cbiAgICogQHBhcmFtIHtkb2N1bWVudFtdfSBkb2NzIEFycmF5IG9mIGRvY3VtZW50cyB0byBpbnNlcnQuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBpbnNlcnRNdWx0aXBsZURvY3MgKGRvY3MpIHtcbiAgICBsZXQgZXJyb3JcbiAgICBsZXQgZmFpbGluZ0luZGV4XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRvY3MubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHRoaXMuaW5zZXJ0KGRvY3NbaV0pXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGVycm9yID0gZVxuICAgICAgICBmYWlsaW5nSW5kZXggPSBpXG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZhaWxpbmdJbmRleDsgaSArPSAxKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlKGRvY3NbaV0pXG4gICAgICB9XG5cbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBkb2N1bWVudCBmcm9tIHRoZSBpbmRleC5cbiAgICogSWYgYW4gYXJyYXkgaXMgcGFzc2VkLCB3ZSByZW1vdmUgYWxsIGl0cyBlbGVtZW50c1xuICAgKiBUaGUgcmVtb3ZlIG9wZXJhdGlvbiBpcyBzYWZlIHdpdGggcmVnYXJkcyB0byB0aGUgJ3VuaXF1ZScgY29uc3RyYWludFxuICAgKiBPKGxvZyhuKSlcbiAgICogQHBhcmFtIHtkb2N1bWVudFtdfGRvY3VtZW50fSBkb2MgVGhlIGRvY3VtZW50LCBvciBBcnJheSBvZiBkb2N1bWVudHMsIHRvIHJlbW92ZS5cbiAgICovXG4gIHJlbW92ZSAoZG9jKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZG9jKSkge1xuICAgICAgZG9jLmZvckVhY2goZCA9PiB7IHRoaXMucmVtb3ZlKGQpIH0pXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBrZXkgPSBtb2RlbC5nZXREb3RWYWx1ZShkb2MsIHRoaXMuZmllbGROYW1lKVxuXG4gICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkICYmIHRoaXMuc3BhcnNlKSByZXR1cm5cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShrZXkpKSB7XG4gICAgICB0aGlzLnRyZWUuZGVsZXRlKGtleSwgZG9jKVxuICAgIH0gZWxzZSB7XG4gICAgICB1bmlxKGtleSwgcHJvamVjdEZvclVuaXF1ZSkuZm9yRWFjaChfa2V5ID0+IHtcbiAgICAgICAgdGhpcy50cmVlLmRlbGV0ZShfa2V5LCBkb2MpXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgYSBkb2N1bWVudCBpbiB0aGUgaW5kZXhcbiAgICogSWYgYSBjb25zdHJhaW50IGlzIHZpb2xhdGVkLCBjaGFuZ2VzIGFyZSByb2xsZWQgYmFjayBhbmQgYW4gZXJyb3IgdGhyb3duXG4gICAqIE5haXZlIGltcGxlbWVudGF0aW9uLCBzdGlsbCBpbiBPKGxvZyhuKSlcbiAgICogQHBhcmFtIHtkb2N1bWVudHxBcnJheS48e29sZERvYzogZG9jdW1lbnQsIG5ld0RvYzogZG9jdW1lbnR9Pn0gb2xkRG9jIERvY3VtZW50IHRvIHVwZGF0ZSwgb3IgYW4gYEFycmF5YCBvZlxuICAgKiBge29sZERvYywgbmV3RG9jfWAgcGFpcnMuXG4gICAqIEBwYXJhbSB7ZG9jdW1lbnR9IFtuZXdEb2NdIERvY3VtZW50IHRvIHJlcGxhY2UgdGhlIG9sZERvYyB3aXRoLiBJZiB0aGUgZmlyc3QgYXJndW1lbnQgaXMgYW4gYEFycmF5YCBvZlxuICAgKiBge29sZERvYywgbmV3RG9jfWAgcGFpcnMsIHRoaXMgc2Vjb25kIGFyZ3VtZW50IGlzIGlnbm9yZWQuXG4gICAqL1xuICB1cGRhdGUgKG9sZERvYywgbmV3RG9jKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2xkRG9jKSkge1xuICAgICAgdGhpcy51cGRhdGVNdWx0aXBsZURvY3Mob2xkRG9jKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdGhpcy5yZW1vdmUob2xkRG9jKVxuXG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuaW5zZXJ0KG5ld0RvYylcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLmluc2VydChvbGREb2MpXG4gICAgICB0aHJvdyBlXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZSBtdWx0aXBsZSBkb2N1bWVudHMgaW4gdGhlIGluZGV4XG4gICAqIElmIGEgY29uc3RyYWludCBpcyB2aW9sYXRlZCwgdGhlIGNoYW5nZXMgbmVlZCB0byBiZSByb2xsZWQgYmFja1xuICAgKiBhbmQgYW4gZXJyb3IgdGhyb3duXG4gICAqIEBwYXJhbSB7QXJyYXkuPHtvbGREb2M6IGRvY3VtZW50LCBuZXdEb2M6IGRvY3VtZW50fT59IHBhaXJzXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB1cGRhdGVNdWx0aXBsZURvY3MgKHBhaXJzKSB7XG4gICAgbGV0IGZhaWxpbmdJbmRleFxuICAgIGxldCBlcnJvclxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWlycy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdGhpcy5yZW1vdmUocGFpcnNbaV0ub2xkRG9jKVxuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHRoaXMuaW5zZXJ0KHBhaXJzW2ldLm5ld0RvYylcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgZXJyb3IgPSBlXG4gICAgICAgIGZhaWxpbmdJbmRleCA9IGlcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBJZiBhbiBlcnJvciB3YXMgcmFpc2VkLCByb2xsIGJhY2sgY2hhbmdlcyBpbiB0aGUgaW52ZXJzZSBvcmRlclxuICAgIGlmIChlcnJvcikge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmYWlsaW5nSW5kZXg7IGkgKz0gMSkge1xuICAgICAgICB0aGlzLnJlbW92ZShwYWlyc1tpXS5uZXdEb2MpXG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgdGhpcy5pbnNlcnQocGFpcnNbaV0ub2xkRG9jKVxuICAgICAgfVxuXG4gICAgICB0aHJvdyBlcnJvclxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXZlcnQgYW4gdXBkYXRlXG4gICAqIEBwYXJhbSB7ZG9jdW1lbnR8QXJyYXkuPHtvbGREb2M6IGRvY3VtZW50LCBuZXdEb2M6IGRvY3VtZW50fT59IG9sZERvYyBEb2N1bWVudCB0byByZXZlcnQgdG8sIG9yIGFuIGBBcnJheWAgb2YgYHtvbGREb2MsIG5ld0RvY31gIHBhaXJzLlxuICAgKiBAcGFyYW0ge2RvY3VtZW50fSBbbmV3RG9jXSBEb2N1bWVudCB0byByZXZlcnQgZnJvbS4gSWYgdGhlIGZpcnN0IGFyZ3VtZW50IGlzIGFuIEFycmF5IG9mIHtvbGREb2MsIG5ld0RvY30sIHRoaXMgc2Vjb25kIGFyZ3VtZW50IGlzIGlnbm9yZWQuXG4gICAqL1xuICByZXZlcnRVcGRhdGUgKG9sZERvYywgbmV3RG9jKSB7XG4gICAgY29uc3QgcmV2ZXJ0ID0gW11cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShvbGREb2MpKSB0aGlzLnVwZGF0ZShuZXdEb2MsIG9sZERvYylcbiAgICBlbHNlIHtcbiAgICAgIG9sZERvYy5mb3JFYWNoKHBhaXIgPT4ge1xuICAgICAgICByZXZlcnQucHVzaCh7IG9sZERvYzogcGFpci5uZXdEb2MsIG5ld0RvYzogcGFpci5vbGREb2MgfSlcbiAgICAgIH0pXG4gICAgICB0aGlzLnVwZGF0ZShyZXZlcnQpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbGwgZG9jdW1lbnRzIGluIGluZGV4IHdob3NlIGtleSBtYXRjaCB2YWx1ZSAoaWYgaXQgaXMgYSBUaGluZykgb3Igb25lIG9mIHRoZSBlbGVtZW50cyBvZiB2YWx1ZSAoaWYgaXQgaXMgYW4gYXJyYXkgb2YgVGhpbmdzKVxuICAgKiBAcGFyYW0ge0FycmF5LjwqPnwqfSB2YWx1ZSBWYWx1ZSB0byBtYXRjaCB0aGUga2V5IGFnYWluc3RcbiAgICogQHJldHVybiB7ZG9jdW1lbnRbXX1cbiAgICovXG4gIGdldE1hdGNoaW5nICh2YWx1ZSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHJldHVybiB0aGlzLnRyZWUuc2VhcmNoKHZhbHVlKVxuICAgIGVsc2Uge1xuICAgICAgY29uc3QgX3JlcyA9IHt9XG4gICAgICBjb25zdCByZXMgPSBbXVxuXG4gICAgICB2YWx1ZS5mb3JFYWNoKHYgPT4ge1xuICAgICAgICB0aGlzLmdldE1hdGNoaW5nKHYpLmZvckVhY2goZG9jID0+IHtcbiAgICAgICAgICBfcmVzW2RvYy5faWRdID0gZG9jXG4gICAgICAgIH0pXG4gICAgICB9KVxuXG4gICAgICBPYmplY3Qua2V5cyhfcmVzKS5mb3JFYWNoKF9pZCA9PiB7XG4gICAgICAgIHJlcy5wdXNoKF9yZXNbX2lkXSlcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiByZXNcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCBkb2N1bWVudHMgaW4gaW5kZXggd2hvc2Uga2V5IGlzIGJldHdlZW4gYm91bmRzIGFyZSB0aGV5IGFyZSBkZWZpbmVkIGJ5IHF1ZXJ5XG4gICAqIERvY3VtZW50cyBhcmUgc29ydGVkIGJ5IGtleVxuICAgKiBAcGFyYW0ge29iamVjdH0gcXVlcnkgQW4gb2JqZWN0IHdpdGggYXQgbGVhc3Qgb25lIG1hdGNoZXIgYW1vbmcgJGd0LCAkZ3RlLCAkbHQsICRsdGUuXG4gICAqIEBwYXJhbSB7Kn0gW3F1ZXJ5LiRndF0gR3JlYXRlciB0aGFuIG1hdGNoZXIuXG4gICAqIEBwYXJhbSB7Kn0gW3F1ZXJ5LiRndGVdIEdyZWF0ZXIgdGhhbiBvciBlcXVhbCBtYXRjaGVyLlxuICAgKiBAcGFyYW0geyp9IFtxdWVyeS4kbHRdIExvd2VyIHRoYW4gbWF0Y2hlci5cbiAgICogQHBhcmFtIHsqfSBbcXVlcnkuJGx0ZV0gTG93ZXIgdGhhbiBvciBlcXVhbCBtYXRjaGVyLlxuICAgKiBAcmV0dXJuIHtkb2N1bWVudFtdfVxuICAgKi9cbiAgZ2V0QmV0d2VlbkJvdW5kcyAocXVlcnkpIHtcbiAgICByZXR1cm4gdGhpcy50cmVlLmJldHdlZW5Cb3VuZHMocXVlcnkpXG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCBlbGVtZW50cyBpbiB0aGUgaW5kZXhcbiAgICogQHJldHVybiB7ZG9jdW1lbnRbXX1cbiAgICovXG4gIGdldEFsbCAoKSB7XG4gICAgY29uc3QgcmVzID0gW11cblxuICAgIHRoaXMudHJlZS5leGVjdXRlT25FdmVyeU5vZGUobm9kZSA9PiB7XG4gICAgICByZXMucHVzaCguLi5ub2RlLmRhdGEpXG4gICAgfSlcblxuICAgIHJldHVybiByZXNcbiAgfVxufVxuXG4vLyBJbnRlcmZhY2Vcbm1vZHVsZS5leHBvcnRzID0gSW5kZXhcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/indexes.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/model.js":
/*!**************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/model.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n * @module model\n * @private\n */\nconst { uniq, isDate, isRegExp } = __webpack_require__(/*! ./utils.js */ \"./node_modules/@seald-io/nedb/lib/utils.js\")\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {string} k key\n * @param {document} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n * @private\n */\nconst checkKey = (k, v) => {\n  if (typeof k === 'number') k = k.toString()\n\n  if (\n    k[0] === '$' &&\n    !(k === '$$date' && typeof v === 'number') &&\n    !(k === '$$deleted' && v === true) &&\n    !(k === '$$indexCreated') &&\n    !(k === '$$indexRemoved')\n  ) throw new Error('Field names cannot begin with the $ character')\n\n  if (k.indexOf('.') !== -1) throw new Error('Field names cannot contain a .')\n}\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n * @param {document|document[]} obj\n * @alias module:model.checkObject\n */\nconst checkObject = obj => {\n  if (Array.isArray(obj)) {\n    obj.forEach(o => {\n      checkObject(o)\n    })\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    for (const k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        checkKey(k, obj[k])\n        checkObject(obj[k])\n      }\n    }\n  }\n}\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n * @param {document} obj\n * @return {string}\n * @alias module:model.serialize\n */\nconst serialize = obj => {\n  return JSON.stringify(obj, function (k, v) {\n    checkKey(k, v)\n\n    if (v === undefined) return undefined\n    if (v === null) return null\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') return { $$date: this[k].getTime() }\n\n    return v\n  })\n}\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n * @param {string} rawData\n * @return {document}\n * @alias module:model.deserialize\n */\nconst deserialize = rawData => JSON.parse(rawData, function (k, v) {\n  if (k === '$$date') return new Date(v)\n  if (\n    typeof v === 'string' ||\n    typeof v === 'number' ||\n    typeof v === 'boolean' ||\n    v === null\n  ) return v\n  if (v && v.$$date) return v.$$date\n\n  return v\n})\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n * @param {?document} obj\n * @param {boolean} [strictKeys=false]\n * @return {?document}\n * @alias module:modelel:(.*)\n */\nfunction deepCopy (obj, strictKeys) {\n  if (\n    typeof obj === 'boolean' ||\n    typeof obj === 'number' ||\n    typeof obj === 'string' ||\n    obj === null ||\n    (isDate(obj))\n  ) return obj\n\n  if (Array.isArray(obj)) return obj.map(o => deepCopy(o, strictKeys))\n\n  if (typeof obj === 'object') {\n    const res = {}\n    for (const k in obj) {\n      if (\n        Object.prototype.hasOwnProperty.call(obj, k) &&\n        (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1))\n      ) {\n        res[k] = deepCopy(obj[k], strictKeys)\n      }\n    }\n    return res\n  }\n\n  return undefined // For now everything else is undefined. We should probably throw an error instead\n}\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n * @param {*} obj\n * @return {boolean}\n * @alias module:modelel:(.*)\n */\nconst isPrimitiveType = obj => (\n  typeof obj === 'boolean' ||\n  typeof obj === 'number' ||\n  typeof obj === 'string' ||\n  obj === null ||\n  isDate(obj) ||\n  Array.isArray(obj)\n)\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n * @param {number|string|boolean} a\n * @param {number|string|boolean} b\n * @return {number} 0 if a == b, 1 i a > b, -1 if a < b\n * @private\n */\nconst compareNSB = (a, b) => {\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n\n/**\n * Utility function for comparing array\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n * @param {Array} a\n * @param {Array} b\n * @return {number} 0 if arrays have the same length and all elements equal one another. Else either 1 or -1.\n * @private\n */\nconst compareArrays = (a, b) => {\n  const minLength = Math.min(a.length, b.length)\n  for (let i = 0; i < minLength; i += 1) {\n    const comp = compareThings(a[i], b[i])\n\n    if (comp !== 0) return comp\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length)\n}\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n * @param {*} a\n * @param {*} b\n * @param {compareStrings} [_compareStrings] String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n * @return {number}\n * @alias module:model.compareThings\n */\nconst compareThings = (a, b, _compareStrings) => {\n  const compareStrings = _compareStrings || compareNSB\n\n  // undefined\n  if (a === undefined) return b === undefined ? 0 : -1\n  if (b === undefined) return 1 // no need to test if a === undefined\n\n  // null\n  if (a === null) return b === null ? 0 : -1\n  if (b === null) return 1 // no need to test if a === null\n\n  // Numbers\n  if (typeof a === 'number') return typeof b === 'number' ? compareNSB(a, b) : -1\n  if (typeof b === 'number') return typeof a === 'number' ? compareNSB(a, b) : 1\n\n  // Strings\n  if (typeof a === 'string') return typeof b === 'string' ? compareStrings(a, b) : -1\n  if (typeof b === 'string') return typeof a === 'string' ? compareStrings(a, b) : 1\n\n  // Booleans\n  if (typeof a === 'boolean') return typeof b === 'boolean' ? compareNSB(a, b) : -1\n  if (typeof b === 'boolean') return typeof a === 'boolean' ? compareNSB(a, b) : 1\n\n  // Dates\n  if (isDate(a)) return isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1\n  if (isDate(b)) return isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1\n\n  // Arrays (first element is most significant and so on)\n  if (Array.isArray(a)) return Array.isArray(b) ? compareArrays(a, b) : -1\n  if (Array.isArray(b)) return Array.isArray(a) ? compareArrays(a, b) : 1\n\n  // Objects\n  const aKeys = Object.keys(a).sort()\n  const bKeys = Object.keys(b).sort()\n\n  for (let i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    const comp = compareThings(a[aKeys[i]], b[bKeys[i]])\n\n    if (comp !== 0) return comp\n  }\n\n  return compareNSB(aKeys.length, bKeys.length)\n}\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * @callback modifierFunction\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {document} value\n */\n\n/**\n * Create the complete modifier function\n * @param {modifierFunction} lastStepModifierFunction a lastStepModifierFunction\n * @param {boolean} [unset = false] Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n * @return {modifierFunction}\n * @private\n */\nconst createModifierFunction = (lastStepModifierFunction, unset = false) => (obj, field, value) => {\n  const func = (obj, field, value) => {\n    const fieldParts = typeof field === 'string' ? field.split('.') : field\n\n    if (fieldParts.length === 1) lastStepModifierFunction(obj, field, value)\n    else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (unset) return\n        obj[fieldParts[0]] = {}\n      }\n      func(obj[fieldParts[0]], fieldParts.slice(1), value)\n    }\n  }\n  return func(obj, field, value)\n}\n\nconst $addToSetPartial = (obj, field, value) => {\n  // Create the array if it doesn't exist\n  if (!Object.prototype.hasOwnProperty.call(obj, field)) { obj[field] = [] }\n\n  if (!Array.isArray(obj[field])) throw new Error('Can\\'t $addToSet an element on non-array values')\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) throw new Error('Can\\'t use another field in conjunction with $each')\n    if (!Array.isArray(value.$each)) throw new Error('$each requires an array value')\n\n    value.$each.forEach(v => {\n      $addToSetPartial(obj, field, v)\n    })\n  } else {\n    let addToSet = true\n    obj[field].forEach(v => {\n      if (compareThings(v, value) === 0) addToSet = false\n    })\n    if (addToSet) obj[field].push(value)\n  }\n}\n\n/**\n * @enum {modifierFunction}\n */\nconst modifierFunctions = {\n  /**\n   * Set a field to a new value\n   */\n  $set: createModifierFunction((obj, field, value) => {\n    obj[field] = value\n  }),\n  /**\n   * Unset a field\n   */\n  $unset: createModifierFunction((obj, field, value) => {\n    delete obj[field]\n  }, true),\n  /**\n   * Updates the value of the field, only if specified field is smaller than the current value of the field\n   */\n  $min: createModifierFunction((obj, field, value) => {\n    if (typeof obj[field] === 'undefined') obj[field] = value\n    else if (value < obj[field]) obj[field] = value\n  }),\n  /**\n   * Updates the value of the field, only if specified field is greater than the current value of the field\n   */\n  $max: createModifierFunction((obj, field, value) => {\n    if (typeof obj[field] === 'undefined') obj[field] = value\n    else if (value > obj[field]) obj[field] = value\n  }),\n  /**\n   * Increment a numeric field's value\n   */\n  $inc: createModifierFunction((obj, field, value) => {\n    if (typeof value !== 'number') throw new Error(`${value} must be a number`)\n\n    if (typeof obj[field] !== 'number') {\n      if (!Object.prototype.hasOwnProperty.call(obj, field)) obj[field] = value\n      else throw new Error('Don\\'t use the $inc modifier on non-number fields')\n    } else obj[field] += value\n  }),\n  /**\n   * Removes all instances of a value from an existing array\n   */\n  $pull: createModifierFunction((obj, field, value) => {\n    if (!Array.isArray(obj[field])) throw new Error('Can\\'t $pull an element from non-array values')\n\n    const arr = obj[field]\n    for (let i = arr.length - 1; i >= 0; i -= 1) {\n      if (match(arr[i], value)) arr.splice(i, 1)\n    }\n  }),\n  /**\n   * Remove the first or last element of an array\n   */\n  $pop: createModifierFunction((obj, field, value) => {\n    if (!Array.isArray(obj[field])) throw new Error('Can\\'t $pop an element from non-array values')\n    if (typeof value !== 'number') throw new Error(`${value} isn't an integer, can't use it with $pop`)\n    if (value === 0) return\n\n    if (value > 0) obj[field] = obj[field].slice(0, obj[field].length - 1)\n    else obj[field] = obj[field].slice(1)\n  }),\n  /**\n   * Add an element to an array field only if it is not already in it\n   * No modification if the element is already in the array\n   * Note that it doesn't check whether the original array contains duplicates\n   */\n  $addToSet: createModifierFunction($addToSetPartial),\n  /**\n   * Push an element to the end of an array field\n   * Optional modifier $each instead of value to push several values\n   * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n   * Difference with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n   */\n  $push: createModifierFunction((obj, field, value) => {\n    // Create the array if it doesn't exist\n    if (!Object.prototype.hasOwnProperty.call(obj, field)) obj[field] = []\n\n    if (!Array.isArray(obj[field])) throw new Error('Can\\'t $push an element on non-array values')\n\n    if (\n      value !== null &&\n      typeof value === 'object' &&\n      value.$slice &&\n      value.$each === undefined\n    ) value.$each = []\n\n    if (value !== null && typeof value === 'object' && value.$each) {\n      if (\n        Object.keys(value).length >= 3 ||\n        (Object.keys(value).length === 2 && value.$slice === undefined)\n      ) throw new Error('Can only use $slice in cunjunction with $each when $push to array')\n      if (!Array.isArray(value.$each)) throw new Error('$each requires an array value')\n\n      value.$each.forEach(v => {\n        obj[field].push(v)\n      })\n\n      if (value.$slice === undefined || typeof value.$slice !== 'number') return\n\n      if (value.$slice === 0) obj[field] = []\n      else {\n        let start\n        let end\n        const n = obj[field].length\n        if (value.$slice < 0) {\n          start = Math.max(0, n + value.$slice)\n          end = n\n        } else if (value.$slice > 0) {\n          start = 0\n          end = Math.min(n, value.$slice)\n        }\n        obj[field] = obj[field].slice(start, end)\n      }\n    } else {\n      obj[field].push(value)\n    }\n  })\n\n}\n\n/**\n * Modify a DB object according to an update query\n * @param {document} obj\n * @param {query} updateQuery\n * @return {document}\n * @alias module:model.modify\n */\nconst modify = (obj, updateQuery) => {\n  const keys = Object.keys(updateQuery)\n  const firstChars = keys.map(item => item[0])\n  const dollarFirstChars = firstChars.filter(c => c === '$')\n  let newDoc\n  let modifiers\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) throw new Error('You cannot change a document\\'s _id')\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) throw new Error('You cannot mix modifiers and normal fields')\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery)\n    newDoc._id = obj._id\n  } else {\n    // Apply modifiers\n    modifiers = uniq(keys)\n    newDoc = deepCopy(obj)\n    modifiers.forEach(m => {\n      if (!modifierFunctions[m]) throw new Error(`Unknown modifier ${m}`)\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') throw new Error(`Modifier ${m}'s argument must be an object`)\n\n      const keys = Object.keys(updateQuery[m])\n      keys.forEach(k => {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k])\n      })\n    })\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc)\n\n  if (obj._id !== newDoc._id) throw new Error('You can\\'t change a document\\'s _id')\n  return newDoc\n}\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {object} obj\n * @param {string} field\n * @return {*}\n * @alias module:model.getDotValue\n */\nconst getDotValue = (obj, field) => {\n  const fieldParts = typeof field === 'string' ? field.split('.') : field\n\n  if (!obj) return undefined // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) return obj\n\n  if (fieldParts.length === 1) return obj[fieldParts[0]]\n\n  if (Array.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    const i = parseInt(fieldParts[1], 10)\n    if (typeof i === 'number' && !isNaN(i)) return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n\n    // Return the array of values\n    return obj[fieldParts[0]].map(el => getDotValue(el, fieldParts.slice(1)))\n  } else return getDotValue(obj[fieldParts[0]], fieldParts.slice(1))\n}\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n * @param {*} a\n * @param {*} a\n * @return {boolean}\n * @alias module:model.areThingsEqual\n */\nconst areThingsEqual = (a, b) => {\n  // Strings, booleans, numbers, null\n  if (\n    a === null ||\n    typeof a === 'string' ||\n    typeof a === 'boolean' ||\n    typeof a === 'number' ||\n    b === null ||\n    typeof b === 'string' ||\n    typeof b === 'boolean' ||\n    typeof b === 'number'\n  ) return a === b\n\n  // Dates\n  if (isDate(a) || isDate(b)) return isDate(a) && isDate(b) && a.getTime() === b.getTime()\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if (\n    (!(Array.isArray(a) && Array.isArray(b)) && (Array.isArray(a) || Array.isArray(b))) ||\n    a === undefined || b === undefined\n  ) return false\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  let aKeys\n  let bKeys\n  try {\n    aKeys = Object.keys(a)\n    bKeys = Object.keys(b)\n  } catch (e) {\n    return false\n  }\n\n  if (aKeys.length !== bKeys.length) return false\n  for (const el of aKeys) {\n    if (bKeys.indexOf(el) === -1) return false\n    if (!areThingsEqual(a[el], b[el])) return false\n  }\n  return true\n}\n\n/**\n * Check that two values are comparable\n * @param {*} a\n * @param {*} a\n * @return {boolean}\n * @private\n */\nconst areComparable = (a, b) => {\n  if (\n    typeof a !== 'string' &&\n    typeof a !== 'number' &&\n    !isDate(a) &&\n    typeof b !== 'string' &&\n    typeof b !== 'number' &&\n    !isDate(b)\n  ) return false\n\n  if (typeof a !== typeof b) return false\n\n  return true\n}\n\n/**\n * @callback comparisonOperator\n * Arithmetic and comparison operators\n * @param {*} a Value in the object\n * @param {*} b Value in the query\n * @return {boolean}\n */\n\n/**\n * @enum {comparisonOperator}\n */\nconst comparisonFunctions = {\n  /** Lower than */\n  $lt: (a, b) => areComparable(a, b) && a < b,\n  /** Lower than or equals */\n  $lte: (a, b) => areComparable(a, b) && a <= b,\n  /** Greater than */\n  $gt: (a, b) => areComparable(a, b) && a > b,\n  /** Greater than or equals */\n  $gte: (a, b) => areComparable(a, b) && a >= b,\n  /** Does not equal */\n  $ne: (a, b) => a === undefined || !areThingsEqual(a, b),\n  /** Is in Array */\n  $in: (a, b) => {\n    if (!Array.isArray(b)) throw new Error('$in operator called with a non-array')\n\n    for (const el of b) {\n      if (areThingsEqual(a, el)) return true\n    }\n\n    return false\n  },\n  /** Is not in Array */\n  $nin: (a, b) => {\n    if (!Array.isArray(b)) throw new Error('$nin operator called with a non-array')\n\n    return !comparisonFunctions.$in(a, b)\n  },\n  /** Matches Regexp */\n  $regex: (a, b) => {\n    if (!isRegExp(b)) throw new Error('$regex operator called with non regular expression')\n\n    if (typeof a !== 'string') return false\n    else return b.test(a)\n  },\n  /** Returns true if field exists */\n  $exists: (a, b) => {\n    // This will be true for all values of stat except false, null, undefined and 0\n    // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n    if (b || b === '') b = true\n    else b = false\n\n    if (a === undefined) return !b\n    else return b\n  },\n  /** Specific to Arrays, returns true if a length equals b */\n  $size: (a, b) => {\n    if (!Array.isArray(a)) return false\n    if (b % 1 !== 0) throw new Error('$size operator called without an integer')\n\n    return a.length === b\n  },\n  /** Specific to Arrays, returns true if some elements of a match the query b */\n  $elemMatch: (a, b) => {\n    if (!Array.isArray(a)) return false\n    return a.some(el => match(el, b))\n  }\n}\n\nconst arrayComparisonFunctions = { $size: true, $elemMatch: true }\n\n/**\n * @enum\n */\nconst logicalOperators = {\n  /**\n   * Match any of the subqueries\n   * @param {document} obj\n   * @param {query[]} query\n   * @return {boolean}\n   */\n  $or: (obj, query) => {\n    if (!Array.isArray(query)) throw new Error('$or operator used without an array')\n\n    for (let i = 0; i < query.length; i += 1) {\n      if (match(obj, query[i])) return true\n    }\n\n    return false\n  },\n  /**\n   * Match all of the subqueries\n   * @param {document} obj\n   * @param {query[]} query\n   * @return {boolean}\n   */\n  $and: (obj, query) => {\n    if (!Array.isArray(query)) throw new Error('$and operator used without an array')\n\n    for (let i = 0; i < query.length; i += 1) {\n      if (!match(obj, query[i])) return false\n    }\n\n    return true\n  },\n  /**\n   * Inverted match of the query\n   * @param {document} obj\n   * @param {query} query\n   * @return {boolean}\n   */\n  $not: (obj, query) => !match(obj, query),\n\n  /**\n   * @callback whereCallback\n   * @param {document} obj\n   * @return {boolean}\n   */\n\n  /**\n   * Use a function to match\n   * @param {document} obj\n   * @param {whereCallback} fn\n   * @return {boolean}\n   */\n  $where: (obj, fn) => {\n    if (typeof fn !== 'function') throw new Error('$where operator used without a function')\n\n    const result = fn.call(obj)\n    if (typeof result !== 'boolean') throw new Error('$where function must return boolean')\n\n    return result\n  }\n}\n\n/**\n * Tell if a given document matches a query\n * @param {document} obj Document to check\n * @param {query} query\n * @return {boolean}\n * @alias module:model.match\n */\nconst match = (obj, query) => {\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) return matchQueryPart({ needAKey: obj }, 'needAKey', query)\n\n  // Normal query\n  for (const queryKey in query) {\n    if (Object.prototype.hasOwnProperty.call(query, queryKey)) {\n      const queryValue = query[queryKey]\n      if (queryKey[0] === '$') {\n        if (!logicalOperators[queryKey]) throw new Error(`Unknown logical operator ${queryKey}`)\n        if (!logicalOperators[queryKey](obj, queryValue)) return false\n      } else if (!matchQueryPart(obj, queryKey, queryValue)) return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n * @param {object} obj\n * @param {string} queryKey\n * @param {*} queryValue\n * @param {boolean} [treatObjAsValue=false]\n * @return {boolean}\n * @private\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  const objValue = getDotValue(obj, queryKey)\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (Array.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (Array.isArray(queryValue)) return matchQueryPart(obj, queryKey, queryValue, true)\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !isRegExp(queryValue)) {\n      for (const key in queryValue) {\n        if (Object.prototype.hasOwnProperty.call(queryValue, key) && arrayComparisonFunctions[key]) { return matchQueryPart(obj, queryKey, queryValue, true) }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (const el of objValue) {\n      if (matchQueryPart({ k: el }, 'k', queryValue)) return true // k here could be any string\n    }\n    return false\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !isRegExp(queryValue) && !Array.isArray(queryValue)) {\n    const keys = Object.keys(queryValue)\n    const firstChars = keys.map(item => item[0])\n    const dollarFirstChars = firstChars.filter(c => c === '$')\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) throw new Error('You cannot mix operators and normal fields')\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (const key of keys) {\n        if (!comparisonFunctions[key]) throw new Error(`Unknown comparison function ${key}`)\n\n        if (!comparisonFunctions[key](objValue, queryValue[key])) return false\n      }\n      return true\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (isRegExp(queryValue)) return comparisonFunctions.$regex(objValue, queryValue)\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  return areThingsEqual(objValue, queryValue)\n}\n\n// Interface\nmodule.exports.serialize = serialize\nmodule.exports.deserialize = deserialize\nmodule.exports.deepCopy = deepCopy\nmodule.exports.checkObject = checkObject\nmodule.exports.isPrimitiveType = isPrimitiveType\nmodule.exports.modify = modify\nmodule.exports.getDotValue = getDotValue\nmodule.exports.match = match\nmodule.exports.areThingsEqual = areThingsEqual\nmodule.exports.compareThings = compareThings\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/model.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/persistence.js":
/*!********************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/persistence.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const path = __webpack_require__(/*! path */ \"path\")\nconst { deprecate } = __webpack_require__(/*! util */ \"util\")\nconst byline = __webpack_require__(/*! ./byline */ \"./node_modules/@seald-io/nedb/lib/byline.js\")\nconst customUtils = __webpack_require__(/*! ./customUtils.js */ \"./node_modules/@seald-io/nedb/lib/customUtils.js\")\nconst Index = __webpack_require__(/*! ./indexes.js */ \"./node_modules/@seald-io/nedb/lib/indexes.js\")\nconst model = __webpack_require__(/*! ./model.js */ \"./node_modules/@seald-io/nedb/lib/model.js\")\nconst storage = __webpack_require__(/*! ./storage.js */ \"./node_modules/@seald-io/nedb/lib/storage.js\")\n\nconst DEFAULT_DIR_MODE = 0o755\nconst DEFAULT_FILE_MODE = 0o644\n\n/**\n * Under the hood, NeDB's persistence uses an append-only format, meaning that all\n * updates and deletes actually result in lines added at the end of the datafile,\n * for performance reasons. The database is automatically compacted (i.e. put back\n * in the one-line-per-document format) every time you load each database within\n * your application.\n *\n * Persistence handles the compaction exposed in the Datastore {@link Datastore#compactDatafileAsync},\n * {@link Datastore#setAutocompactionInterval}.\n *\n * Since version 3.0.0, using {@link Datastore.persistence} methods manually is deprecated.\n *\n * Compaction takes a bit of time (not too much: 130ms for 50k\n * records on a typical development machine) and no other operation can happen when\n * it does, so most projects actually don't need to use it.\n *\n * Compaction will also immediately remove any documents whose data line has become\n * corrupted, assuming that the total percentage of all corrupted documents in that\n * database still falls below the specified `corruptAlertThreshold` option's value.\n *\n * Durability works similarly to major databases: compaction forces the OS to\n * physically flush data to disk, while appends to the data file do not (the OS is\n * responsible for flushing the data). That guarantees that a server crash can\n * never cause complete data loss, while preserving performance. The worst that can\n * happen is a crash between two syncs, causing a loss of all data between the two\n * syncs. Usually syncs are 30 seconds appart so that's at most 30 seconds of\n * data. [This post by Antirez on Redis persistence](http://oldblog.antirez.com/post/redis-persistence-demystified.html)\n * explains this in more details, NeDB being very close to Redis AOF persistence\n * with `appendfsync` option set to `no`.\n */\nclass Persistence {\n  /**\n   * Create a new Persistence object for database options.db\n   * @param {Datastore} options.db\n   * @param {Number} [options.corruptAlertThreshold] Optional, threshold after which an alert is thrown if too much data is corrupt\n   * @param {serializationHook} [options.beforeDeserialization] Hook you can use to transform data after it was serialized and before it is written to disk.\n   * @param {serializationHook} [options.afterSerialization] Inverse of `afterSerialization`.\n   * @param {object} [options.modes] Modes to use for FS permissions. Will not work on Windows.\n   * @param {number} [options.modes.fileMode=0o644] Mode to use for files.\n   * @param {number} [options.modes.dirMode=0o755] Mode to use for directories.\n   * @param {boolean} [options.testSerializationHooks=true] Whether to test the serialization hooks or not, might be CPU-intensive\n   */\n  constructor (options) {\n    this.db = options.db\n    this.inMemoryOnly = this.db.inMemoryOnly\n    this.filename = this.db.filename\n    this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1\n    this.modes = options.modes !== undefined ? options.modes : { fileMode: DEFAULT_FILE_MODE, dirMode: DEFAULT_DIR_MODE }\n    if (this.modes.fileMode === undefined) this.modes.fileMode = DEFAULT_FILE_MODE\n    if (this.modes.dirMode === undefined) this.modes.dirMode = DEFAULT_DIR_MODE\n    if (\n      !this.inMemoryOnly &&\n      this.filename &&\n      this.filename.charAt(this.filename.length - 1) === '~'\n    ) throw new Error('The datafile name can\\'t end with a ~, which is reserved for crash safe backup files')\n\n    // After serialization and before deserialization hooks with some basic sanity checks\n    if (\n      options.afterSerialization &&\n      !options.beforeDeserialization\n    ) throw new Error('Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss')\n    if (\n      !options.afterSerialization &&\n      options.beforeDeserialization\n    ) throw new Error('Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss')\n\n    this.afterSerialization = options.afterSerialization || (s => s)\n    this.beforeDeserialization = options.beforeDeserialization || (s => s)\n\n    if (options.testSerializationHooks === undefined || options.testSerializationHooks) {\n      for (let i = 1; i < 30; i += 1) {\n        for (let j = 0; j < 10; j += 1) {\n          const randomString = customUtils.uid(i)\n          if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n            throw new Error('beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss')\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Internal version without using the {@link Datastore#executor} of {@link Datastore#compactDatafileAsync}, use it instead.\n   * @return {Promise<void>}\n   * @private\n   */\n  async persistCachedDatabaseAsync () {\n    const lines = []\n\n    if (this.inMemoryOnly) return\n\n    this.db.getAllData().forEach(doc => {\n      lines.push(this.afterSerialization(model.serialize(doc)))\n    })\n    Object.keys(this.db.indexes).forEach(fieldName => {\n      if (fieldName !== '_id') { // The special _id index is managed by datastore.js, the others need to be persisted\n        lines.push(this.afterSerialization(model.serialize({\n          $$indexCreated: {\n            fieldName: fieldName,\n            unique: this.db.indexes[fieldName].unique,\n            sparse: this.db.indexes[fieldName].sparse\n          }\n        })))\n      }\n    })\n\n    await storage.crashSafeWriteFileLinesAsync(this.filename, lines, this.modes)\n    this.db.emit('compaction.done')\n  }\n\n  /**\n   * @see Datastore#compactDatafile\n   * @deprecated\n   * @param {NoParamCallback} [callback = () => {}]\n   * @see Persistence#compactDatafileAsync\n   */\n  compactDatafile (callback) {\n    deprecate(_callback => this.db.compactDatafile(_callback), '@seald-io/nedb: calling Datastore#persistence#compactDatafile is deprecated, please use Datastore#compactDatafile, it will be removed in the next major version.')(callback)\n  }\n\n  /**\n   * @see Datastore#setAutocompactionInterval\n   * @deprecated\n   */\n  setAutocompactionInterval (interval) {\n    deprecate(_interval => this.db.setAutocompactionInterval(_interval), '@seald-io/nedb: calling Datastore#persistence#setAutocompactionInterval is deprecated, please use Datastore#setAutocompactionInterval, it will be removed in the next major version.')(interval)\n  }\n\n  /**\n   * @see Datastore#stopAutocompaction\n   * @deprecated\n   */\n  stopAutocompaction () {\n    deprecate(() => this.db.stopAutocompaction(), '@seald-io/nedb: calling Datastore#persistence#stopAutocompaction is deprecated, please use Datastore#stopAutocompaction, it will be removed in the next major version.')()\n  }\n\n  /**\n   * Persist new state for the given newDocs (can be insertion, update or removal)\n   * Use an append-only format\n   *\n   * Do not use directly, it should only used by a {@link Datastore} instance.\n   * @param {document[]} newDocs Can be empty if no doc was updated/removed\n   * @return {Promise}\n   * @private\n   */\n  async persistNewStateAsync (newDocs) {\n    let toPersist = ''\n\n    // In-memory only datastore\n    if (this.inMemoryOnly) return\n\n    newDocs.forEach(doc => {\n      toPersist += this.afterSerialization(model.serialize(doc)) + '\\n'\n    })\n\n    if (toPersist.length === 0) return\n\n    await storage.appendFileAsync(this.filename, toPersist, { encoding: 'utf8', mode: this.modes.fileMode })\n  }\n\n  /**\n   * @typedef rawIndex\n   * @property {string} fieldName\n   * @property {boolean} [unique]\n   * @property {boolean} [sparse]\n   */\n\n  /**\n   * From a database's raw data, return the corresponding machine understandable collection.\n   *\n   * Do not use directly, it should only used by a {@link Datastore} instance.\n   * @param {string} rawData database file\n   * @return {{data: document[], indexes: Object.<string, rawIndex>}}\n   * @private\n   */\n  treatRawData (rawData) {\n    const data = rawData.split('\\n')\n    const dataById = {}\n    const indexes = {}\n    let dataLength = data.length\n\n    // Last line of every data file is usually blank so not really corrupt\n    let corruptItems = 0\n\n    for (const datum of data) {\n      if (datum === '') { dataLength--; continue }\n      try {\n        const doc = model.deserialize(this.beforeDeserialization(datum))\n        if (doc._id) {\n          if (doc.$$deleted === true) delete dataById[doc._id]\n          else dataById[doc._id] = doc\n        } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != null) indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated\n        else if (typeof doc.$$indexRemoved === 'string') delete indexes[doc.$$indexRemoved]\n      } catch (e) {\n        corruptItems += 1\n      }\n    }\n\n    // A bit lenient on corruption\n    if (dataLength > 0) {\n      const corruptionRate = corruptItems / dataLength\n      if (corruptionRate > this.corruptAlertThreshold) {\n        const error = new Error(`${Math.floor(100 * corruptionRate)}% of the data file is corrupt, more than given corruptAlertThreshold (${Math.floor(100 * this.corruptAlertThreshold)}%). Cautiously refusing to start NeDB to prevent dataloss.`)\n        error.corruptionRate = corruptionRate\n        error.corruptItems = corruptItems\n        error.dataLength = dataLength\n        throw error\n      }\n    }\n\n    const tdata = Object.values(dataById)\n\n    return { data: tdata, indexes: indexes }\n  }\n\n  /**\n   * From a database's raw data stream, return the corresponding machine understandable collection\n   * Is only used by a {@link Datastore} instance.\n   *\n   * Is only used in the Node.js version, since [React-Native]{@link module:storageReactNative} &\n   * [browser]{@link module:storageBrowser} storage modules don't provide an equivalent of\n   * {@link module:storage.readFileStream}.\n   *\n   * Do not use directly, it should only used by a {@link Datastore} instance.\n   * @param {Readable} rawStream\n   * @return {Promise<{data: document[], indexes: Object.<string, rawIndex>}>}\n   * @async\n   * @private\n   */\n  treatRawStreamAsync (rawStream) {\n    return new Promise((resolve, reject) => {\n      const dataById = {}\n\n      const indexes = {}\n\n      let corruptItems = 0\n\n      const lineStream = byline(rawStream)\n      let dataLength = 0\n\n      lineStream.on('data', (line) => {\n        if (line === '') return\n        try {\n          const doc = model.deserialize(this.beforeDeserialization(line))\n          if (doc._id) {\n            if (doc.$$deleted === true) delete dataById[doc._id]\n            else dataById[doc._id] = doc\n          } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != null) indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated\n          else if (typeof doc.$$indexRemoved === 'string') delete indexes[doc.$$indexRemoved]\n        } catch (e) {\n          corruptItems += 1\n        }\n\n        dataLength++\n      })\n\n      lineStream.on('end', () => {\n        // A bit lenient on corruption\n        if (dataLength > 0) {\n          const corruptionRate = corruptItems / dataLength\n          if (corruptionRate > this.corruptAlertThreshold) {\n            const error = new Error(`${Math.floor(100 * corruptionRate)}% of the data file is corrupt, more than given corruptAlertThreshold (${Math.floor(100 * this.corruptAlertThreshold)}%). Cautiously refusing to start NeDB to prevent dataloss.`)\n            error.corruptionRate = corruptionRate\n            error.corruptItems = corruptItems\n            error.dataLength = dataLength\n            reject(error, null)\n            return\n          }\n        }\n        const data = Object.values(dataById)\n\n        resolve({ data, indexes: indexes })\n      })\n\n      lineStream.on('error', function (err) {\n        reject(err, null)\n      })\n    })\n  }\n\n  /**\n   * Load the database\n   * 1) Create all indexes\n   * 2) Insert all data\n   * 3) Compact the database\n   *\n   * This means pulling data out of the data file or creating it if it doesn't exist\n   * Also, all data is persisted right away, which has the effect of compacting the database file\n   * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n   *\n   * Do not use directly as it does not use the [Executor]{@link Datastore.executor}, use {@link Datastore#loadDatabaseAsync} instead.\n   * @return {Promise<void>}\n   * @private\n   */\n  async loadDatabaseAsync () {\n    this.db._resetIndexes()\n\n    // In-memory only datastore\n    if (this.inMemoryOnly) return\n    await Persistence.ensureDirectoryExistsAsync(path.dirname(this.filename), this.modes.dirMode)\n    await storage.ensureDatafileIntegrityAsync(this.filename, this.modes.fileMode)\n\n    let treatedData\n    if (storage.readFileStream) {\n      // Server side\n      const fileStream = storage.readFileStream(this.filename, { encoding: 'utf8', mode: this.modes.fileMode })\n      treatedData = await this.treatRawStreamAsync(fileStream)\n    } else {\n      // Browser\n      const rawData = await storage.readFileAsync(this.filename, { encoding: 'utf8', mode: this.modes.fileMode })\n      treatedData = this.treatRawData(rawData)\n    }\n    // Recreate all indexes in the datafile\n    Object.keys(treatedData.indexes).forEach(key => {\n      this.db.indexes[key] = new Index(treatedData.indexes[key])\n    })\n\n    // Fill cached database (i.e. all indexes) with data\n    try {\n      this.db._resetIndexes(treatedData.data)\n    } catch (e) {\n      this.db._resetIndexes() // Rollback any index which didn't fail\n      throw e\n    }\n\n    await this.db.persistence.persistCachedDatabaseAsync()\n    this.db.executor.processBuffer()\n  }\n\n  /**\n   * See {@link Datastore#dropDatabaseAsync}. This function uses {@link Datastore#executor} internally. Decorating this\n   * function with an {@link Executor#pushAsync} will result in a deadlock.\n   * @return {Promise<void>}\n   * @private\n   * @see Datastore#dropDatabaseAsync\n   */\n  async dropDatabaseAsync () {\n    this.db.stopAutocompaction() // stop autocompaction\n    this.db.executor.ready = false // prevent queuing new tasks\n    this.db.executor.resetBuffer() // remove pending buffered tasks\n    await this.db.executor.queue.guardian // wait for the ongoing tasks to end\n    // remove indexes (which means remove data from memory)\n    this.db.indexes = {}\n    // add back _id index, otherwise it will fail\n    this.db.indexes._id = new Index({ fieldName: '_id', unique: true })\n    // reset TTL on indexes\n    this.db.ttlIndexes = {}\n\n    // remove datastore file\n    if (!this.db.inMemoryOnly) {\n      await this.db.executor.pushAsync(async () => {\n        if (await storage.existsAsync(this.filename)) await storage.unlinkAsync(this.filename)\n      }, true)\n    }\n  }\n\n  /**\n   * Check if a directory stat and create it on the fly if it is not the case.\n   * @param {string} dir\n   * @param {number} [mode=0o777]\n   * @return {Promise<void>}\n   * @private\n   */\n  static async ensureDirectoryExistsAsync (dir, mode = DEFAULT_DIR_MODE) {\n    await storage.mkdirAsync(dir, { recursive: true, mode })\n  }\n}\n\n// Interface\nmodule.exports = Persistence\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL3BlcnNpc3RlbmNlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL0BzZWFsZC1pby9uZWRiL2xpYi9wZXJzaXN0ZW5jZS5qcz85NmQ4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IHsgZGVwcmVjYXRlIH0gPSByZXF1aXJlKCd1dGlsJylcbmNvbnN0IGJ5bGluZSA9IHJlcXVpcmUoJy4vYnlsaW5lJylcbmNvbnN0IGN1c3RvbVV0aWxzID0gcmVxdWlyZSgnLi9jdXN0b21VdGlscy5qcycpXG5jb25zdCBJbmRleCA9IHJlcXVpcmUoJy4vaW5kZXhlcy5qcycpXG5jb25zdCBtb2RlbCA9IHJlcXVpcmUoJy4vbW9kZWwuanMnKVxuY29uc3Qgc3RvcmFnZSA9IHJlcXVpcmUoJy4vc3RvcmFnZS5qcycpXG5cbmNvbnN0IERFRkFVTFRfRElSX01PREUgPSAwbzc1NVxuY29uc3QgREVGQVVMVF9GSUxFX01PREUgPSAwbzY0NFxuXG4vKipcbiAqIFVuZGVyIHRoZSBob29kLCBOZURCJ3MgcGVyc2lzdGVuY2UgdXNlcyBhbiBhcHBlbmQtb25seSBmb3JtYXQsIG1lYW5pbmcgdGhhdCBhbGxcbiAqIHVwZGF0ZXMgYW5kIGRlbGV0ZXMgYWN0dWFsbHkgcmVzdWx0IGluIGxpbmVzIGFkZGVkIGF0IHRoZSBlbmQgb2YgdGhlIGRhdGFmaWxlLFxuICogZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMuIFRoZSBkYXRhYmFzZSBpcyBhdXRvbWF0aWNhbGx5IGNvbXBhY3RlZCAoaS5lLiBwdXQgYmFja1xuICogaW4gdGhlIG9uZS1saW5lLXBlci1kb2N1bWVudCBmb3JtYXQpIGV2ZXJ5IHRpbWUgeW91IGxvYWQgZWFjaCBkYXRhYmFzZSB3aXRoaW5cbiAqIHlvdXIgYXBwbGljYXRpb24uXG4gKlxuICogUGVyc2lzdGVuY2UgaGFuZGxlcyB0aGUgY29tcGFjdGlvbiBleHBvc2VkIGluIHRoZSBEYXRhc3RvcmUge0BsaW5rIERhdGFzdG9yZSNjb21wYWN0RGF0YWZpbGVBc3luY30sXG4gKiB7QGxpbmsgRGF0YXN0b3JlI3NldEF1dG9jb21wYWN0aW9uSW50ZXJ2YWx9LlxuICpcbiAqIFNpbmNlIHZlcnNpb24gMy4wLjAsIHVzaW5nIHtAbGluayBEYXRhc3RvcmUucGVyc2lzdGVuY2V9IG1ldGhvZHMgbWFudWFsbHkgaXMgZGVwcmVjYXRlZC5cbiAqXG4gKiBDb21wYWN0aW9uIHRha2VzIGEgYml0IG9mIHRpbWUgKG5vdCB0b28gbXVjaDogMTMwbXMgZm9yIDUwa1xuICogcmVjb3JkcyBvbiBhIHR5cGljYWwgZGV2ZWxvcG1lbnQgbWFjaGluZSkgYW5kIG5vIG90aGVyIG9wZXJhdGlvbiBjYW4gaGFwcGVuIHdoZW5cbiAqIGl0IGRvZXMsIHNvIG1vc3QgcHJvamVjdHMgYWN0dWFsbHkgZG9uJ3QgbmVlZCB0byB1c2UgaXQuXG4gKlxuICogQ29tcGFjdGlvbiB3aWxsIGFsc28gaW1tZWRpYXRlbHkgcmVtb3ZlIGFueSBkb2N1bWVudHMgd2hvc2UgZGF0YSBsaW5lIGhhcyBiZWNvbWVcbiAqIGNvcnJ1cHRlZCwgYXNzdW1pbmcgdGhhdCB0aGUgdG90YWwgcGVyY2VudGFnZSBvZiBhbGwgY29ycnVwdGVkIGRvY3VtZW50cyBpbiB0aGF0XG4gKiBkYXRhYmFzZSBzdGlsbCBmYWxscyBiZWxvdyB0aGUgc3BlY2lmaWVkIGBjb3JydXB0QWxlcnRUaHJlc2hvbGRgIG9wdGlvbidzIHZhbHVlLlxuICpcbiAqIER1cmFiaWxpdHkgd29ya3Mgc2ltaWxhcmx5IHRvIG1ham9yIGRhdGFiYXNlczogY29tcGFjdGlvbiBmb3JjZXMgdGhlIE9TIHRvXG4gKiBwaHlzaWNhbGx5IGZsdXNoIGRhdGEgdG8gZGlzaywgd2hpbGUgYXBwZW5kcyB0byB0aGUgZGF0YSBmaWxlIGRvIG5vdCAodGhlIE9TIGlzXG4gKiByZXNwb25zaWJsZSBmb3IgZmx1c2hpbmcgdGhlIGRhdGEpLiBUaGF0IGd1YXJhbnRlZXMgdGhhdCBhIHNlcnZlciBjcmFzaCBjYW5cbiAqIG5ldmVyIGNhdXNlIGNvbXBsZXRlIGRhdGEgbG9zcywgd2hpbGUgcHJlc2VydmluZyBwZXJmb3JtYW5jZS4gVGhlIHdvcnN0IHRoYXQgY2FuXG4gKiBoYXBwZW4gaXMgYSBjcmFzaCBiZXR3ZWVuIHR3byBzeW5jcywgY2F1c2luZyBhIGxvc3Mgb2YgYWxsIGRhdGEgYmV0d2VlbiB0aGUgdHdvXG4gKiBzeW5jcy4gVXN1YWxseSBzeW5jcyBhcmUgMzAgc2Vjb25kcyBhcHBhcnQgc28gdGhhdCdzIGF0IG1vc3QgMzAgc2Vjb25kcyBvZlxuICogZGF0YS4gW1RoaXMgcG9zdCBieSBBbnRpcmV6IG9uIFJlZGlzIHBlcnNpc3RlbmNlXShodHRwOi8vb2xkYmxvZy5hbnRpcmV6LmNvbS9wb3N0L3JlZGlzLXBlcnNpc3RlbmNlLWRlbXlzdGlmaWVkLmh0bWwpXG4gKiBleHBsYWlucyB0aGlzIGluIG1vcmUgZGV0YWlscywgTmVEQiBiZWluZyB2ZXJ5IGNsb3NlIHRvIFJlZGlzIEFPRiBwZXJzaXN0ZW5jZVxuICogd2l0aCBgYXBwZW5kZnN5bmNgIG9wdGlvbiBzZXQgdG8gYG5vYC5cbiAqL1xuY2xhc3MgUGVyc2lzdGVuY2Uge1xuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IFBlcnNpc3RlbmNlIG9iamVjdCBmb3IgZGF0YWJhc2Ugb3B0aW9ucy5kYlxuICAgKiBAcGFyYW0ge0RhdGFzdG9yZX0gb3B0aW9ucy5kYlxuICAgKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuY29ycnVwdEFsZXJ0VGhyZXNob2xkXSBPcHRpb25hbCwgdGhyZXNob2xkIGFmdGVyIHdoaWNoIGFuIGFsZXJ0IGlzIHRocm93biBpZiB0b28gbXVjaCBkYXRhIGlzIGNvcnJ1cHRcbiAgICogQHBhcmFtIHtzZXJpYWxpemF0aW9uSG9va30gW29wdGlvbnMuYmVmb3JlRGVzZXJpYWxpemF0aW9uXSBIb29rIHlvdSBjYW4gdXNlIHRvIHRyYW5zZm9ybSBkYXRhIGFmdGVyIGl0IHdhcyBzZXJpYWxpemVkIGFuZCBiZWZvcmUgaXQgaXMgd3JpdHRlbiB0byBkaXNrLlxuICAgKiBAcGFyYW0ge3NlcmlhbGl6YXRpb25Ib29rfSBbb3B0aW9ucy5hZnRlclNlcmlhbGl6YXRpb25dIEludmVyc2Ugb2YgYGFmdGVyU2VyaWFsaXphdGlvbmAuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucy5tb2Rlc10gTW9kZXMgdG8gdXNlIGZvciBGUyBwZXJtaXNzaW9ucy4gV2lsbCBub3Qgd29yayBvbiBXaW5kb3dzLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubW9kZXMuZmlsZU1vZGU9MG82NDRdIE1vZGUgdG8gdXNlIGZvciBmaWxlcy5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1vZGVzLmRpck1vZGU9MG83NTVdIE1vZGUgdG8gdXNlIGZvciBkaXJlY3Rvcmllcy5cbiAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy50ZXN0U2VyaWFsaXphdGlvbkhvb2tzPXRydWVdIFdoZXRoZXIgdG8gdGVzdCB0aGUgc2VyaWFsaXphdGlvbiBob29rcyBvciBub3QsIG1pZ2h0IGJlIENQVS1pbnRlbnNpdmVcbiAgICovXG4gIGNvbnN0cnVjdG9yIChvcHRpb25zKSB7XG4gICAgdGhpcy5kYiA9IG9wdGlvbnMuZGJcbiAgICB0aGlzLmluTWVtb3J5T25seSA9IHRoaXMuZGIuaW5NZW1vcnlPbmx5XG4gICAgdGhpcy5maWxlbmFtZSA9IHRoaXMuZGIuZmlsZW5hbWVcbiAgICB0aGlzLmNvcnJ1cHRBbGVydFRocmVzaG9sZCA9IG9wdGlvbnMuY29ycnVwdEFsZXJ0VGhyZXNob2xkICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNvcnJ1cHRBbGVydFRocmVzaG9sZCA6IDAuMVxuICAgIHRoaXMubW9kZXMgPSBvcHRpb25zLm1vZGVzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm1vZGVzIDogeyBmaWxlTW9kZTogREVGQVVMVF9GSUxFX01PREUsIGRpck1vZGU6IERFRkFVTFRfRElSX01PREUgfVxuICAgIGlmICh0aGlzLm1vZGVzLmZpbGVNb2RlID09PSB1bmRlZmluZWQpIHRoaXMubW9kZXMuZmlsZU1vZGUgPSBERUZBVUxUX0ZJTEVfTU9ERVxuICAgIGlmICh0aGlzLm1vZGVzLmRpck1vZGUgPT09IHVuZGVmaW5lZCkgdGhpcy5tb2Rlcy5kaXJNb2RlID0gREVGQVVMVF9ESVJfTU9ERVxuICAgIGlmIChcbiAgICAgICF0aGlzLmluTWVtb3J5T25seSAmJlxuICAgICAgdGhpcy5maWxlbmFtZSAmJlxuICAgICAgdGhpcy5maWxlbmFtZS5jaGFyQXQodGhpcy5maWxlbmFtZS5sZW5ndGggLSAxKSA9PT0gJ34nXG4gICAgKSB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBkYXRhZmlsZSBuYW1lIGNhblxcJ3QgZW5kIHdpdGggYSB+LCB3aGljaCBpcyByZXNlcnZlZCBmb3IgY3Jhc2ggc2FmZSBiYWNrdXAgZmlsZXMnKVxuXG4gICAgLy8gQWZ0ZXIgc2VyaWFsaXphdGlvbiBhbmQgYmVmb3JlIGRlc2VyaWFsaXphdGlvbiBob29rcyB3aXRoIHNvbWUgYmFzaWMgc2FuaXR5IGNoZWNrc1xuICAgIGlmIChcbiAgICAgIG9wdGlvbnMuYWZ0ZXJTZXJpYWxpemF0aW9uICYmXG4gICAgICAhb3B0aW9ucy5iZWZvcmVEZXNlcmlhbGl6YXRpb25cbiAgICApIHRocm93IG5ldyBFcnJvcignU2VyaWFsaXphdGlvbiBob29rIGRlZmluZWQgYnV0IGRlc2VyaWFsaXphdGlvbiBob29rIHVuZGVmaW5lZCwgY2F1dGlvdXNseSByZWZ1c2luZyB0byBzdGFydCBOZURCIHRvIHByZXZlbnQgZGF0YWxvc3MnKVxuICAgIGlmIChcbiAgICAgICFvcHRpb25zLmFmdGVyU2VyaWFsaXphdGlvbiAmJlxuICAgICAgb3B0aW9ucy5iZWZvcmVEZXNlcmlhbGl6YXRpb25cbiAgICApIHRocm93IG5ldyBFcnJvcignU2VyaWFsaXphdGlvbiBob29rIHVuZGVmaW5lZCBidXQgZGVzZXJpYWxpemF0aW9uIGhvb2sgZGVmaW5lZCwgY2F1dGlvdXNseSByZWZ1c2luZyB0byBzdGFydCBOZURCIHRvIHByZXZlbnQgZGF0YWxvc3MnKVxuXG4gICAgdGhpcy5hZnRlclNlcmlhbGl6YXRpb24gPSBvcHRpb25zLmFmdGVyU2VyaWFsaXphdGlvbiB8fCAocyA9PiBzKVxuICAgIHRoaXMuYmVmb3JlRGVzZXJpYWxpemF0aW9uID0gb3B0aW9ucy5iZWZvcmVEZXNlcmlhbGl6YXRpb24gfHwgKHMgPT4gcylcblxuICAgIGlmIChvcHRpb25zLnRlc3RTZXJpYWxpemF0aW9uSG9va3MgPT09IHVuZGVmaW5lZCB8fCBvcHRpb25zLnRlc3RTZXJpYWxpemF0aW9uSG9va3MpIHtcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgMzA7IGkgKz0gMSkge1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDEwOyBqICs9IDEpIHtcbiAgICAgICAgICBjb25zdCByYW5kb21TdHJpbmcgPSBjdXN0b21VdGlscy51aWQoaSlcbiAgICAgICAgICBpZiAodGhpcy5iZWZvcmVEZXNlcmlhbGl6YXRpb24odGhpcy5hZnRlclNlcmlhbGl6YXRpb24ocmFuZG9tU3RyaW5nKSkgIT09IHJhbmRvbVN0cmluZykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdiZWZvcmVEZXNlcmlhbGl6YXRpb24gaXMgbm90IHRoZSByZXZlcnNlIG9mIGFmdGVyU2VyaWFsaXphdGlvbiwgY2F1dGlvdXNseSByZWZ1c2luZyB0byBzdGFydCBOZURCIHRvIHByZXZlbnQgZGF0YWxvc3MnKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJbnRlcm5hbCB2ZXJzaW9uIHdpdGhvdXQgdXNpbmcgdGhlIHtAbGluayBEYXRhc3RvcmUjZXhlY3V0b3J9IG9mIHtAbGluayBEYXRhc3RvcmUjY29tcGFjdERhdGFmaWxlQXN5bmN9LCB1c2UgaXQgaW5zdGVhZC5cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGFzeW5jIHBlcnNpc3RDYWNoZWREYXRhYmFzZUFzeW5jICgpIHtcbiAgICBjb25zdCBsaW5lcyA9IFtdXG5cbiAgICBpZiAodGhpcy5pbk1lbW9yeU9ubHkpIHJldHVyblxuXG4gICAgdGhpcy5kYi5nZXRBbGxEYXRhKCkuZm9yRWFjaChkb2MgPT4ge1xuICAgICAgbGluZXMucHVzaCh0aGlzLmFmdGVyU2VyaWFsaXphdGlvbihtb2RlbC5zZXJpYWxpemUoZG9jKSkpXG4gICAgfSlcbiAgICBPYmplY3Qua2V5cyh0aGlzLmRiLmluZGV4ZXMpLmZvckVhY2goZmllbGROYW1lID0+IHtcbiAgICAgIGlmIChmaWVsZE5hbWUgIT09ICdfaWQnKSB7IC8vIFRoZSBzcGVjaWFsIF9pZCBpbmRleCBpcyBtYW5hZ2VkIGJ5IGRhdGFzdG9yZS5qcywgdGhlIG90aGVycyBuZWVkIHRvIGJlIHBlcnNpc3RlZFxuICAgICAgICBsaW5lcy5wdXNoKHRoaXMuYWZ0ZXJTZXJpYWxpemF0aW9uKG1vZGVsLnNlcmlhbGl6ZSh7XG4gICAgICAgICAgJCRpbmRleENyZWF0ZWQ6IHtcbiAgICAgICAgICAgIGZpZWxkTmFtZTogZmllbGROYW1lLFxuICAgICAgICAgICAgdW5pcXVlOiB0aGlzLmRiLmluZGV4ZXNbZmllbGROYW1lXS51bmlxdWUsXG4gICAgICAgICAgICBzcGFyc2U6IHRoaXMuZGIuaW5kZXhlc1tmaWVsZE5hbWVdLnNwYXJzZVxuICAgICAgICAgIH1cbiAgICAgICAgfSkpKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBhd2FpdCBzdG9yYWdlLmNyYXNoU2FmZVdyaXRlRmlsZUxpbmVzQXN5bmModGhpcy5maWxlbmFtZSwgbGluZXMsIHRoaXMubW9kZXMpXG4gICAgdGhpcy5kYi5lbWl0KCdjb21wYWN0aW9uLmRvbmUnKVxuICB9XG5cbiAgLyoqXG4gICAqIEBzZWUgRGF0YXN0b3JlI2NvbXBhY3REYXRhZmlsZVxuICAgKiBAZGVwcmVjYXRlZFxuICAgKiBAcGFyYW0ge05vUGFyYW1DYWxsYmFja30gW2NhbGxiYWNrID0gKCkgPT4ge31dXG4gICAqIEBzZWUgUGVyc2lzdGVuY2UjY29tcGFjdERhdGFmaWxlQXN5bmNcbiAgICovXG4gIGNvbXBhY3REYXRhZmlsZSAoY2FsbGJhY2spIHtcbiAgICBkZXByZWNhdGUoX2NhbGxiYWNrID0+IHRoaXMuZGIuY29tcGFjdERhdGFmaWxlKF9jYWxsYmFjayksICdAc2VhbGQtaW8vbmVkYjogY2FsbGluZyBEYXRhc3RvcmUjcGVyc2lzdGVuY2UjY29tcGFjdERhdGFmaWxlIGlzIGRlcHJlY2F0ZWQsIHBsZWFzZSB1c2UgRGF0YXN0b3JlI2NvbXBhY3REYXRhZmlsZSwgaXQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24uJykoY2FsbGJhY2spXG4gIH1cblxuICAvKipcbiAgICogQHNlZSBEYXRhc3RvcmUjc2V0QXV0b2NvbXBhY3Rpb25JbnRlcnZhbFxuICAgKiBAZGVwcmVjYXRlZFxuICAgKi9cbiAgc2V0QXV0b2NvbXBhY3Rpb25JbnRlcnZhbCAoaW50ZXJ2YWwpIHtcbiAgICBkZXByZWNhdGUoX2ludGVydmFsID0+IHRoaXMuZGIuc2V0QXV0b2NvbXBhY3Rpb25JbnRlcnZhbChfaW50ZXJ2YWwpLCAnQHNlYWxkLWlvL25lZGI6IGNhbGxpbmcgRGF0YXN0b3JlI3BlcnNpc3RlbmNlI3NldEF1dG9jb21wYWN0aW9uSW50ZXJ2YWwgaXMgZGVwcmVjYXRlZCwgcGxlYXNlIHVzZSBEYXRhc3RvcmUjc2V0QXV0b2NvbXBhY3Rpb25JbnRlcnZhbCwgaXQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24uJykoaW50ZXJ2YWwpXG4gIH1cblxuICAvKipcbiAgICogQHNlZSBEYXRhc3RvcmUjc3RvcEF1dG9jb21wYWN0aW9uXG4gICAqIEBkZXByZWNhdGVkXG4gICAqL1xuICBzdG9wQXV0b2NvbXBhY3Rpb24gKCkge1xuICAgIGRlcHJlY2F0ZSgoKSA9PiB0aGlzLmRiLnN0b3BBdXRvY29tcGFjdGlvbigpLCAnQHNlYWxkLWlvL25lZGI6IGNhbGxpbmcgRGF0YXN0b3JlI3BlcnNpc3RlbmNlI3N0b3BBdXRvY29tcGFjdGlvbiBpcyBkZXByZWNhdGVkLCBwbGVhc2UgdXNlIERhdGFzdG9yZSNzdG9wQXV0b2NvbXBhY3Rpb24sIGl0IHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLicpKClcbiAgfVxuXG4gIC8qKlxuICAgKiBQZXJzaXN0IG5ldyBzdGF0ZSBmb3IgdGhlIGdpdmVuIG5ld0RvY3MgKGNhbiBiZSBpbnNlcnRpb24sIHVwZGF0ZSBvciByZW1vdmFsKVxuICAgKiBVc2UgYW4gYXBwZW5kLW9ubHkgZm9ybWF0XG4gICAqXG4gICAqIERvIG5vdCB1c2UgZGlyZWN0bHksIGl0IHNob3VsZCBvbmx5IHVzZWQgYnkgYSB7QGxpbmsgRGF0YXN0b3JlfSBpbnN0YW5jZS5cbiAgICogQHBhcmFtIHtkb2N1bWVudFtdfSBuZXdEb2NzIENhbiBiZSBlbXB0eSBpZiBubyBkb2Mgd2FzIHVwZGF0ZWQvcmVtb3ZlZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgYXN5bmMgcGVyc2lzdE5ld1N0YXRlQXN5bmMgKG5ld0RvY3MpIHtcbiAgICBsZXQgdG9QZXJzaXN0ID0gJydcblxuICAgIC8vIEluLW1lbW9yeSBvbmx5IGRhdGFzdG9yZVxuICAgIGlmICh0aGlzLmluTWVtb3J5T25seSkgcmV0dXJuXG5cbiAgICBuZXdEb2NzLmZvckVhY2goZG9jID0+IHtcbiAgICAgIHRvUGVyc2lzdCArPSB0aGlzLmFmdGVyU2VyaWFsaXphdGlvbihtb2RlbC5zZXJpYWxpemUoZG9jKSkgKyAnXFxuJ1xuICAgIH0pXG5cbiAgICBpZiAodG9QZXJzaXN0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuXG5cbiAgICBhd2FpdCBzdG9yYWdlLmFwcGVuZEZpbGVBc3luYyh0aGlzLmZpbGVuYW1lLCB0b1BlcnNpc3QsIHsgZW5jb2Rpbmc6ICd1dGY4JywgbW9kZTogdGhpcy5tb2Rlcy5maWxlTW9kZSB9KVxuICB9XG5cbiAgLyoqXG4gICAqIEB0eXBlZGVmIHJhd0luZGV4XG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBmaWVsZE5hbWVcbiAgICogQHByb3BlcnR5IHtib29sZWFufSBbdW5pcXVlXVxuICAgKiBAcHJvcGVydHkge2Jvb2xlYW59IFtzcGFyc2VdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBGcm9tIGEgZGF0YWJhc2UncyByYXcgZGF0YSwgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIG1hY2hpbmUgdW5kZXJzdGFuZGFibGUgY29sbGVjdGlvbi5cbiAgICpcbiAgICogRG8gbm90IHVzZSBkaXJlY3RseSwgaXQgc2hvdWxkIG9ubHkgdXNlZCBieSBhIHtAbGluayBEYXRhc3RvcmV9IGluc3RhbmNlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmF3RGF0YSBkYXRhYmFzZSBmaWxlXG4gICAqIEByZXR1cm4ge3tkYXRhOiBkb2N1bWVudFtdLCBpbmRleGVzOiBPYmplY3QuPHN0cmluZywgcmF3SW5kZXg+fX1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRyZWF0UmF3RGF0YSAocmF3RGF0YSkge1xuICAgIGNvbnN0IGRhdGEgPSByYXdEYXRhLnNwbGl0KCdcXG4nKVxuICAgIGNvbnN0IGRhdGFCeUlkID0ge31cbiAgICBjb25zdCBpbmRleGVzID0ge31cbiAgICBsZXQgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoXG5cbiAgICAvLyBMYXN0IGxpbmUgb2YgZXZlcnkgZGF0YSBmaWxlIGlzIHVzdWFsbHkgYmxhbmsgc28gbm90IHJlYWxseSBjb3JydXB0XG4gICAgbGV0IGNvcnJ1cHRJdGVtcyA9IDBcblxuICAgIGZvciAoY29uc3QgZGF0dW0gb2YgZGF0YSkge1xuICAgICAgaWYgKGRhdHVtID09PSAnJykgeyBkYXRhTGVuZ3RoLS07IGNvbnRpbnVlIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRvYyA9IG1vZGVsLmRlc2VyaWFsaXplKHRoaXMuYmVmb3JlRGVzZXJpYWxpemF0aW9uKGRhdHVtKSlcbiAgICAgICAgaWYgKGRvYy5faWQpIHtcbiAgICAgICAgICBpZiAoZG9jLiQkZGVsZXRlZCA9PT0gdHJ1ZSkgZGVsZXRlIGRhdGFCeUlkW2RvYy5faWRdXG4gICAgICAgICAgZWxzZSBkYXRhQnlJZFtkb2MuX2lkXSA9IGRvY1xuICAgICAgICB9IGVsc2UgaWYgKGRvYy4kJGluZGV4Q3JlYXRlZCAmJiBkb2MuJCRpbmRleENyZWF0ZWQuZmllbGROYW1lICE9IG51bGwpIGluZGV4ZXNbZG9jLiQkaW5kZXhDcmVhdGVkLmZpZWxkTmFtZV0gPSBkb2MuJCRpbmRleENyZWF0ZWRcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRvYy4kJGluZGV4UmVtb3ZlZCA9PT0gJ3N0cmluZycpIGRlbGV0ZSBpbmRleGVzW2RvYy4kJGluZGV4UmVtb3ZlZF1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29ycnVwdEl0ZW1zICs9IDFcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBIGJpdCBsZW5pZW50IG9uIGNvcnJ1cHRpb25cbiAgICBpZiAoZGF0YUxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IGNvcnJ1cHRpb25SYXRlID0gY29ycnVwdEl0ZW1zIC8gZGF0YUxlbmd0aFxuICAgICAgaWYgKGNvcnJ1cHRpb25SYXRlID4gdGhpcy5jb3JydXB0QWxlcnRUaHJlc2hvbGQpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoYCR7TWF0aC5mbG9vcigxMDAgKiBjb3JydXB0aW9uUmF0ZSl9JSBvZiB0aGUgZGF0YSBmaWxlIGlzIGNvcnJ1cHQsIG1vcmUgdGhhbiBnaXZlbiBjb3JydXB0QWxlcnRUaHJlc2hvbGQgKCR7TWF0aC5mbG9vcigxMDAgKiB0aGlzLmNvcnJ1cHRBbGVydFRocmVzaG9sZCl9JSkuIENhdXRpb3VzbHkgcmVmdXNpbmcgdG8gc3RhcnQgTmVEQiB0byBwcmV2ZW50IGRhdGFsb3NzLmApXG4gICAgICAgIGVycm9yLmNvcnJ1cHRpb25SYXRlID0gY29ycnVwdGlvblJhdGVcbiAgICAgICAgZXJyb3IuY29ycnVwdEl0ZW1zID0gY29ycnVwdEl0ZW1zXG4gICAgICAgIGVycm9yLmRhdGFMZW5ndGggPSBkYXRhTGVuZ3RoXG4gICAgICAgIHRocm93IGVycm9yXG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgdGRhdGEgPSBPYmplY3QudmFsdWVzKGRhdGFCeUlkKVxuXG4gICAgcmV0dXJuIHsgZGF0YTogdGRhdGEsIGluZGV4ZXM6IGluZGV4ZXMgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZyb20gYSBkYXRhYmFzZSdzIHJhdyBkYXRhIHN0cmVhbSwgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIG1hY2hpbmUgdW5kZXJzdGFuZGFibGUgY29sbGVjdGlvblxuICAgKiBJcyBvbmx5IHVzZWQgYnkgYSB7QGxpbmsgRGF0YXN0b3JlfSBpbnN0YW5jZS5cbiAgICpcbiAgICogSXMgb25seSB1c2VkIGluIHRoZSBOb2RlLmpzIHZlcnNpb24sIHNpbmNlIFtSZWFjdC1OYXRpdmVde0BsaW5rIG1vZHVsZTpzdG9yYWdlUmVhY3ROYXRpdmV9ICZcbiAgICogW2Jyb3dzZXJde0BsaW5rIG1vZHVsZTpzdG9yYWdlQnJvd3Nlcn0gc3RvcmFnZSBtb2R1bGVzIGRvbid0IHByb3ZpZGUgYW4gZXF1aXZhbGVudCBvZlxuICAgKiB7QGxpbmsgbW9kdWxlOnN0b3JhZ2UucmVhZEZpbGVTdHJlYW19LlxuICAgKlxuICAgKiBEbyBub3QgdXNlIGRpcmVjdGx5LCBpdCBzaG91bGQgb25seSB1c2VkIGJ5IGEge0BsaW5rIERhdGFzdG9yZX0gaW5zdGFuY2UuXG4gICAqIEBwYXJhbSB7UmVhZGFibGV9IHJhd1N0cmVhbVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHtkYXRhOiBkb2N1bWVudFtdLCBpbmRleGVzOiBPYmplY3QuPHN0cmluZywgcmF3SW5kZXg+fT59XG4gICAqIEBhc3luY1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdHJlYXRSYXdTdHJlYW1Bc3luYyAocmF3U3RyZWFtKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGRhdGFCeUlkID0ge31cblxuICAgICAgY29uc3QgaW5kZXhlcyA9IHt9XG5cbiAgICAgIGxldCBjb3JydXB0SXRlbXMgPSAwXG5cbiAgICAgIGNvbnN0IGxpbmVTdHJlYW0gPSBieWxpbmUocmF3U3RyZWFtKVxuICAgICAgbGV0IGRhdGFMZW5ndGggPSAwXG5cbiAgICAgIGxpbmVTdHJlYW0ub24oJ2RhdGEnLCAobGluZSkgPT4ge1xuICAgICAgICBpZiAobGluZSA9PT0gJycpIHJldHVyblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGRvYyA9IG1vZGVsLmRlc2VyaWFsaXplKHRoaXMuYmVmb3JlRGVzZXJpYWxpemF0aW9uKGxpbmUpKVxuICAgICAgICAgIGlmIChkb2MuX2lkKSB7XG4gICAgICAgICAgICBpZiAoZG9jLiQkZGVsZXRlZCA9PT0gdHJ1ZSkgZGVsZXRlIGRhdGFCeUlkW2RvYy5faWRdXG4gICAgICAgICAgICBlbHNlIGRhdGFCeUlkW2RvYy5faWRdID0gZG9jXG4gICAgICAgICAgfSBlbHNlIGlmIChkb2MuJCRpbmRleENyZWF0ZWQgJiYgZG9jLiQkaW5kZXhDcmVhdGVkLmZpZWxkTmFtZSAhPSBudWxsKSBpbmRleGVzW2RvYy4kJGluZGV4Q3JlYXRlZC5maWVsZE5hbWVdID0gZG9jLiQkaW5kZXhDcmVhdGVkXG4gICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRvYy4kJGluZGV4UmVtb3ZlZCA9PT0gJ3N0cmluZycpIGRlbGV0ZSBpbmRleGVzW2RvYy4kJGluZGV4UmVtb3ZlZF1cbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGNvcnJ1cHRJdGVtcyArPSAxXG4gICAgICAgIH1cblxuICAgICAgICBkYXRhTGVuZ3RoKytcbiAgICAgIH0pXG5cbiAgICAgIGxpbmVTdHJlYW0ub24oJ2VuZCcsICgpID0+IHtcbiAgICAgICAgLy8gQSBiaXQgbGVuaWVudCBvbiBjb3JydXB0aW9uXG4gICAgICAgIGlmIChkYXRhTGVuZ3RoID4gMCkge1xuICAgICAgICAgIGNvbnN0IGNvcnJ1cHRpb25SYXRlID0gY29ycnVwdEl0ZW1zIC8gZGF0YUxlbmd0aFxuICAgICAgICAgIGlmIChjb3JydXB0aW9uUmF0ZSA+IHRoaXMuY29ycnVwdEFsZXJ0VGhyZXNob2xkKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihgJHtNYXRoLmZsb29yKDEwMCAqIGNvcnJ1cHRpb25SYXRlKX0lIG9mIHRoZSBkYXRhIGZpbGUgaXMgY29ycnVwdCwgbW9yZSB0aGFuIGdpdmVuIGNvcnJ1cHRBbGVydFRocmVzaG9sZCAoJHtNYXRoLmZsb29yKDEwMCAqIHRoaXMuY29ycnVwdEFsZXJ0VGhyZXNob2xkKX0lKS4gQ2F1dGlvdXNseSByZWZ1c2luZyB0byBzdGFydCBOZURCIHRvIHByZXZlbnQgZGF0YWxvc3MuYClcbiAgICAgICAgICAgIGVycm9yLmNvcnJ1cHRpb25SYXRlID0gY29ycnVwdGlvblJhdGVcbiAgICAgICAgICAgIGVycm9yLmNvcnJ1cHRJdGVtcyA9IGNvcnJ1cHRJdGVtc1xuICAgICAgICAgICAgZXJyb3IuZGF0YUxlbmd0aCA9IGRhdGFMZW5ndGhcbiAgICAgICAgICAgIHJlamVjdChlcnJvciwgbnVsbClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXRhID0gT2JqZWN0LnZhbHVlcyhkYXRhQnlJZClcblxuICAgICAgICByZXNvbHZlKHsgZGF0YSwgaW5kZXhlczogaW5kZXhlcyB9KVxuICAgICAgfSlcblxuICAgICAgbGluZVN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHJlamVjdChlcnIsIG51bGwpXG4gICAgICB9KVxuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogTG9hZCB0aGUgZGF0YWJhc2VcbiAgICogMSkgQ3JlYXRlIGFsbCBpbmRleGVzXG4gICAqIDIpIEluc2VydCBhbGwgZGF0YVxuICAgKiAzKSBDb21wYWN0IHRoZSBkYXRhYmFzZVxuICAgKlxuICAgKiBUaGlzIG1lYW5zIHB1bGxpbmcgZGF0YSBvdXQgb2YgdGhlIGRhdGEgZmlsZSBvciBjcmVhdGluZyBpdCBpZiBpdCBkb2Vzbid0IGV4aXN0XG4gICAqIEFsc28sIGFsbCBkYXRhIGlzIHBlcnNpc3RlZCByaWdodCBhd2F5LCB3aGljaCBoYXMgdGhlIGVmZmVjdCBvZiBjb21wYWN0aW5nIHRoZSBkYXRhYmFzZSBmaWxlXG4gICAqIFRoaXMgb3BlcmF0aW9uIGlzIHZlcnkgcXVpY2sgYXQgc3RhcnR1cCBmb3IgYSBiaWcgY29sbGVjdGlvbiAoNjBtcyBmb3IgfjEwayBkb2NzKVxuICAgKlxuICAgKiBEbyBub3QgdXNlIGRpcmVjdGx5IGFzIGl0IGRvZXMgbm90IHVzZSB0aGUgW0V4ZWN1dG9yXXtAbGluayBEYXRhc3RvcmUuZXhlY3V0b3J9LCB1c2Uge0BsaW5rIERhdGFzdG9yZSNsb2FkRGF0YWJhc2VBc3luY30gaW5zdGVhZC5cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGFzeW5jIGxvYWREYXRhYmFzZUFzeW5jICgpIHtcbiAgICB0aGlzLmRiLl9yZXNldEluZGV4ZXMoKVxuXG4gICAgLy8gSW4tbWVtb3J5IG9ubHkgZGF0YXN0b3JlXG4gICAgaWYgKHRoaXMuaW5NZW1vcnlPbmx5KSByZXR1cm5cbiAgICBhd2FpdCBQZXJzaXN0ZW5jZS5lbnN1cmVEaXJlY3RvcnlFeGlzdHNBc3luYyhwYXRoLmRpcm5hbWUodGhpcy5maWxlbmFtZSksIHRoaXMubW9kZXMuZGlyTW9kZSlcbiAgICBhd2FpdCBzdG9yYWdlLmVuc3VyZURhdGFmaWxlSW50ZWdyaXR5QXN5bmModGhpcy5maWxlbmFtZSwgdGhpcy5tb2Rlcy5maWxlTW9kZSlcblxuICAgIGxldCB0cmVhdGVkRGF0YVxuICAgIGlmIChzdG9yYWdlLnJlYWRGaWxlU3RyZWFtKSB7XG4gICAgICAvLyBTZXJ2ZXIgc2lkZVxuICAgICAgY29uc3QgZmlsZVN0cmVhbSA9IHN0b3JhZ2UucmVhZEZpbGVTdHJlYW0odGhpcy5maWxlbmFtZSwgeyBlbmNvZGluZzogJ3V0ZjgnLCBtb2RlOiB0aGlzLm1vZGVzLmZpbGVNb2RlIH0pXG4gICAgICB0cmVhdGVkRGF0YSA9IGF3YWl0IHRoaXMudHJlYXRSYXdTdHJlYW1Bc3luYyhmaWxlU3RyZWFtKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBCcm93c2VyXG4gICAgICBjb25zdCByYXdEYXRhID0gYXdhaXQgc3RvcmFnZS5yZWFkRmlsZUFzeW5jKHRoaXMuZmlsZW5hbWUsIHsgZW5jb2Rpbmc6ICd1dGY4JywgbW9kZTogdGhpcy5tb2Rlcy5maWxlTW9kZSB9KVxuICAgICAgdHJlYXRlZERhdGEgPSB0aGlzLnRyZWF0UmF3RGF0YShyYXdEYXRhKVxuICAgIH1cbiAgICAvLyBSZWNyZWF0ZSBhbGwgaW5kZXhlcyBpbiB0aGUgZGF0YWZpbGVcbiAgICBPYmplY3Qua2V5cyh0cmVhdGVkRGF0YS5pbmRleGVzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICB0aGlzLmRiLmluZGV4ZXNba2V5XSA9IG5ldyBJbmRleCh0cmVhdGVkRGF0YS5pbmRleGVzW2tleV0pXG4gICAgfSlcblxuICAgIC8vIEZpbGwgY2FjaGVkIGRhdGFiYXNlIChpLmUuIGFsbCBpbmRleGVzKSB3aXRoIGRhdGFcbiAgICB0cnkge1xuICAgICAgdGhpcy5kYi5fcmVzZXRJbmRleGVzKHRyZWF0ZWREYXRhLmRhdGEpXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5kYi5fcmVzZXRJbmRleGVzKCkgLy8gUm9sbGJhY2sgYW55IGluZGV4IHdoaWNoIGRpZG4ndCBmYWlsXG4gICAgICB0aHJvdyBlXG4gICAgfVxuXG4gICAgYXdhaXQgdGhpcy5kYi5wZXJzaXN0ZW5jZS5wZXJzaXN0Q2FjaGVkRGF0YWJhc2VBc3luYygpXG4gICAgdGhpcy5kYi5leGVjdXRvci5wcm9jZXNzQnVmZmVyKClcbiAgfVxuXG4gIC8qKlxuICAgKiBTZWUge0BsaW5rIERhdGFzdG9yZSNkcm9wRGF0YWJhc2VBc3luY30uIFRoaXMgZnVuY3Rpb24gdXNlcyB7QGxpbmsgRGF0YXN0b3JlI2V4ZWN1dG9yfSBpbnRlcm5hbGx5LiBEZWNvcmF0aW5nIHRoaXNcbiAgICogZnVuY3Rpb24gd2l0aCBhbiB7QGxpbmsgRXhlY3V0b3IjcHVzaEFzeW5jfSB3aWxsIHJlc3VsdCBpbiBhIGRlYWRsb2NrLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKiBAcHJpdmF0ZVxuICAgKiBAc2VlIERhdGFzdG9yZSNkcm9wRGF0YWJhc2VBc3luY1xuICAgKi9cbiAgYXN5bmMgZHJvcERhdGFiYXNlQXN5bmMgKCkge1xuICAgIHRoaXMuZGIuc3RvcEF1dG9jb21wYWN0aW9uKCkgLy8gc3RvcCBhdXRvY29tcGFjdGlvblxuICAgIHRoaXMuZGIuZXhlY3V0b3IucmVhZHkgPSBmYWxzZSAvLyBwcmV2ZW50IHF1ZXVpbmcgbmV3IHRhc2tzXG4gICAgdGhpcy5kYi5leGVjdXRvci5yZXNldEJ1ZmZlcigpIC8vIHJlbW92ZSBwZW5kaW5nIGJ1ZmZlcmVkIHRhc2tzXG4gICAgYXdhaXQgdGhpcy5kYi5leGVjdXRvci5xdWV1ZS5ndWFyZGlhbiAvLyB3YWl0IGZvciB0aGUgb25nb2luZyB0YXNrcyB0byBlbmRcbiAgICAvLyByZW1vdmUgaW5kZXhlcyAod2hpY2ggbWVhbnMgcmVtb3ZlIGRhdGEgZnJvbSBtZW1vcnkpXG4gICAgdGhpcy5kYi5pbmRleGVzID0ge31cbiAgICAvLyBhZGQgYmFjayBfaWQgaW5kZXgsIG90aGVyd2lzZSBpdCB3aWxsIGZhaWxcbiAgICB0aGlzLmRiLmluZGV4ZXMuX2lkID0gbmV3IEluZGV4KHsgZmllbGROYW1lOiAnX2lkJywgdW5pcXVlOiB0cnVlIH0pXG4gICAgLy8gcmVzZXQgVFRMIG9uIGluZGV4ZXNcbiAgICB0aGlzLmRiLnR0bEluZGV4ZXMgPSB7fVxuXG4gICAgLy8gcmVtb3ZlIGRhdGFzdG9yZSBmaWxlXG4gICAgaWYgKCF0aGlzLmRiLmluTWVtb3J5T25seSkge1xuICAgICAgYXdhaXQgdGhpcy5kYi5leGVjdXRvci5wdXNoQXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICBpZiAoYXdhaXQgc3RvcmFnZS5leGlzdHNBc3luYyh0aGlzLmZpbGVuYW1lKSkgYXdhaXQgc3RvcmFnZS51bmxpbmtBc3luYyh0aGlzLmZpbGVuYW1lKVxuICAgICAgfSwgdHJ1ZSlcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgYSBkaXJlY3Rvcnkgc3RhdCBhbmQgY3JlYXRlIGl0IG9uIHRoZSBmbHkgaWYgaXQgaXMgbm90IHRoZSBjYXNlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGlyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbbW9kZT0wbzc3N11cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIHN0YXRpYyBhc3luYyBlbnN1cmVEaXJlY3RvcnlFeGlzdHNBc3luYyAoZGlyLCBtb2RlID0gREVGQVVMVF9ESVJfTU9ERSkge1xuICAgIGF3YWl0IHN0b3JhZ2UubWtkaXJBc3luYyhkaXIsIHsgcmVjdXJzaXZlOiB0cnVlLCBtb2RlIH0pXG4gIH1cbn1cblxuLy8gSW50ZXJmYWNlXG5tb2R1bGUuZXhwb3J0cyA9IFBlcnNpc3RlbmNlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/persistence.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/storage.js":
/*!****************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/storage.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Way data is stored for this database.\n * This version is the Node.js/Node Webkit version.\n * It's essentially fs, mkdirp and crash safe write and read functions.\n *\n * @see module:storageBrowser\n * @see module:storageReactNative\n * @module storage\n * @private\n */\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst fsPromises = fs.promises\nconst path = __webpack_require__(/*! path */ \"path\")\nconst { Readable } = __webpack_require__(/*! stream */ \"stream\")\n\nconst DEFAULT_DIR_MODE = 0o755\nconst DEFAULT_FILE_MODE = 0o644\n\n/**\n * Returns true if file exists.\n * @param {string} file\n * @return {Promise<boolean>}\n * @async\n * @alias module:storage.existsAsync\n * @see module:storage.exists\n */\nconst existsAsync = file => fsPromises.access(file, fs.constants.F_OK).then(() => true, () => false)\n\n/**\n * Node.js' [fsPromises.rename]{@link https://nodejs.org/api/fs.html#fspromisesrenameoldpath-newpath}\n * @function\n * @param {string} oldPath\n * @param {string} newPath\n * @return {Promise<void>}\n * @alias module:storage.renameAsync\n * @async\n */\nconst renameAsync = fsPromises.rename\n\n/**\n * Node.js' [fsPromises.writeFile]{@link https://nodejs.org/api/fs.html#fspromiseswritefilefile-data-options}.\n * @function\n * @param {string} path\n * @param {string} data\n * @param {object} [options]\n * @return {Promise<void>}\n * @alias module:storage.writeFileAsync\n * @async\n */\nconst writeFileAsync = fsPromises.writeFile\n\n/**\n * Node.js' [fs.createWriteStream]{@link https://nodejs.org/api/fs.html#fscreatewritestreampath-options}.\n * @function\n * @param {string} path\n * @param {Object} [options]\n * @return {fs.WriteStream}\n * @alias module:storage.writeFileStream\n */\nconst writeFileStream = fs.createWriteStream\n\n/**\n * Node.js' [fsPromises.unlink]{@link https://nodejs.org/api/fs.html#fspromisesunlinkpath}.\n * @function\n * @param {string} path\n * @return {Promise<void>}\n * @async\n * @alias module:storage.unlinkAsync\n */\nconst unlinkAsync = fsPromises.unlink\n\n/**\n * Node.js' [fsPromises.appendFile]{@link https://nodejs.org/api/fs.html#fspromisesappendfilepath-data-options}.\n * @function\n * @param {string} path\n * @param {string} data\n * @param {object} [options]\n * @return {Promise<void>}\n * @alias module:storage.appendFileAsync\n * @async\n */\nconst appendFileAsync = fsPromises.appendFile\n\n/**\n * Node.js' [fsPromises.readFile]{@link https://nodejs.org/api/fs.html#fspromisesreadfilepath-options}.\n * @function\n * @param {string} path\n * @param {object} [options]\n * @return {Promise<Buffer>}\n * @alias module:storage.readFileAsync\n * @async\n */\nconst readFileAsync = fsPromises.readFile\n\n/**\n * Node.js' [fs.createReadStream]{@link https://nodejs.org/api/fs.html#fscreatereadstreampath-options}.\n * @function\n * @param {string} path\n * @param {Object} [options]\n * @return {fs.ReadStream}\n * @alias module:storage.readFileStream\n */\nconst readFileStream = fs.createReadStream\n\n/**\n * Node.js' [fsPromises.mkdir]{@link https://nodejs.org/api/fs.html#fspromisesmkdirpath-options}.\n * @function\n * @param {string} path\n * @param {object} options\n * @return {Promise<void|string>}\n * @alias module:storage.mkdirAsync\n * @async\n */\nconst mkdirAsync = fsPromises.mkdir\n\n/**\n * Removes file if it exists.\n * @param {string} file\n * @return {Promise<void>}\n * @alias module:storage.ensureFileDoesntExistAsync\n * @async\n */\nconst ensureFileDoesntExistAsync = async file => {\n  if (await existsAsync(file)) await unlinkAsync(file)\n}\n\n/**\n * Flush data in OS buffer to storage if corresponding option is set.\n * @param {object|string} options If options is a string, it is assumed that the flush of the file (not dir) called options was requested\n * @param {string} [options.filename]\n * @param {boolean} [options.isDir = false] Optional, defaults to false\n * @param {number} [options.mode = 0o644] Optional, defaults to 0o644\n * @return {Promise<void>}\n * @alias module:storage.flushToStorageAsync\n * @async\n */\nconst flushToStorageAsync = async (options) => {\n  let filename\n  let flags\n  let mode\n  if (typeof options === 'string') {\n    filename = options\n    flags = 'r+'\n    mode = DEFAULT_FILE_MODE\n  } else {\n    filename = options.filename\n    flags = options.isDir ? 'r' : 'r+'\n    mode = options.mode !== undefined ? options.mode : DEFAULT_FILE_MODE\n  }\n  /**\n   * Some OSes and/or storage backends (augmented node fs) do not support fsync (FlushFileBuffers) directories,\n   * or calling open() on directories at all. Flushing fails silently in this case, supported by following heuristics:\n   *  + isDir === true\n   *  |-- open(<dir>) -> (err.code === 'EISDIR'): can't call open() on directories (eg. BrowserFS)\n   *  `-- fsync(<dir>) -> (errFS.code === 'EPERM' || errFS.code === 'EISDIR'): can't fsync directory: permissions are checked\n   *        on open(); EPERM error should only occur on fsync incapability and not for general lack of permissions (e.g. Windows)\n   *\n   * We can live with this as it cannot cause 100% dataloss except in the very rare event of the first time\n   * database is loaded and a crash happens.\n   */\n\n  let filehandle, errorOnFsync, errorOnClose\n  try {\n    filehandle = await fsPromises.open(filename, flags, mode)\n    try {\n      await filehandle.sync()\n    } catch (errFS) {\n      errorOnFsync = errFS\n    }\n  } catch (error) {\n    if (error.code !== 'EISDIR' || !options.isDir) throw error\n  } finally {\n    try {\n      await filehandle.close()\n    } catch (errC) {\n      errorOnClose = errC\n    }\n  }\n  if ((errorOnFsync || errorOnClose) && !((errorOnFsync.code === 'EPERM' || errorOnClose.code === 'EISDIR') && options.isDir)) {\n    const e = new Error('Failed to flush to storage')\n    e.errorOnFsync = errorOnFsync\n    e.errorOnClose = errorOnClose\n    throw e\n  }\n}\n\n/**\n * Fully write or rewrite the datafile.\n * @param {string} filename\n * @param {string[]} lines\n * @param {number} [mode=0o644]\n * @return {Promise<void>}\n * @alias module:storage.writeFileLinesAsync\n * @async\n */\nconst writeFileLinesAsync = (filename, lines, mode = DEFAULT_FILE_MODE) => new Promise((resolve, reject) => {\n  try {\n    const stream = writeFileStream(filename, { mode: mode })\n    const readable = Readable.from(lines)\n    readable.on('data', (line) => {\n      try {\n        stream.write(line + '\\n')\n      } catch (err) {\n        reject(err)\n      }\n    })\n    readable.on('end', () => {\n      stream.close(err => {\n        if (err) reject(err)\n        else resolve()\n      })\n    })\n\n    readable.on('error', err => {\n      reject(err)\n    })\n\n    stream.on('error', err => {\n      reject(err)\n    })\n  } catch (err) {\n    reject(err)\n  }\n})\n\n/**\n * Fully write or rewrite the datafile, immune to crashes during the write operation (data will not be lost).\n * @param {string} filename\n * @param {string[]} lines\n * @param {object} [modes={ fileMode: 0o644, dirMode: 0o755 }]\n * @param {number} modes.dirMode\n * @param {number} modes.fileMode\n * @return {Promise<void>}\n * @alias module:storage.crashSafeWriteFileLinesAsync\n */\nconst crashSafeWriteFileLinesAsync = async (filename, lines, modes = { fileMode: DEFAULT_FILE_MODE, dirMode: DEFAULT_DIR_MODE }) => {\n  const tempFilename = filename + '~'\n\n  await flushToStorageAsync({ filename: path.dirname(filename), isDir: true, mode: modes.dirMode })\n\n  const exists = await existsAsync(filename)\n  if (exists) await flushToStorageAsync({ filename, mode: modes.fileMode })\n\n  await writeFileLinesAsync(tempFilename, lines, modes.fileMode)\n\n  await flushToStorageAsync({ filename: tempFilename, mode: modes.fileMode })\n\n  await renameAsync(tempFilename, filename)\n\n  await flushToStorageAsync({ filename: path.dirname(filename), isDir: true, mode: modes.dirMode })\n}\n\n/**\n * Ensure the datafile contains all the data, even if there was a crash during a full file write.\n * @param {string} filename\n * @param {number} [mode=0o644]\n * @return {Promise<void>}\n * @alias module:storage.ensureDatafileIntegrityAsync\n */\nconst ensureDatafileIntegrityAsync = async (filename, mode = DEFAULT_FILE_MODE) => {\n  const tempFilename = filename + '~'\n\n  const filenameExists = await existsAsync(filename)\n  // Write was successful\n  if (filenameExists) return\n\n  const oldFilenameExists = await existsAsync(tempFilename)\n  // New database\n  if (!oldFilenameExists) await writeFileAsync(filename, '', { encoding: 'utf8', mode })\n  // Write failed, use old version\n  else await renameAsync(tempFilename, filename)\n}\n\n// Interface\nmodule.exports.existsAsync = existsAsync\n\nmodule.exports.renameAsync = renameAsync\n\nmodule.exports.writeFileAsync = writeFileAsync\n\nmodule.exports.writeFileLinesAsync = writeFileLinesAsync\n\nmodule.exports.crashSafeWriteFileLinesAsync = crashSafeWriteFileLinesAsync\n\nmodule.exports.appendFileAsync = appendFileAsync\n\nmodule.exports.readFileAsync = readFileAsync\n\nmodule.exports.unlinkAsync = unlinkAsync\n\nmodule.exports.mkdirAsync = mkdirAsync\n\nmodule.exports.readFileStream = readFileStream\n\nmodule.exports.flushToStorageAsync = flushToStorageAsync\n\nmodule.exports.ensureDatafileIntegrityAsync = ensureDatafileIntegrityAsync\n\nmodule.exports.ensureFileDoesntExistAsync = ensureFileDoesntExistAsync\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/storage.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/utils.js ***!
  \**************************************************/
/***/ ((module) => {

eval("/**\n * Utility functions for all environments.\n * This replaces the underscore dependency.\n *\n * @module utils\n * @private\n */\n\n/**\n * @callback IterateeFunction\n * @param {*} arg\n * @return {*}\n */\n\n/**\n * Produces a duplicate-free version of the array, using === to test object equality. In particular only the first\n * occurrence of each value is kept. If you want to compute unique items based on a transformation, pass an iteratee\n * function.\n *\n * Heavily inspired by {@link https://underscorejs.org/#uniq}.\n * @param {Array} array\n * @param {IterateeFunction} [iteratee] transformation applied to every element before checking for duplicates. This will not\n * transform the items in the result.\n * @return {Array}\n * @alias module:utils.uniq\n */\nconst uniq = (array, iteratee) => {\n  if (iteratee) return [...(new Map(array.map(x => [iteratee(x), x]))).values()]\n  else return [...new Set(array)]\n}\n/**\n * Returns true if arg is an Object. Note that JavaScript arrays and functions are objects, while (normal) strings\n * and numbers are not.\n *\n * Heavily inspired by {@link https://underscorejs.org/#isObject}.\n * @param {*} arg\n * @return {boolean}\n */\nconst isObject = arg => typeof arg === 'object' && arg !== null\n\n/**\n * Returns true if d is a Date.\n *\n * Heavily inspired by {@link https://underscorejs.org/#isDate}.\n * @param {*} d\n * @return {boolean}\n * @alias module:utils.isDate\n */\nconst isDate = d => isObject(d) && Object.prototype.toString.call(d) === '[object Date]'\n\n/**\n * Returns true if re is a RegExp.\n *\n * Heavily inspired by {@link https://underscorejs.org/#isRegExp}.\n * @param {*} re\n * @return {boolean}\n * @alias module:utils.isRegExp\n */\nconst isRegExp = re => isObject(re) && Object.prototype.toString.call(re) === '[object RegExp]'\n\nmodule.exports.uniq = uniq\nmodule.exports.isDate = isDate\nmodule.exports.isRegExp = isRegExp\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL0BzZWFsZC1pby9uZWRiL2xpYi91dGlscy5qcz9lNWNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbnMgZm9yIGFsbCBlbnZpcm9ubWVudHMuXG4gKiBUaGlzIHJlcGxhY2VzIHRoZSB1bmRlcnNjb3JlIGRlcGVuZGVuY3kuXG4gKlxuICogQG1vZHVsZSB1dGlsc1xuICogQHByaXZhdGVcbiAqL1xuXG4vKipcbiAqIEBjYWxsYmFjayBJdGVyYXRlZUZ1bmN0aW9uXG4gKiBAcGFyYW0geyp9IGFyZ1xuICogQHJldHVybiB7Kn1cbiAqL1xuXG4vKipcbiAqIFByb2R1Y2VzIGEgZHVwbGljYXRlLWZyZWUgdmVyc2lvbiBvZiB0aGUgYXJyYXksIHVzaW5nID09PSB0byB0ZXN0IG9iamVjdCBlcXVhbGl0eS4gSW4gcGFydGljdWxhciBvbmx5IHRoZSBmaXJzdFxuICogb2NjdXJyZW5jZSBvZiBlYWNoIHZhbHVlIGlzIGtlcHQuIElmIHlvdSB3YW50IHRvIGNvbXB1dGUgdW5pcXVlIGl0ZW1zIGJhc2VkIG9uIGEgdHJhbnNmb3JtYXRpb24sIHBhc3MgYW4gaXRlcmF0ZWVcbiAqIGZ1bmN0aW9uLlxuICpcbiAqIEhlYXZpbHkgaW5zcGlyZWQgYnkge0BsaW5rIGh0dHBzOi8vdW5kZXJzY29yZWpzLm9yZy8jdW5pcX0uXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheVxuICogQHBhcmFtIHtJdGVyYXRlZUZ1bmN0aW9ufSBbaXRlcmF0ZWVdIHRyYW5zZm9ybWF0aW9uIGFwcGxpZWQgdG8gZXZlcnkgZWxlbWVudCBiZWZvcmUgY2hlY2tpbmcgZm9yIGR1cGxpY2F0ZXMuIFRoaXMgd2lsbCBub3RcbiAqIHRyYW5zZm9ybSB0aGUgaXRlbXMgaW4gdGhlIHJlc3VsdC5cbiAqIEByZXR1cm4ge0FycmF5fVxuICogQGFsaWFzIG1vZHVsZTp1dGlscy51bmlxXG4gKi9cbmNvbnN0IHVuaXEgPSAoYXJyYXksIGl0ZXJhdGVlKSA9PiB7XG4gIGlmIChpdGVyYXRlZSkgcmV0dXJuIFsuLi4obmV3IE1hcChhcnJheS5tYXAoeCA9PiBbaXRlcmF0ZWUoeCksIHhdKSkpLnZhbHVlcygpXVxuICBlbHNlIHJldHVybiBbLi4ubmV3IFNldChhcnJheSldXG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhcmcgaXMgYW4gT2JqZWN0LiBOb3RlIHRoYXQgSmF2YVNjcmlwdCBhcnJheXMgYW5kIGZ1bmN0aW9ucyBhcmUgb2JqZWN0cywgd2hpbGUgKG5vcm1hbCkgc3RyaW5nc1xuICogYW5kIG51bWJlcnMgYXJlIG5vdC5cbiAqXG4gKiBIZWF2aWx5IGluc3BpcmVkIGJ5IHtAbGluayBodHRwczovL3VuZGVyc2NvcmVqcy5vcmcvI2lzT2JqZWN0fS5cbiAqIEBwYXJhbSB7Kn0gYXJnXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5jb25zdCBpc09iamVjdCA9IGFyZyA9PiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGxcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgZCBpcyBhIERhdGUuXG4gKlxuICogSGVhdmlseSBpbnNwaXJlZCBieSB7QGxpbmsgaHR0cHM6Ly91bmRlcnNjb3JlanMub3JnLyNpc0RhdGV9LlxuICogQHBhcmFtIHsqfSBkXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICogQGFsaWFzIG1vZHVsZTp1dGlscy5pc0RhdGVcbiAqL1xuY29uc3QgaXNEYXRlID0gZCA9PiBpc09iamVjdChkKSAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZCkgPT09ICdbb2JqZWN0IERhdGVdJ1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiByZSBpcyBhIFJlZ0V4cC5cbiAqXG4gKiBIZWF2aWx5IGluc3BpcmVkIGJ5IHtAbGluayBodHRwczovL3VuZGVyc2NvcmVqcy5vcmcvI2lzUmVnRXhwfS5cbiAqIEBwYXJhbSB7Kn0gcmVcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiBAYWxpYXMgbW9kdWxlOnV0aWxzLmlzUmVnRXhwXG4gKi9cbmNvbnN0IGlzUmVnRXhwID0gcmUgPT4gaXNPYmplY3QocmUpICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyZSkgPT09ICdbb2JqZWN0IFJlZ0V4cF0nXG5cbm1vZHVsZS5leHBvcnRzLnVuaXEgPSB1bmlxXG5tb2R1bGUuZXhwb3J0cy5pc0RhdGUgPSBpc0RhdGVcbm1vZHVsZS5leHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/@seald-io/nedb/lib/waterfall.js":
/*!******************************************************!*\
  !*** ./node_modules/@seald-io/nedb/lib/waterfall.js ***!
  \******************************************************/
/***/ ((module) => {

eval("/**\n * Responsible for sequentially executing actions on the database\n * @private\n */\nclass Waterfall {\n  /**\n   * Instantiate a new Waterfall.\n   */\n  constructor () {\n    /**\n     * This is the internal Promise object which resolves when all the tasks of the `Waterfall` are done.\n     *\n     * It will change any time `this.waterfall` is called.\n     *\n     * @type {Promise}\n     */\n    this.guardian = Promise.resolve()\n  }\n\n  /**\n   *\n   * @param {AsyncFunction} func\n   * @return {AsyncFunction}\n   */\n  waterfall (func) {\n    return (...args) => {\n      this.guardian = this.guardian.then(() => {\n        return func(...args)\n          .then(result => ({ error: false, result }), result => ({ error: true, result }))\n      })\n      return this.guardian.then(({ error, result }) => {\n        if (error) return Promise.reject(result)\n        else return Promise.resolve(result)\n      })\n    }\n  }\n\n  /**\n   * Shorthand for chaining a promise to the Waterfall\n   * @param {Promise} promise\n   * @return {Promise}\n   */\n  chain (promise) {\n    return this.waterfall(() => promise)()\n  }\n}\n\nmodule.exports = Waterfall\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlYWxkLWlvL25lZGIvbGliL3dhdGVyZmFsbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9Ac2VhbGQtaW8vbmVkYi9saWIvd2F0ZXJmYWxsLmpzP2M0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXNwb25zaWJsZSBmb3Igc2VxdWVudGlhbGx5IGV4ZWN1dGluZyBhY3Rpb25zIG9uIHRoZSBkYXRhYmFzZVxuICogQHByaXZhdGVcbiAqL1xuY2xhc3MgV2F0ZXJmYWxsIHtcbiAgLyoqXG4gICAqIEluc3RhbnRpYXRlIGEgbmV3IFdhdGVyZmFsbC5cbiAgICovXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIHRoZSBpbnRlcm5hbCBQcm9taXNlIG9iamVjdCB3aGljaCByZXNvbHZlcyB3aGVuIGFsbCB0aGUgdGFza3Mgb2YgdGhlIGBXYXRlcmZhbGxgIGFyZSBkb25lLlxuICAgICAqXG4gICAgICogSXQgd2lsbCBjaGFuZ2UgYW55IHRpbWUgYHRoaXMud2F0ZXJmYWxsYCBpcyBjYWxsZWQuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7UHJvbWlzZX1cbiAgICAgKi9cbiAgICB0aGlzLmd1YXJkaWFuID0gUHJvbWlzZS5yZXNvbHZlKClcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGZ1bmNcbiAgICogQHJldHVybiB7QXN5bmNGdW5jdGlvbn1cbiAgICovXG4gIHdhdGVyZmFsbCAoZnVuYykge1xuICAgIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgICAgdGhpcy5ndWFyZGlhbiA9IHRoaXMuZ3VhcmRpYW4udGhlbigoKSA9PiB7XG4gICAgICAgIHJldHVybiBmdW5jKC4uLmFyZ3MpXG4gICAgICAgICAgLnRoZW4ocmVzdWx0ID0+ICh7IGVycm9yOiBmYWxzZSwgcmVzdWx0IH0pLCByZXN1bHQgPT4gKHsgZXJyb3I6IHRydWUsIHJlc3VsdCB9KSlcbiAgICAgIH0pXG4gICAgICByZXR1cm4gdGhpcy5ndWFyZGlhbi50aGVuKCh7IGVycm9yLCByZXN1bHQgfSkgPT4ge1xuICAgICAgICBpZiAoZXJyb3IpIHJldHVybiBQcm9taXNlLnJlamVjdChyZXN1bHQpXG4gICAgICAgIGVsc2UgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXN1bHQpXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTaG9ydGhhbmQgZm9yIGNoYWluaW5nIGEgcHJvbWlzZSB0byB0aGUgV2F0ZXJmYWxsXG4gICAqIEBwYXJhbSB7UHJvbWlzZX0gcHJvbWlzZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKi9cbiAgY2hhaW4gKHByb21pc2UpIHtcbiAgICByZXR1cm4gdGhpcy53YXRlcmZhbGwoKCkgPT4gcHJvbWlzZSkoKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gV2F0ZXJmYWxsXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@seald-io/nedb/lib/waterfall.js\n");

/***/ }),

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1yZWdleC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL2Fuc2ktcmVnZXgvaW5kZXguanM/OWVlZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gKHtvbmx5Rmlyc3QgPSBmYWxzZX0gPSB7fSkgPT4ge1xuXHRjb25zdCBwYXR0ZXJuID0gW1xuXHRcdCdbXFxcXHUwMDFCXFxcXHUwMDlCXVtbXFxcXF0oKSM7P10qKD86KD86KD86KD86O1stYS16QS1aXFxcXGRcXFxcLyMmLjo9PyVAfl9dKykqfFthLXpBLVpcXFxcZF0rKD86O1stYS16QS1aXFxcXGRcXFxcLyMmLjo9PyVAfl9dKikqKT9cXFxcdTAwMDcpJyxcblx0XHQnKD86KD86XFxcXGR7MSw0fSg/OjtcXFxcZHswLDR9KSopP1tcXFxcZEEtUFItVFpjZi1udHFyeT0+PH5dKSknXG5cdF0uam9pbignfCcpO1xuXG5cdHJldHVybiBuZXcgUmVnRXhwKHBhdHRlcm4sIG9ubHlGaXJzdCA/IHVuZGVmaW5lZCA6ICdnJyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ansi-regex/index.js\n");

/***/ }),

/***/ "./node_modules/astral-regex/index.js":
/*!********************************************!*\
  !*** ./node_modules/astral-regex/index.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nconst regex = '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]';\n\nconst astralRegex = options => options && options.exact ? new RegExp(`^${regex}$`) : new RegExp(regex, 'g');\n\nmodule.exports = astralRegex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXN0cmFsLXJlZ2V4L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL2FzdHJhbC1yZWdleC9pbmRleC5qcz8zYTM5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHJlZ2V4ID0gJ1tcXHVEODAwLVxcdURCRkZdW1xcdURDMDAtXFx1REZGRl0nO1xuXG5jb25zdCBhc3RyYWxSZWdleCA9IG9wdGlvbnMgPT4gb3B0aW9ucyAmJiBvcHRpb25zLmV4YWN0ID8gbmV3IFJlZ0V4cChgXiR7cmVnZXh9JGApIDogbmV3IFJlZ0V4cChyZWdleCwgJ2cnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3RyYWxSZWdleDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/astral-regex/index.js\n");

/***/ }),

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DBActions\": () => (/* binding */ DBActions),\n/* harmony export */   \"IpcChannels\": () => (/* binding */ IpcChannels),\n/* harmony export */   \"MAIN_PROFILE_ID\": () => (/* binding */ MAIN_PROFILE_ID),\n/* harmony export */   \"SyncEvents\": () => (/* binding */ SyncEvents)\n/* harmony export */ });\n// IPC Channels\nconst IpcChannels = {\n  ENABLE_PROXY: 'enable-proxy',\n  DISABLE_PROXY: 'disable-proxy',\n  OPEN_EXTERNAL_LINK: 'open-external-link',\n  GET_SYSTEM_LOCALE: 'get-system-locale',\n  GET_USER_DATA_PATH: 'get-user-data-path',\n  GET_USER_DATA_PATH_SYNC: 'get-user-data-path-sync',\n  GET_PICTURES_PATH: 'get-pictures-path',\n  SHOW_OPEN_DIALOG: 'show-open-dialog',\n  SHOW_SAVE_DIALOG: 'show-save-dialog',\n  STOP_POWER_SAVE_BLOCKER: 'stop-power-save-blocker',\n  START_POWER_SAVE_BLOCKER: 'start-power-save-blocker',\n  CREATE_NEW_WINDOW: 'create-new-window',\n  OPEN_IN_EXTERNAL_PLAYER: 'open-in-external-player',\n  NATIVE_THEME_UPDATE: 'native-theme-update',\n  DB_SETTINGS: 'db-settings',\n  DB_HISTORY: 'db-history',\n  DB_PROFILES: 'db-profiles',\n  DB_PLAYLISTS: 'db-playlists',\n  SYNC_SETTINGS: 'sync-settings',\n  SYNC_HISTORY: 'sync-history',\n  SYNC_PROFILES: 'sync-profiles',\n  SYNC_PLAYLISTS: 'sync-playlists'\n};\nconst DBActions = {\n  GENERAL: {\n    CREATE: 'db-action-create',\n    FIND: 'db-action-find',\n    UPSERT: 'db-action-upsert',\n    DELETE: 'db-action-delete',\n    DELETE_MULTIPLE: 'db-action-delete-multiple',\n    DELETE_ALL: 'db-action-delete-all',\n    PERSIST: 'db-action-persist'\n  },\n  HISTORY: {\n    UPDATE_WATCH_PROGRESS: 'db-action-history-update-watch-progress',\n    UPDATE_PLAYLIST: 'db-action-history-update-playlist'\n  },\n  PLAYLISTS: {\n    UPSERT_VIDEO: 'db-action-playlists-upsert-video-by-playlist-name',\n    UPSERT_VIDEO_IDS: 'db-action-playlists-upsert-video-ids-by-playlist-id',\n    DELETE_VIDEO_ID: 'db-action-playlists-delete-video-by-playlist-name',\n    DELETE_VIDEO_IDS: 'db-action-playlists-delete-video-ids',\n    DELETE_ALL_VIDEOS: 'db-action-playlists-delete-all-videos'\n  }\n};\nconst SyncEvents = {\n  GENERAL: {\n    CREATE: 'sync-create',\n    UPSERT: 'sync-upsert',\n    DELETE: 'sync-delete',\n    DELETE_ALL: 'sync-delete-all'\n  },\n  HISTORY: {\n    UPDATE_WATCH_PROGRESS: 'sync-history-update-watch-progress',\n    UPDATE_PLAYLIST: 'sync-history-update-playlist'\n  },\n  PLAYLISTS: {\n    UPSERT_VIDEO: 'sync-playlists-upsert-video',\n    DELETE_VIDEO: 'sync-playlists-delete-video'\n  }\n};\n\n// Utils\nconst MAIN_PROFILE_ID = 'allChannels';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vc3JjL2NvbnN0YW50cy5qcz81ZmIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIElQQyBDaGFubmVsc1xuY29uc3QgSXBjQ2hhbm5lbHMgPSB7XG4gIEVOQUJMRV9QUk9YWTogJ2VuYWJsZS1wcm94eScsXG4gIERJU0FCTEVfUFJPWFk6ICdkaXNhYmxlLXByb3h5JyxcbiAgT1BFTl9FWFRFUk5BTF9MSU5LOiAnb3Blbi1leHRlcm5hbC1saW5rJyxcbiAgR0VUX1NZU1RFTV9MT0NBTEU6ICdnZXQtc3lzdGVtLWxvY2FsZScsXG4gIEdFVF9VU0VSX0RBVEFfUEFUSDogJ2dldC11c2VyLWRhdGEtcGF0aCcsXG4gIEdFVF9VU0VSX0RBVEFfUEFUSF9TWU5DOiAnZ2V0LXVzZXItZGF0YS1wYXRoLXN5bmMnLFxuICBHRVRfUElDVFVSRVNfUEFUSDogJ2dldC1waWN0dXJlcy1wYXRoJyxcbiAgU0hPV19PUEVOX0RJQUxPRzogJ3Nob3ctb3Blbi1kaWFsb2cnLFxuICBTSE9XX1NBVkVfRElBTE9HOiAnc2hvdy1zYXZlLWRpYWxvZycsXG4gIFNUT1BfUE9XRVJfU0FWRV9CTE9DS0VSOiAnc3RvcC1wb3dlci1zYXZlLWJsb2NrZXInLFxuICBTVEFSVF9QT1dFUl9TQVZFX0JMT0NLRVI6ICdzdGFydC1wb3dlci1zYXZlLWJsb2NrZXInLFxuICBDUkVBVEVfTkVXX1dJTkRPVzogJ2NyZWF0ZS1uZXctd2luZG93JyxcbiAgT1BFTl9JTl9FWFRFUk5BTF9QTEFZRVI6ICdvcGVuLWluLWV4dGVybmFsLXBsYXllcicsXG4gIE5BVElWRV9USEVNRV9VUERBVEU6ICduYXRpdmUtdGhlbWUtdXBkYXRlJyxcblxuICBEQl9TRVRUSU5HUzogJ2RiLXNldHRpbmdzJyxcbiAgREJfSElTVE9SWTogJ2RiLWhpc3RvcnknLFxuICBEQl9QUk9GSUxFUzogJ2RiLXByb2ZpbGVzJyxcbiAgREJfUExBWUxJU1RTOiAnZGItcGxheWxpc3RzJyxcblxuICBTWU5DX1NFVFRJTkdTOiAnc3luYy1zZXR0aW5ncycsXG4gIFNZTkNfSElTVE9SWTogJ3N5bmMtaGlzdG9yeScsXG4gIFNZTkNfUFJPRklMRVM6ICdzeW5jLXByb2ZpbGVzJyxcbiAgU1lOQ19QTEFZTElTVFM6ICdzeW5jLXBsYXlsaXN0cydcbn1cblxuY29uc3QgREJBY3Rpb25zID0ge1xuICBHRU5FUkFMOiB7XG4gICAgQ1JFQVRFOiAnZGItYWN0aW9uLWNyZWF0ZScsXG4gICAgRklORDogJ2RiLWFjdGlvbi1maW5kJyxcbiAgICBVUFNFUlQ6ICdkYi1hY3Rpb24tdXBzZXJ0JyxcbiAgICBERUxFVEU6ICdkYi1hY3Rpb24tZGVsZXRlJyxcbiAgICBERUxFVEVfTVVMVElQTEU6ICdkYi1hY3Rpb24tZGVsZXRlLW11bHRpcGxlJyxcbiAgICBERUxFVEVfQUxMOiAnZGItYWN0aW9uLWRlbGV0ZS1hbGwnLFxuICAgIFBFUlNJU1Q6ICdkYi1hY3Rpb24tcGVyc2lzdCdcbiAgfSxcblxuICBISVNUT1JZOiB7XG4gICAgVVBEQVRFX1dBVENIX1BST0dSRVNTOiAnZGItYWN0aW9uLWhpc3RvcnktdXBkYXRlLXdhdGNoLXByb2dyZXNzJyxcbiAgICBVUERBVEVfUExBWUxJU1Q6ICdkYi1hY3Rpb24taGlzdG9yeS11cGRhdGUtcGxheWxpc3QnLFxuICB9LFxuXG4gIFBMQVlMSVNUUzoge1xuICAgIFVQU0VSVF9WSURFTzogJ2RiLWFjdGlvbi1wbGF5bGlzdHMtdXBzZXJ0LXZpZGVvLWJ5LXBsYXlsaXN0LW5hbWUnLFxuICAgIFVQU0VSVF9WSURFT19JRFM6ICdkYi1hY3Rpb24tcGxheWxpc3RzLXVwc2VydC12aWRlby1pZHMtYnktcGxheWxpc3QtaWQnLFxuICAgIERFTEVURV9WSURFT19JRDogJ2RiLWFjdGlvbi1wbGF5bGlzdHMtZGVsZXRlLXZpZGVvLWJ5LXBsYXlsaXN0LW5hbWUnLFxuICAgIERFTEVURV9WSURFT19JRFM6ICdkYi1hY3Rpb24tcGxheWxpc3RzLWRlbGV0ZS12aWRlby1pZHMnLFxuICAgIERFTEVURV9BTExfVklERU9TOiAnZGItYWN0aW9uLXBsYXlsaXN0cy1kZWxldGUtYWxsLXZpZGVvcydcbiAgfVxufVxuXG5jb25zdCBTeW5jRXZlbnRzID0ge1xuICBHRU5FUkFMOiB7XG4gICAgQ1JFQVRFOiAnc3luYy1jcmVhdGUnLFxuICAgIFVQU0VSVDogJ3N5bmMtdXBzZXJ0JyxcbiAgICBERUxFVEU6ICdzeW5jLWRlbGV0ZScsXG4gICAgREVMRVRFX0FMTDogJ3N5bmMtZGVsZXRlLWFsbCdcbiAgfSxcblxuICBISVNUT1JZOiB7XG4gICAgVVBEQVRFX1dBVENIX1BST0dSRVNTOiAnc3luYy1oaXN0b3J5LXVwZGF0ZS13YXRjaC1wcm9ncmVzcycsXG4gICAgVVBEQVRFX1BMQVlMSVNUOiAnc3luYy1oaXN0b3J5LXVwZGF0ZS1wbGF5bGlzdCcsXG4gIH0sXG5cbiAgUExBWUxJU1RTOiB7XG4gICAgVVBTRVJUX1ZJREVPOiAnc3luYy1wbGF5bGlzdHMtdXBzZXJ0LXZpZGVvJyxcbiAgICBERUxFVEVfVklERU86ICdzeW5jLXBsYXlsaXN0cy1kZWxldGUtdmlkZW8nXG4gIH1cbn1cblxuLy8gVXRpbHNcbmNvbnN0IE1BSU5fUFJPRklMRV9JRCA9ICdhbGxDaGFubmVscydcblxuZXhwb3J0IHtcbiAgSXBjQ2hhbm5lbHMsXG4gIERCQWN0aW9ucyxcbiAgU3luY0V2ZW50cyxcbiAgTUFJTl9QUk9GSUxFX0lEXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/constants.js\n");

/***/ }),

/***/ "./src/datastores/handlers/base.js":
/*!*****************************************!*\
  !*** ./src/datastores/handlers/base.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./src/datastores/index.js\");\n\nclass Settings {\n  static find() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.find({\n      _id: {\n        $ne: 'bounds'\n      }\n    });\n  }\n  static upsert(_id, value) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.update({\n      _id\n    }, {\n      _id,\n      value\n    }, {\n      upsert: true\n    });\n  }\n\n  // ******************** //\n  // Unique Electron main process handlers\n  static _findAppReadyRelatedSettings() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.find({\n      $or: [{\n        _id: 'disableSmoothScrolling'\n      }, {\n        _id: 'useProxy'\n      }, {\n        _id: 'proxyProtocol'\n      }, {\n        _id: 'proxyHostname'\n      }, {\n        _id: 'proxyPort'\n      }]\n    });\n  }\n  static _findBounds() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.findOne({\n      _id: 'bounds'\n    });\n  }\n  static _findTheme() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.findOne({\n      _id: 'baseTheme'\n    });\n  }\n  static _findSidenavSettings() {\n    return {\n      hideTrendingVideos: _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.findOne({\n        _id: 'hideTrendingVideos'\n      }),\n      hidePopularVideos: _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.findOne({\n        _id: 'hidePopularVideos'\n      }),\n      hidePlaylists: _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.findOne({\n        _id: 'hidePlaylists'\n      })\n    };\n  }\n  static _updateBounds(value) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].settings.update({\n      _id: 'bounds'\n    }, {\n      _id: 'bounds',\n      value\n    }, {\n      upsert: true\n    });\n  }\n  // ******************** //\n}\n\nclass History {\n  static find() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.find({}).sort({\n      timeWatched: -1\n    });\n  }\n  static upsert(record) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.update({\n      videoId: record.videoId\n    }, record, {\n      upsert: true\n    });\n  }\n  static updateWatchProgress(videoId, watchProgress) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.update({\n      videoId\n    }, {\n      $set: {\n        watchProgress\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static updateLastViewedPlaylist(videoId, lastViewedPlaylistId) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.update({\n      videoId\n    }, {\n      $set: {\n        lastViewedPlaylistId\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static delete(videoId) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.remove({\n      videoId\n    });\n  }\n  static deleteAll() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.remove({}, {\n      multi: true\n    });\n  }\n  static persist() {\n    _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].history.persistence.compactDatafile();\n  }\n}\nclass Profiles {\n  static create(profile) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].profiles.insert(profile);\n  }\n  static find() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].profiles.find({});\n  }\n  static upsert(profile) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].profiles.update({\n      _id: profile._id\n    }, profile, {\n      upsert: true\n    });\n  }\n  static delete(id) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].profiles.remove({\n      _id: id\n    });\n  }\n  static persist() {\n    _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].profiles.persistence.compactDatafile();\n  }\n}\nclass Playlists {\n  static create(playlists) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.insert(playlists);\n  }\n  static find() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.find({});\n  }\n  static upsertVideoByPlaylistName(playlistName, videoData) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.update({\n      playlistName\n    }, {\n      $push: {\n        videos: videoData\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static upsertVideoIdsByPlaylistId(_id, videoIds) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.update({\n      _id\n    }, {\n      $push: {\n        videos: {\n          $each: videoIds\n        }\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static delete(_id) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.remove({\n      _id,\n      protected: {\n        $ne: true\n      }\n    });\n  }\n  static deleteVideoIdByPlaylistName(playlistName, videoId) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.update({\n      playlistName\n    }, {\n      $pull: {\n        videos: {\n          videoId\n        }\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static deleteVideoIdsByPlaylistName(playlistName, videoIds) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.update({\n      playlistName\n    }, {\n      $pull: {\n        videos: {\n          $in: videoIds\n        }\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static deleteAllVideosByPlaylistName(playlistName) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.update({\n      playlistName\n    }, {\n      $set: {\n        videos: []\n      }\n    }, {\n      upsert: true\n    });\n  }\n  static deleteMultiple(ids) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.remove({\n      _id: {\n        $in: ids\n      },\n      protected: {\n        $ne: true\n      }\n    });\n  }\n  static deleteAll() {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playlists.remove({\n      protected: {\n        $ne: true\n      }\n    });\n  }\n}\nconst baseHandlers = {\n  settings: Settings,\n  history: History,\n  profiles: Profiles,\n  playlists: Playlists\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (baseHandlers);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YXN0b3Jlcy9oYW5kbGVycy9iYXNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vc3JjL2RhdGFzdG9yZXMvaGFuZGxlcnMvYmFzZS5qcz8wNGE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkYiBmcm9tICcuLi9pbmRleCdcblxuY2xhc3MgU2V0dGluZ3Mge1xuICBzdGF0aWMgZmluZCgpIHtcbiAgICByZXR1cm4gZGIuc2V0dGluZ3MuZmluZCh7IF9pZDogeyAkbmU6ICdib3VuZHMnIH0gfSlcbiAgfVxuXG4gIHN0YXRpYyB1cHNlcnQoX2lkLCB2YWx1ZSkge1xuICAgIHJldHVybiBkYi5zZXR0aW5ncy51cGRhdGUoeyBfaWQgfSwgeyBfaWQsIHZhbHVlIH0sIHsgdXBzZXJ0OiB0cnVlIH0pXG4gIH1cblxuICAvLyAqKioqKioqKioqKioqKioqKioqKiAvL1xuICAvLyBVbmlxdWUgRWxlY3Ryb24gbWFpbiBwcm9jZXNzIGhhbmRsZXJzXG4gIHN0YXRpYyBfZmluZEFwcFJlYWR5UmVsYXRlZFNldHRpbmdzKCkge1xuICAgIHJldHVybiBkYi5zZXR0aW5ncy5maW5kKHtcbiAgICAgICRvcjogW1xuICAgICAgICB7IF9pZDogJ2Rpc2FibGVTbW9vdGhTY3JvbGxpbmcnIH0sXG4gICAgICAgIHsgX2lkOiAndXNlUHJveHknIH0sXG4gICAgICAgIHsgX2lkOiAncHJveHlQcm90b2NvbCcgfSxcbiAgICAgICAgeyBfaWQ6ICdwcm94eUhvc3RuYW1lJyB9LFxuICAgICAgICB7IF9pZDogJ3Byb3h5UG9ydCcgfVxuICAgICAgXVxuICAgIH0pXG4gIH1cblxuICBzdGF0aWMgX2ZpbmRCb3VuZHMoKSB7XG4gICAgcmV0dXJuIGRiLnNldHRpbmdzLmZpbmRPbmUoeyBfaWQ6ICdib3VuZHMnIH0pXG4gIH1cblxuICBzdGF0aWMgX2ZpbmRUaGVtZSgpIHtcbiAgICByZXR1cm4gZGIuc2V0dGluZ3MuZmluZE9uZSh7IF9pZDogJ2Jhc2VUaGVtZScgfSlcbiAgfVxuXG4gIHN0YXRpYyBfZmluZFNpZGVuYXZTZXR0aW5ncygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGlkZVRyZW5kaW5nVmlkZW9zOiBkYi5zZXR0aW5ncy5maW5kT25lKHsgX2lkOiAnaGlkZVRyZW5kaW5nVmlkZW9zJyB9KSxcbiAgICAgIGhpZGVQb3B1bGFyVmlkZW9zOiBkYi5zZXR0aW5ncy5maW5kT25lKHsgX2lkOiAnaGlkZVBvcHVsYXJWaWRlb3MnIH0pLFxuICAgICAgaGlkZVBsYXlsaXN0czogZGIuc2V0dGluZ3MuZmluZE9uZSh7IF9pZDogJ2hpZGVQbGF5bGlzdHMnIH0pLFxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBfdXBkYXRlQm91bmRzKHZhbHVlKSB7XG4gICAgcmV0dXJuIGRiLnNldHRpbmdzLnVwZGF0ZSh7IF9pZDogJ2JvdW5kcycgfSwgeyBfaWQ6ICdib3VuZHMnLCB2YWx1ZSB9LCB7IHVwc2VydDogdHJ1ZSB9KVxuICB9XG4gIC8vICoqKioqKioqKioqKioqKioqKioqIC8vXG59XG5cbmNsYXNzIEhpc3Rvcnkge1xuICBzdGF0aWMgZmluZCgpIHtcbiAgICByZXR1cm4gZGIuaGlzdG9yeS5maW5kKHt9KS5zb3J0KHsgdGltZVdhdGNoZWQ6IC0xIH0pXG4gIH1cblxuICBzdGF0aWMgdXBzZXJ0KHJlY29yZCkge1xuICAgIHJldHVybiBkYi5oaXN0b3J5LnVwZGF0ZSh7IHZpZGVvSWQ6IHJlY29yZC52aWRlb0lkIH0sIHJlY29yZCwgeyB1cHNlcnQ6IHRydWUgfSlcbiAgfVxuXG4gIHN0YXRpYyB1cGRhdGVXYXRjaFByb2dyZXNzKHZpZGVvSWQsIHdhdGNoUHJvZ3Jlc3MpIHtcbiAgICByZXR1cm4gZGIuaGlzdG9yeS51cGRhdGUoeyB2aWRlb0lkIH0sIHsgJHNldDogeyB3YXRjaFByb2dyZXNzIH0gfSwgeyB1cHNlcnQ6IHRydWUgfSlcbiAgfVxuXG4gIHN0YXRpYyB1cGRhdGVMYXN0Vmlld2VkUGxheWxpc3QodmlkZW9JZCwgbGFzdFZpZXdlZFBsYXlsaXN0SWQpIHtcbiAgICByZXR1cm4gZGIuaGlzdG9yeS51cGRhdGUoeyB2aWRlb0lkIH0sIHsgJHNldDogeyBsYXN0Vmlld2VkUGxheWxpc3RJZCB9IH0sIHsgdXBzZXJ0OiB0cnVlIH0pXG4gIH1cblxuICBzdGF0aWMgZGVsZXRlKHZpZGVvSWQpIHtcbiAgICByZXR1cm4gZGIuaGlzdG9yeS5yZW1vdmUoeyB2aWRlb0lkIH0pXG4gIH1cblxuICBzdGF0aWMgZGVsZXRlQWxsKCkge1xuICAgIHJldHVybiBkYi5oaXN0b3J5LnJlbW92ZSh7fSwgeyBtdWx0aTogdHJ1ZSB9KVxuICB9XG5cbiAgc3RhdGljIHBlcnNpc3QoKSB7XG4gICAgZGIuaGlzdG9yeS5wZXJzaXN0ZW5jZS5jb21wYWN0RGF0YWZpbGUoKVxuICB9XG59XG5cbmNsYXNzIFByb2ZpbGVzIHtcbiAgc3RhdGljIGNyZWF0ZShwcm9maWxlKSB7XG4gICAgcmV0dXJuIGRiLnByb2ZpbGVzLmluc2VydChwcm9maWxlKVxuICB9XG5cbiAgc3RhdGljIGZpbmQoKSB7XG4gICAgcmV0dXJuIGRiLnByb2ZpbGVzLmZpbmQoe30pXG4gIH1cblxuICBzdGF0aWMgdXBzZXJ0KHByb2ZpbGUpIHtcbiAgICByZXR1cm4gZGIucHJvZmlsZXMudXBkYXRlKHsgX2lkOiBwcm9maWxlLl9pZCB9LCBwcm9maWxlLCB7IHVwc2VydDogdHJ1ZSB9KVxuICB9XG5cbiAgc3RhdGljIGRlbGV0ZShpZCkge1xuICAgIHJldHVybiBkYi5wcm9maWxlcy5yZW1vdmUoeyBfaWQ6IGlkIH0pXG4gIH1cblxuICBzdGF0aWMgcGVyc2lzdCgpIHtcbiAgICBkYi5wcm9maWxlcy5wZXJzaXN0ZW5jZS5jb21wYWN0RGF0YWZpbGUoKVxuICB9XG59XG5cbmNsYXNzIFBsYXlsaXN0cyB7XG4gIHN0YXRpYyBjcmVhdGUocGxheWxpc3RzKSB7XG4gICAgcmV0dXJuIGRiLnBsYXlsaXN0cy5pbnNlcnQocGxheWxpc3RzKVxuICB9XG5cbiAgc3RhdGljIGZpbmQoKSB7XG4gICAgcmV0dXJuIGRiLnBsYXlsaXN0cy5maW5kKHt9KVxuICB9XG5cbiAgc3RhdGljIHVwc2VydFZpZGVvQnlQbGF5bGlzdE5hbWUocGxheWxpc3ROYW1lLCB2aWRlb0RhdGEpIHtcbiAgICByZXR1cm4gZGIucGxheWxpc3RzLnVwZGF0ZShcbiAgICAgIHsgcGxheWxpc3ROYW1lIH0sXG4gICAgICB7ICRwdXNoOiB7IHZpZGVvczogdmlkZW9EYXRhIH0gfSxcbiAgICAgIHsgdXBzZXJ0OiB0cnVlIH1cbiAgICApXG4gIH1cblxuICBzdGF0aWMgdXBzZXJ0VmlkZW9JZHNCeVBsYXlsaXN0SWQoX2lkLCB2aWRlb0lkcykge1xuICAgIHJldHVybiBkYi5wbGF5bGlzdHMudXBkYXRlKFxuICAgICAgeyBfaWQgfSxcbiAgICAgIHsgJHB1c2g6IHsgdmlkZW9zOiB7ICRlYWNoOiB2aWRlb0lkcyB9IH0gfSxcbiAgICAgIHsgdXBzZXJ0OiB0cnVlIH1cbiAgICApXG4gIH1cblxuICBzdGF0aWMgZGVsZXRlKF9pZCkge1xuICAgIHJldHVybiBkYi5wbGF5bGlzdHMucmVtb3ZlKHsgX2lkLCBwcm90ZWN0ZWQ6IHsgJG5lOiB0cnVlIH0gfSlcbiAgfVxuXG4gIHN0YXRpYyBkZWxldGVWaWRlb0lkQnlQbGF5bGlzdE5hbWUocGxheWxpc3ROYW1lLCB2aWRlb0lkKSB7XG4gICAgcmV0dXJuIGRiLnBsYXlsaXN0cy51cGRhdGUoXG4gICAgICB7IHBsYXlsaXN0TmFtZSB9LFxuICAgICAgeyAkcHVsbDogeyB2aWRlb3M6IHsgdmlkZW9JZCB9IH0gfSxcbiAgICAgIHsgdXBzZXJ0OiB0cnVlIH1cbiAgICApXG4gIH1cblxuICBzdGF0aWMgZGVsZXRlVmlkZW9JZHNCeVBsYXlsaXN0TmFtZShwbGF5bGlzdE5hbWUsIHZpZGVvSWRzKSB7XG4gICAgcmV0dXJuIGRiLnBsYXlsaXN0cy51cGRhdGUoXG4gICAgICB7IHBsYXlsaXN0TmFtZSB9LFxuICAgICAgeyAkcHVsbDogeyB2aWRlb3M6IHsgJGluOiB2aWRlb0lkcyB9IH0gfSxcbiAgICAgIHsgdXBzZXJ0OiB0cnVlIH1cbiAgICApXG4gIH1cblxuICBzdGF0aWMgZGVsZXRlQWxsVmlkZW9zQnlQbGF5bGlzdE5hbWUocGxheWxpc3ROYW1lKSB7XG4gICAgcmV0dXJuIGRiLnBsYXlsaXN0cy51cGRhdGUoXG4gICAgICB7IHBsYXlsaXN0TmFtZSB9LFxuICAgICAgeyAkc2V0OiB7IHZpZGVvczogW10gfSB9LFxuICAgICAgeyB1cHNlcnQ6IHRydWUgfVxuICAgIClcbiAgfVxuXG4gIHN0YXRpYyBkZWxldGVNdWx0aXBsZShpZHMpIHtcbiAgICByZXR1cm4gZGIucGxheWxpc3RzLnJlbW92ZSh7IF9pZDogeyAkaW46IGlkcyB9LCBwcm90ZWN0ZWQ6IHsgJG5lOiB0cnVlIH0gfSlcbiAgfVxuXG4gIHN0YXRpYyBkZWxldGVBbGwoKSB7XG4gICAgcmV0dXJuIGRiLnBsYXlsaXN0cy5yZW1vdmUoeyBwcm90ZWN0ZWQ6IHsgJG5lOiB0cnVlIH0gfSlcbiAgfVxufVxuXG5jb25zdCBiYXNlSGFuZGxlcnMgPSB7XG4gIHNldHRpbmdzOiBTZXR0aW5ncyxcbiAgaGlzdG9yeTogSGlzdG9yeSxcbiAgcHJvZmlsZXM6IFByb2ZpbGVzLFxuICBwbGF5bGlzdHM6IFBsYXlsaXN0c1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlSGFuZGxlcnNcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/datastores/handlers/base.js\n");

/***/ }),

/***/ "./src/datastores/index.js":
/*!*********************************!*\
  !*** ./src/datastores/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var nedb_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nedb-promises */ \"./node_modules/nedb-promises/index.js\");\n/* harmony import */ var nedb_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nedb_promises__WEBPACK_IMPORTED_MODULE_0__);\n\nlet dbPath = null;\nif (true) {\n  const {\n    app\n  } = __webpack_require__(/*! electron */ \"electron\");\n  const {\n    join\n  } = __webpack_require__(/*! path */ \"path\");\n  // this code only runs in the electron main process, so hopefully using sync fs code here should be fine 😬\n  const {\n    statSync,\n    realpathSync\n  } = __webpack_require__(/*! fs */ \"fs\");\n  const userDataPath = app.getPath('userData'); // This is based on the user's OS\n  dbPath = dbName => {\n    let path = join(userDataPath, `${dbName}.db`);\n\n    // returns undefined if the path doesn't exist\n    if (statSync(path, {\n      throwIfNoEntry: false\n    })?.isSymbolicLink) {\n      path = realpathSync(path);\n    }\n    return path;\n  };\n} else {}\nconst db = {};\ndb.settings = nedb_promises__WEBPACK_IMPORTED_MODULE_0___default().create({\n  filename: dbPath('settings'),\n  autoload: true\n});\ndb.profiles = nedb_promises__WEBPACK_IMPORTED_MODULE_0___default().create({\n  filename: dbPath('profiles'),\n  autoload: true\n});\ndb.playlists = nedb_promises__WEBPACK_IMPORTED_MODULE_0___default().create({\n  filename: dbPath('playlists'),\n  autoload: true\n});\ndb.history = nedb_promises__WEBPACK_IMPORTED_MODULE_0___default().create({\n  filename: dbPath('history'),\n  autoload: true\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (db);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YXN0b3Jlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vc3JjL2RhdGFzdG9yZXMvaW5kZXguanM/MDljNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YXN0b3JlIGZyb20gJ25lZGItcHJvbWlzZXMnXG5cbmxldCBkYlBhdGggPSBudWxsXG5cbmlmIChwcm9jZXNzLmVudi5JU19FTEVDVFJPTl9NQUlOKSB7XG4gIGNvbnN0IHsgYXBwIH0gPSByZXF1aXJlKCdlbGVjdHJvbicpXG4gIGNvbnN0IHsgam9pbiB9ID0gcmVxdWlyZSgncGF0aCcpXG4gIC8vIHRoaXMgY29kZSBvbmx5IHJ1bnMgaW4gdGhlIGVsZWN0cm9uIG1haW4gcHJvY2Vzcywgc28gaG9wZWZ1bGx5IHVzaW5nIHN5bmMgZnMgY29kZSBoZXJlIHNob3VsZCBiZSBmaW5lIPCfmKxcbiAgY29uc3QgeyBzdGF0U3luYywgcmVhbHBhdGhTeW5jIH0gPSByZXF1aXJlKCdmcycpXG4gIGNvbnN0IHVzZXJEYXRhUGF0aCA9IGFwcC5nZXRQYXRoKCd1c2VyRGF0YScpIC8vIFRoaXMgaXMgYmFzZWQgb24gdGhlIHVzZXIncyBPU1xuICBkYlBhdGggPSAoZGJOYW1lKSA9PiB7XG4gICAgbGV0IHBhdGggPSBqb2luKHVzZXJEYXRhUGF0aCwgYCR7ZGJOYW1lfS5kYmApXG5cbiAgICAvLyByZXR1cm5zIHVuZGVmaW5lZCBpZiB0aGUgcGF0aCBkb2Vzbid0IGV4aXN0XG4gICAgaWYgKHN0YXRTeW5jKHBhdGgsIHsgdGhyb3dJZk5vRW50cnk6IGZhbHNlIH0pPy5pc1N5bWJvbGljTGluaykge1xuICAgICAgcGF0aCA9IHJlYWxwYXRoU3luYyhwYXRoKVxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn0gZWxzZSB7XG4gIGRiUGF0aCA9IChkYk5hbWUpID0+IGAke2RiTmFtZX0uZGJgXG59XG5cbmNvbnN0IGRiID0ge31cbmRiLnNldHRpbmdzID0gRGF0YXN0b3JlLmNyZWF0ZSh7IGZpbGVuYW1lOiBkYlBhdGgoJ3NldHRpbmdzJyksIGF1dG9sb2FkOiB0cnVlIH0pXG5kYi5wcm9maWxlcyA9IERhdGFzdG9yZS5jcmVhdGUoeyBmaWxlbmFtZTogZGJQYXRoKCdwcm9maWxlcycpLCBhdXRvbG9hZDogdHJ1ZSB9KVxuZGIucGxheWxpc3RzID0gRGF0YXN0b3JlLmNyZWF0ZSh7IGZpbGVuYW1lOiBkYlBhdGgoJ3BsYXlsaXN0cycpLCBhdXRvbG9hZDogdHJ1ZSB9KVxuZGIuaGlzdG9yeSA9IERhdGFzdG9yZS5jcmVhdGUoeyBmaWxlbmFtZTogZGJQYXRoKCdoaXN0b3J5JyksIGF1dG9sb2FkOiB0cnVlIH0pXG5cbmV4cG9ydCBkZWZhdWx0IGRiXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/datastores/index.js\n");

/***/ }),

/***/ "./src/main/ImageCache.js":
/*!********************************!*\
  !*** ./src/main/ImageCache.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ImageCache\": () => (/* binding */ ImageCache),\n/* harmony export */   \"extractExpiryTimestamp\": () => (/* binding */ extractExpiryTimestamp)\n/* harmony export */ });\n// cleanup expired images once every 5 mins\nconst CLEANUP_INTERVAL = 300_000;\n\n// images expire after 2 hours if no expiry information is found in the http headers\nconst FALLBACK_MAX_AGE = 7200;\nclass ImageCache {\n  constructor() {\n    this._cache = new Map();\n    setInterval(this._cleanup.bind(this), CLEANUP_INTERVAL);\n  }\n  add(url, mimeType, data, expiry) {\n    this._cache.set(url, {\n      mimeType,\n      data,\n      expiry\n    });\n  }\n  has(url) {\n    return this._cache.has(url);\n  }\n  get(url) {\n    const entry = this._cache.get(url);\n    if (!entry) {\n      // this should never happen as the `has` method should be used to check for the existence first\n      throw new Error(`No image cache entry for ${url}`);\n    }\n    return {\n      data: entry.data,\n      mimeType: entry.mimeType\n    };\n  }\n  _cleanup() {\n    // seconds since 1970-01-01 00:00:00\n    const now = Math.trunc(Date.now() / 1000);\n    for (const [key, entry] of this._cache.entries()) {\n      if (entry.expiry <= now) {\n        this._cache.delete(key);\n      }\n    }\n  }\n}\n\n/**\n * Extracts the cache expiry timestamp of image from HTTP headers\n * @param {Record<string, string>} headers\n * @returns a timestamp in seconds\n */\nfunction extractExpiryTimestamp(headers) {\n  const maxAgeRegex = /max-age=(\\d+)/;\n  const cacheControl = headers['cache-control'];\n  if (cacheControl && maxAgeRegex.test(cacheControl)) {\n    let maxAge = parseInt(cacheControl.match(maxAgeRegex)[1]);\n    if (headers.age) {\n      maxAge -= parseInt(headers.age);\n    }\n\n    // we don't need millisecond precision, so we can store it as seconds to use less memory\n    return Math.trunc(Date.now() / 1000) + maxAge;\n  } else if (headers.expires) {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n\n    return Math.trunc(Date.parse(headers.expires) / 1000);\n  } else {\n    return Math.trunc(Date.now() / 1000) + FALLBACK_MAX_AGE;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi9JbWFnZUNhY2hlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL3NyYy9tYWluL0ltYWdlQ2FjaGUuanM/ZDg3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjbGVhbnVwIGV4cGlyZWQgaW1hZ2VzIG9uY2UgZXZlcnkgNSBtaW5zXG5jb25zdCBDTEVBTlVQX0lOVEVSVkFMID0gMzAwXzAwMFxuXG4vLyBpbWFnZXMgZXhwaXJlIGFmdGVyIDIgaG91cnMgaWYgbm8gZXhwaXJ5IGluZm9ybWF0aW9uIGlzIGZvdW5kIGluIHRoZSBodHRwIGhlYWRlcnNcbmNvbnN0IEZBTExCQUNLX01BWF9BR0UgPSA3MjAwXG5cbmV4cG9ydCBjbGFzcyBJbWFnZUNhY2hlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fY2FjaGUgPSBuZXcgTWFwKClcblxuICAgIHNldEludGVydmFsKHRoaXMuX2NsZWFudXAuYmluZCh0aGlzKSwgQ0xFQU5VUF9JTlRFUlZBTClcbiAgfVxuXG4gIGFkZCh1cmwsIG1pbWVUeXBlLCBkYXRhLCBleHBpcnkpIHtcbiAgICB0aGlzLl9jYWNoZS5zZXQodXJsLCB7IG1pbWVUeXBlLCBkYXRhLCBleHBpcnkgfSlcbiAgfVxuXG4gIGhhcyh1cmwpIHtcbiAgICByZXR1cm4gdGhpcy5fY2FjaGUuaGFzKHVybClcbiAgfVxuXG4gIGdldCh1cmwpIHtcbiAgICBjb25zdCBlbnRyeSA9IHRoaXMuX2NhY2hlLmdldCh1cmwpXG5cbiAgICBpZiAoIWVudHJ5KSB7XG4gICAgICAvLyB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW4gYXMgdGhlIGBoYXNgIG1ldGhvZCBzaG91bGQgYmUgdXNlZCB0byBjaGVjayBmb3IgdGhlIGV4aXN0ZW5jZSBmaXJzdFxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBpbWFnZSBjYWNoZSBlbnRyeSBmb3IgJHt1cmx9YClcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZGF0YTogZW50cnkuZGF0YSxcbiAgICAgIG1pbWVUeXBlOiBlbnRyeS5taW1lVHlwZVxuICAgIH1cbiAgfVxuXG4gIF9jbGVhbnVwKCkge1xuICAgIC8vIHNlY29uZHMgc2luY2UgMTk3MC0wMS0wMSAwMDowMDowMFxuICAgIGNvbnN0IG5vdyA9IE1hdGgudHJ1bmMoRGF0ZS5ub3coKSAvIDEwMDApXG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIGVudHJ5XSBvZiB0aGlzLl9jYWNoZS5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChlbnRyeS5leHBpcnkgPD0gbm93KSB7XG4gICAgICAgIHRoaXMuX2NhY2hlLmRlbGV0ZShrZXkpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRXh0cmFjdHMgdGhlIGNhY2hlIGV4cGlyeSB0aW1lc3RhbXAgb2YgaW1hZ2UgZnJvbSBIVFRQIGhlYWRlcnNcbiAqIEBwYXJhbSB7UmVjb3JkPHN0cmluZywgc3RyaW5nPn0gaGVhZGVyc1xuICogQHJldHVybnMgYSB0aW1lc3RhbXAgaW4gc2Vjb25kc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdEV4cGlyeVRpbWVzdGFtcChoZWFkZXJzKSB7XG4gIGNvbnN0IG1heEFnZVJlZ2V4ID0gL21heC1hZ2U9KFxcZCspL1xuXG4gIGNvbnN0IGNhY2hlQ29udHJvbCA9IGhlYWRlcnNbJ2NhY2hlLWNvbnRyb2wnXVxuICBpZiAoY2FjaGVDb250cm9sICYmIG1heEFnZVJlZ2V4LnRlc3QoY2FjaGVDb250cm9sKSkge1xuICAgIGxldCBtYXhBZ2UgPSBwYXJzZUludChjYWNoZUNvbnRyb2wubWF0Y2gobWF4QWdlUmVnZXgpWzFdKVxuXG4gICAgaWYgKGhlYWRlcnMuYWdlKSB7XG4gICAgICBtYXhBZ2UgLT0gcGFyc2VJbnQoaGVhZGVycy5hZ2UpXG4gICAgfVxuXG4gICAgLy8gd2UgZG9uJ3QgbmVlZCBtaWxsaXNlY29uZCBwcmVjaXNpb24sIHNvIHdlIGNhbiBzdG9yZSBpdCBhcyBzZWNvbmRzIHRvIHVzZSBsZXNzIG1lbW9yeVxuICAgIHJldHVybiBNYXRoLnRydW5jKERhdGUubm93KCkgLyAxMDAwKSArIG1heEFnZVxuICB9IGVsc2UgaWYgKGhlYWRlcnMuZXhwaXJlcykge1xuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9FeHBpcmVzXG5cbiAgICByZXR1cm4gTWF0aC50cnVuYyhEYXRlLnBhcnNlKGhlYWRlcnMuZXhwaXJlcykgLyAxMDAwKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBNYXRoLnRydW5jKERhdGUubm93KCkgLyAxMDAwKSArIEZBTExCQUNLX01BWF9BR0VcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/main/ImageCache.js\n");

/***/ }),

/***/ "./src/main/index.js":
/*!***************************!*\
  !*** ./src/main/index.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var __dirname = \"src/main\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electron */ \"electron\");\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(electron__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\n/* harmony import */ var _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../datastores/handlers/base */ \"./src/datastores/handlers/base.js\");\n/* harmony import */ var _ImageCache__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ImageCache */ \"./src/main/ImageCache.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\nif (process.argv.includes('--version')) {\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.exit();\n} else {\n  runApp();\n}\nfunction runApp() {\n  __webpack_require__(/*! electron-context-menu */ \"./node_modules/electron-context-menu/index.js\")({\n    showSearchWithGoogle: false,\n    showSaveImageAs: true,\n    showCopyImageAddress: true,\n    showSelectAll: false,\n    showCopyLink: false,\n    prepend: (defaultActions, parameters, browserWindow) => [{\n      label: 'Show / Hide Video Statistics',\n      visible: parameters.mediaType === 'video',\n      click: () => {\n        browserWindow.webContents.send('showVideoStatistics');\n      }\n    }, {\n      label: 'Open in a New Window',\n      // Only show the option for in-app URLs and not external ones\n      visible: parameters.linkURL.split('#')[0] === browserWindow.webContents.getURL().split('#')[0],\n      click: () => {\n        createWindow({\n          replaceMainWindow: false,\n          windowStartupUrl: parameters.linkURL,\n          showWindowNow: true\n        });\n      }\n    },\n    // Only show select all in text fields\n    {\n      label: 'Select All',\n      enabled: parameters.editFlags.canSelectAll,\n      visible: parameters.isEditable,\n      click: () => {\n        browserWindow.webContents.selectAll();\n      }\n    }],\n    // only show the copy link entry for external links and the /playlist, /channel and /watch in-app URLs\n    // the /playlist, /channel and /watch in-app URLs get transformed to their equivalent YouTube or Invidious URLs\n    append: (defaultActions, parameters, browserWindow) => {\n      let visible = false;\n      const urlParts = parameters.linkURL.split('#');\n      const isInAppUrl = urlParts[0] === browserWindow.webContents.getURL().split('#')[0];\n      if (parameters.linkURL.length > 0) {\n        if (isInAppUrl) {\n          const path = urlParts[1];\n          if (path) {\n            visible = ['/playlist', '/channel', '/watch'].some(p => path.startsWith(p));\n          }\n        } else {\n          visible = true;\n        }\n      }\n      const copy = url => {\n        if (parameters.linkText) {\n          electron__WEBPACK_IMPORTED_MODULE_0__.clipboard.write({\n            bookmark: parameters.linkText,\n            text: url\n          });\n        } else {\n          electron__WEBPACK_IMPORTED_MODULE_0__.clipboard.writeText(url);\n        }\n      };\n      const transformURL = toYouTube => {\n        let origin;\n        if (toYouTube) {\n          origin = 'https://www.youtube.com';\n        } else {\n          origin = 'https://redirect.invidious.io';\n        }\n        const [path, query] = urlParts[1].split('?');\n        const [route, id] = path.split('/').filter(p => p);\n        switch (route) {\n          case 'playlist':\n            return `${origin}/playlist?list=${id}`;\n          case 'channel':\n            return `${origin}/channel/${id}`;\n          case 'watch':\n            {\n              let url;\n              if (toYouTube) {\n                url = `https://youtu.be/${id}`;\n              } else {\n                url = `https://redirect.invidious.io/watch?v=${id}`;\n              }\n              if (query) {\n                const params = new URLSearchParams(query);\n                const newParams = new URLSearchParams();\n                let hasParams = false;\n                if (params.has('playlistId')) {\n                  newParams.set('list', params.get('playlistId'));\n                  hasParams = true;\n                }\n                if (params.has('timestamp')) {\n                  newParams.set('t', params.get('timestamp'));\n                  hasParams = true;\n                }\n                if (hasParams) {\n                  url += '?' + newParams.toString();\n                }\n              }\n              return url;\n            }\n        }\n      };\n      return [{\n        label: 'Copy Lin&k',\n        visible: visible && !isInAppUrl,\n        click: () => {\n          copy(parameters.linkURL);\n        }\n      }, {\n        label: 'Copy YouTube Link',\n        visible: visible && isInAppUrl,\n        click: () => {\n          copy(transformURL(true));\n        }\n      }, {\n        label: 'Copy Invidious Link',\n        visible: visible && isInAppUrl,\n        click: () => {\n          copy(transformURL(false));\n        }\n      }];\n    }\n  });\n\n  // disable electron warning\n  process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = 'true';\n  const isDebug = process.argv.includes('--debug');\n  let mainWindow;\n  let startupUrl;\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.commandLine.appendSwitch('enable-accelerated-video-decode');\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.commandLine.appendSwitch('enable-file-cookies');\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.commandLine.appendSwitch('ignore-gpu-blacklist');\n\n  // command line switches need to be added before the app ready event first\n  // that means we can't use the normal settings system as that is asynchonous,\n  // doing it synchronously ensures that we add it before the event fires\n  const replaceHttpCache = (0,fs__WEBPACK_IMPORTED_MODULE_6__.existsSync)(`${electron__WEBPACK_IMPORTED_MODULE_0__.app.getPath('userData')}/experiment-replace-http-cache`);\n  if (replaceHttpCache) {\n    // the http cache causes excessive disk usage during video playback\n    // we've got a custom image cache to make up for disabling the http cache\n    // experimental as it increases RAM use in favour of reduced disk use\n    electron__WEBPACK_IMPORTED_MODULE_0__.app.commandLine.appendSwitch('disable-http-cache');\n  }\n\n  // See: https://stackoverflow.com/questions/45570589/electron-protocol-handler-not-working-on-windows\n  // remove so we can register each time as we run the app.\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.removeAsDefaultProtocolClient('freetube');\n\n  // If we are running a non-packaged version of the app && on windows\n  if ( true && process.platform === 'win32') {\n    // Set the path of electron.exe and your app.\n    // These two additional parameters are only available on windows.\n    electron__WEBPACK_IMPORTED_MODULE_0__.app.setAsDefaultProtocolClient('freetube', process.execPath, [path__WEBPACK_IMPORTED_MODULE_1___default().resolve(process.argv[1])]);\n  } else {\n    electron__WEBPACK_IMPORTED_MODULE_0__.app.setAsDefaultProtocolClient('freetube');\n  }\n  if (false) {}\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.on('ready', async (_, __) => {\n    let docArray;\n    try {\n      docArray = await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings._findAppReadyRelatedSettings();\n    } catch (err) {\n      console.error(err);\n      electron__WEBPACK_IMPORTED_MODULE_0__.app.exit();\n      return;\n    }\n    let disableSmoothScrolling = false;\n    let useProxy = false;\n    let proxyProtocol = 'socks5';\n    let proxyHostname = '127.0.0.1';\n    let proxyPort = '9050';\n    if (docArray?.length > 0) {\n      docArray.forEach(doc => {\n        switch (doc._id) {\n          case 'disableSmoothScrolling':\n            disableSmoothScrolling = doc.value;\n            break;\n          case 'useProxy':\n            useProxy = doc.value;\n            break;\n          case 'proxyProtocol':\n            proxyProtocol = doc.value;\n            break;\n          case 'proxyHostname':\n            proxyHostname = doc.value;\n            break;\n          case 'proxyPort':\n            proxyPort = doc.value;\n            break;\n        }\n      });\n    }\n    if (disableSmoothScrolling) {\n      electron__WEBPACK_IMPORTED_MODULE_0__.app.commandLine.appendSwitch('disable-smooth-scrolling');\n    } else {\n      electron__WEBPACK_IMPORTED_MODULE_0__.app.commandLine.appendSwitch('enable-smooth-scrolling');\n    }\n    if (useProxy) {\n      electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.setProxy({\n        proxyRules: `${proxyProtocol}://${proxyHostname}:${proxyPort}`\n      });\n    }\n\n    // Set CONSENT cookie on reasonable domains\n    const consentCookieDomains = ['https://www.youtube.com', 'https://youtube.com'];\n    consentCookieDomains.forEach(url => {\n      electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.cookies.set({\n        url: url,\n        name: 'CONSENT',\n        value: 'YES+',\n        sameSite: 'no_restriction'\n      });\n    });\n\n    // make InnerTube requests work with the fetch function\n    // InnerTube rejects requests if the referer isn't YouTube or empty\n    const innertubeRequestFilter = {\n      urls: ['https://www.youtube.com/youtubei/*']\n    };\n    electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.webRequest.onBeforeSendHeaders(innertubeRequestFilter, ({\n      requestHeaders\n    }, callback) => {\n      requestHeaders.referer = 'https://www.youtube.com';\n      // eslint-disable-next-line n/no-callback-literal\n      callback({\n        requestHeaders\n      });\n    });\n    if (replaceHttpCache) {\n      // in-memory image cache\n\n      const imageCache = new _ImageCache__WEBPACK_IMPORTED_MODULE_5__.ImageCache();\n      electron__WEBPACK_IMPORTED_MODULE_0__.protocol.registerBufferProtocol('imagecache', (request, callback) => {\n        // Remove `imagecache://` prefix\n        const url = decodeURIComponent(request.url.substring(13));\n        if (imageCache.has(url)) {\n          const cached = imageCache.get(url);\n\n          // eslint-disable-next-line n/no-callback-literal\n          callback({\n            mimeType: cached.mimeType,\n            data: cached.data\n          });\n          return;\n        }\n        const newRequest = electron__WEBPACK_IMPORTED_MODULE_0__.net.request({\n          method: request.method,\n          url\n        });\n\n        // Electron doesn't allow certain headers to be set:\n        // https://www.electronjs.org/docs/latest/api/client-request#requestsetheadername-value\n        // also blacklist Origin and Referrer as we don't want to let YouTube know about them\n        const blacklistedHeaders = ['content-length', 'host', 'trailer', 'te', 'upgrade', 'cookie2', 'keep-alive', 'transfer-encoding', 'origin', 'referrer'];\n        for (const header of Object.keys(request.headers)) {\n          if (!blacklistedHeaders.includes(header.toLowerCase())) {\n            newRequest.setHeader(header, request.headers[header]);\n          }\n        }\n        newRequest.on('response', response => {\n          const chunks = [];\n          response.on('data', chunk => {\n            chunks.push(chunk);\n          });\n          response.on('end', () => {\n            const data = Buffer.concat(chunks);\n            const expiryTimestamp = (0,_ImageCache__WEBPACK_IMPORTED_MODULE_5__.extractExpiryTimestamp)(response.headers);\n            const mimeType = response.headers['content-type'];\n            imageCache.add(url, mimeType, data, expiryTimestamp);\n\n            // eslint-disable-next-line n/no-callback-literal\n            callback({\n              mimeType,\n              data: data\n            });\n          });\n          response.on('error', error => {\n            console.error('image cache error', error);\n\n            // error objects don't get serialised properly\n            // https://stackoverflow.com/a/53624454\n\n            const errorJson = JSON.stringify(error, (key, value) => {\n              if (value instanceof Error) {\n                return {\n                  // Pull all enumerable properties, supporting properties on custom Errors\n                  ...value,\n                  // Explicitly pull Error's non-enumerable properties\n                  name: value.name,\n                  message: value.message,\n                  stack: value.stack\n                };\n              }\n              return value;\n            });\n\n            // eslint-disable-next-line n/no-callback-literal\n            callback({\n              statusCode: response.statusCode ?? 400,\n              mimeType: 'application/json',\n              data: Buffer.from(errorJson)\n            });\n          });\n        });\n        newRequest.on('error', err => {\n          console.error(err);\n        });\n        newRequest.end();\n      });\n      const imageRequestFilter = {\n        urls: ['https://*/*', 'http://*/*']\n      };\n      electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.webRequest.onBeforeRequest(imageRequestFilter, (details, callback) => {\n        // the requests made by the imagecache:// handler to fetch the image,\n        // are allowed through, as their resourceType is 'other'\n        if (details.resourceType === 'image') {\n          // eslint-disable-next-line n/no-callback-literal\n          callback({\n            redirectURL: `imagecache://${encodeURIComponent(details.url)}`\n          });\n        } else {\n          // eslint-disable-next-line n/no-callback-literal\n          callback({});\n        }\n      });\n\n      // --- end of `if experimentsDisableDiskCache` ---\n    }\n\n    await createWindow();\n    if (true) {\n      installDevTools();\n    }\n    if (isDebug) {\n      mainWindow.webContents.openDevTools();\n    }\n  });\n  async function installDevTools() {\n    try {\n      /* eslint-disable */\n      (__webpack_require__(/*! vue-devtools */ \"./node_modules/vue-devtools/lib/index.js\").install)();\n      /* eslint-enable */\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async function createWindow({\n    replaceMainWindow = true,\n    windowStartupUrl = null,\n    showWindowNow = false,\n    searchQueryText = null\n  } = {}) {\n    // Syncing new window background to theme choice.\n    const windowBackground = await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings._findTheme().then(({\n      value\n    }) => {\n      switch (value) {\n        case 'dark':\n          return '#212121';\n        case 'light':\n          return '#f1f1f1';\n        case 'black':\n          return '#000000';\n        case 'dracula':\n          return '#282a36';\n        case 'catppuccin-mocha':\n          return '#1e1e2e';\n        case 'system':\n        default:\n          return electron__WEBPACK_IMPORTED_MODULE_0__.nativeTheme.shouldUseDarkColors ? '#212121' : '#f1f1f1';\n      }\n    }).catch(error => {\n      console.error(error);\n      // Default to nativeTheme settings if nothing is found.\n      return electron__WEBPACK_IMPORTED_MODULE_0__.nativeTheme.shouldUseDarkColors ? '#212121' : '#f1f1f1';\n    });\n\n    /**\n     * Initial window options\n     */\n    const commonBrowserWindowOptions = {\n      backgroundColor: windowBackground,\n      darkTheme: electron__WEBPACK_IMPORTED_MODULE_0__.nativeTheme.shouldUseDarkColors,\n      icon:  true ? path__WEBPACK_IMPORTED_MODULE_1___default().join(__dirname, '../../_icons/iconColor.png')\n      /* eslint-disable-next-line n/no-path-concat */ : 0,\n      autoHideMenuBar: true,\n      // useContentSize: true,\n      webPreferences: {\n        nodeIntegration: true,\n        nodeIntegrationInWorker: false,\n        webSecurity: false,\n        backgroundThrottling: false,\n        contextIsolation: false\n      }\n    };\n    const newWindow = new electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow(Object.assign({\n      // It will be shown later when ready via `ready-to-show` event\n      show: showWindowNow\n    }, commonBrowserWindowOptions));\n\n    // region Ensure child windows use same options since electron 14\n\n    // https://github.com/electron/electron/blob/14-x-y/docs/api/window-open.md#native-window-example\n    newWindow.webContents.setWindowOpenHandler(details => {\n      createWindow({\n        replaceMainWindow: false,\n        showWindowNow: true,\n        windowStartupUrl: details.url\n      });\n      return {\n        action: 'deny'\n      };\n    });\n\n    // endregion Ensure child windows use same options since electron 14\n\n    if (replaceMainWindow) {\n      mainWindow = newWindow;\n    }\n    newWindow.setBounds({\n      width: 1200,\n      height: 800\n    });\n    const boundsDoc = await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings._findBounds();\n    if (typeof boundsDoc?.value === 'object') {\n      const {\n        maximized,\n        fullScreen,\n        ...bounds\n      } = boundsDoc.value;\n      const windowVisible = electron__WEBPACK_IMPORTED_MODULE_0__.screen.getAllDisplays().some(display => {\n        const {\n          x,\n          y,\n          width,\n          height\n        } = display.bounds;\n        return !(bounds.x > x + width || bounds.x + bounds.width < x || bounds.y > y + height || bounds.y + bounds.height < y);\n      });\n      if (windowVisible) {\n        newWindow.setBounds({\n          x: bounds.x,\n          y: bounds.y,\n          width: bounds.width,\n          height: bounds.height\n        });\n      }\n      if (maximized) {\n        newWindow.maximize();\n      }\n      if (fullScreen) {\n        newWindow.setFullScreen(true);\n      }\n    }\n\n    // If called multiple times\n    // Duplicate menu items will be added\n    if (replaceMainWindow) {\n      // eslint-disable-next-line\n      setMenu();\n    }\n\n    // load root file/url\n    if (true) {\n      let devStartupURL = 'http://localhost:9080';\n      if (windowStartupUrl != null) {\n        devStartupURL = windowStartupUrl;\n      }\n      newWindow.loadURL(devStartupURL);\n    } else {}\n    if (typeof searchQueryText === 'string' && searchQueryText.length > 0) {\n      electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.once('searchInputHandlingReady', () => {\n        newWindow.webContents.send('updateSearchInputText', searchQueryText);\n      });\n    }\n\n    // Show when loaded\n    newWindow.once('ready-to-show', () => {\n      if (newWindow.isVisible()) {\n        // only open the dev tools if they aren't already open\n        if ( true && !newWindow.webContents.isDevToolsOpened()) {\n          newWindow.webContents.openDevTools({\n            activate: false\n          });\n        }\n        return;\n      }\n      newWindow.show();\n      newWindow.focus();\n      if (true) {\n        newWindow.webContents.openDevTools({\n          activate: false\n        });\n      }\n    });\n    newWindow.once('close', async () => {\n      if (electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow.getAllWindows().length !== 1) {\n        return;\n      }\n      const value = {\n        ...newWindow.getNormalBounds(),\n        maximized: newWindow.isMaximized(),\n        fullScreen: newWindow.isFullScreen()\n      };\n      await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings._updateBounds(value);\n    });\n    newWindow.once('closed', () => {\n      const allWindows = electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow.getAllWindows();\n      if (allWindows.length !== 0 && newWindow === mainWindow) {\n        // Replace mainWindow to avoid accessing `mainWindow.webContents`\n        // Which raises \"Object has been destroyed\" error\n        mainWindow = allWindows[0];\n      }\n    });\n  }\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.once('appReady', () => {\n    if (startupUrl) {\n      mainWindow.webContents.send('openUrl', startupUrl);\n    }\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.once('relaunchRequest', () => {\n    if (true) {\n      electron__WEBPACK_IMPORTED_MODULE_0__.app.exit(parseInt(process.env.FREETUBE_RELAUNCH_EXIT_CODE));\n      return;\n    }\n\n    // The AppImage and Windows portable formats must be accounted for\n    // because `process.execPath` points at the temporarily extracted\n    // executables, not the executables themselves\n    //\n    // It's possible to detect these formats and identify their\n    // executables' paths by checking the environmental variables\n    const {\n      env: {\n        APPIMAGE,\n        PORTABLE_EXECUTABLE_FILE\n      }\n    } = process;\n    if (!APPIMAGE) {\n      // If it's a Windows portable, PORTABLE_EXECUTABLE_FILE will\n      // hold a value.\n      // Otherwise, `process.execPath` should be used instead.\n      electron__WEBPACK_IMPORTED_MODULE_0__.app.relaunch({\n        args: process.argv.slice(1),\n        execPath: PORTABLE_EXECUTABLE_FILE || process.execPath\n      });\n    } else {\n      // If it's an AppImage, things must be done the \"hard way\"\n      // `app.relaunch` doesn't work because of FUSE limitations\n      // Spawn a new process using the APPIMAGE env variable\n      const subprocess = child_process__WEBPACK_IMPORTED_MODULE_2___default().spawn(APPIMAGE, {\n        detached: true,\n        stdio: 'ignore'\n      });\n      subprocess.unref();\n    }\n    electron__WEBPACK_IMPORTED_MODULE_0__.app.quit();\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.nativeTheme.on('updated', () => {\n    const allWindows = electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow.getAllWindows();\n    allWindows.forEach(window => {\n      window.webContents.send(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.NATIVE_THEME_UPDATE, electron__WEBPACK_IMPORTED_MODULE_0__.nativeTheme.shouldUseDarkColors);\n    });\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.ENABLE_PROXY, (_, url) => {\n    electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.setProxy({\n      proxyRules: url\n    });\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.DISABLE_PROXY, () => {\n    electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.setProxy({});\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.OPEN_EXTERNAL_LINK, (_, url) => {\n    if (typeof url === 'string') electron__WEBPACK_IMPORTED_MODULE_0__.shell.openExternal(url);\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.GET_SYSTEM_LOCALE, () => {\n    return electron__WEBPACK_IMPORTED_MODULE_0__.app.getLocale();\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.GET_USER_DATA_PATH, () => {\n    return electron__WEBPACK_IMPORTED_MODULE_0__.app.getPath('userData');\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.GET_USER_DATA_PATH_SYNC, event => {\n    event.returnValue = electron__WEBPACK_IMPORTED_MODULE_0__.app.getPath('userData');\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.GET_PICTURES_PATH, () => {\n    return electron__WEBPACK_IMPORTED_MODULE_0__.app.getPath('pictures');\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SHOW_OPEN_DIALOG, async ({\n    sender\n  }, options) => {\n    const senderWindow = findSenderWindow(sender);\n    if (senderWindow) {\n      return await electron__WEBPACK_IMPORTED_MODULE_0__.dialog.showOpenDialog(senderWindow, options);\n    }\n    return await electron__WEBPACK_IMPORTED_MODULE_0__.dialog.showOpenDialog(options);\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SHOW_SAVE_DIALOG, async ({\n    sender\n  }, options) => {\n    const senderWindow = findSenderWindow(sender);\n    if (senderWindow) {\n      return await electron__WEBPACK_IMPORTED_MODULE_0__.dialog.showSaveDialog(senderWindow, options);\n    }\n    return await electron__WEBPACK_IMPORTED_MODULE_0__.dialog.showSaveDialog(options);\n  });\n  function findSenderWindow(sender) {\n    return electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow.getAllWindows().find(window => {\n      return window.webContents.id === sender.id;\n    });\n  }\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.STOP_POWER_SAVE_BLOCKER, (_, id) => {\n    electron__WEBPACK_IMPORTED_MODULE_0__.powerSaveBlocker.stop(id);\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.START_POWER_SAVE_BLOCKER, _ => {\n    return electron__WEBPACK_IMPORTED_MODULE_0__.powerSaveBlocker.start('prevent-display-sleep');\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.CREATE_NEW_WINDOW, (_e, {\n    windowStartupUrl = null,\n    searchQueryText = null\n  } = {}) => {\n    createWindow({\n      replaceMainWindow: false,\n      showWindowNow: true,\n      windowStartupUrl: windowStartupUrl,\n      searchQueryText: searchQueryText\n    });\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.on(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.OPEN_IN_EXTERNAL_PLAYER, (_, payload) => {\n    const child = child_process__WEBPACK_IMPORTED_MODULE_2___default().spawn(payload.executable, payload.args, {\n      detached: true,\n      stdio: 'ignore'\n    });\n    child.unref();\n  });\n\n  // ************************************************* //\n  // DB related IPC calls\n  // *********** //\n\n  // Settings\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.DB_SETTINGS, async (event, {\n    action,\n    data\n  }) => {\n    try {\n      switch (action) {\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.FIND:\n          return await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings.find();\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.UPSERT:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings.upsert(data._id, data.value);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_SETTINGS, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.UPSERT,\n            data\n          });\n          switch (data._id) {\n            // Update app menu on related setting update\n            case 'hideTrendingVideos':\n            case 'hidePopularVideos':\n            case 'hidePlaylists':\n              await setMenu();\n              break;\n            default:\n            // Do nothing for unmatched settings\n          }\n\n          return null;\n        default:\n          // eslint-disable-next-line no-throw-literal\n          throw 'invalid settings db action';\n      }\n    } catch (err) {\n      if (typeof err === 'string') throw err;else throw err.toString();\n    }\n  });\n\n  // *********** //\n  // History\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.DB_HISTORY, async (event, {\n    action,\n    data\n  }) => {\n    try {\n      switch (action) {\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.FIND:\n          return await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history.find();\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.UPSERT:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history.upsert(data);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_HISTORY, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.UPSERT,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.HISTORY.UPDATE_WATCH_PROGRESS:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history.updateWatchProgress(data.videoId, data.watchProgress);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_HISTORY, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.HISTORY.UPDATE_WATCH_PROGRESS,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.HISTORY.UPDATE_PLAYLIST:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history.updateLastViewedPlaylist(data.videoId, data.lastViewedPlaylistId);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_HISTORY, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.HISTORY.UPDATE_PLAYLIST,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.DELETE:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history[\"delete\"](data);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_HISTORY, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.DELETE,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.DELETE_ALL:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history.deleteAll();\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_HISTORY, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.DELETE_ALL\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.PERSIST:\n          _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].history.persist();\n          return null;\n        default:\n          // eslint-disable-next-line no-throw-literal\n          throw 'invalid history db action';\n      }\n    } catch (err) {\n      if (typeof err === 'string') throw err;else throw err.toString();\n    }\n  });\n\n  // *********** //\n  // Profiles\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.DB_PROFILES, async (event, {\n    action,\n    data\n  }) => {\n    try {\n      switch (action) {\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.CREATE:\n          {\n            const newProfile = await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].profiles.create(data);\n            syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_PROFILES, event, {\n              event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.CREATE,\n              data: newProfile\n            });\n            return newProfile;\n          }\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.FIND:\n          return await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].profiles.find();\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.UPSERT:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].profiles.upsert(data);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_PROFILES, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.UPSERT,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.DELETE:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].profiles[\"delete\"](data);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_PROFILES, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.GENERAL.DELETE,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.PERSIST:\n          _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].profiles.persist();\n          return null;\n        default:\n          // eslint-disable-next-line no-throw-literal\n          throw 'invalid profile db action';\n      }\n    } catch (err) {\n      if (typeof err === 'string') throw err;else throw err.toString();\n    }\n  });\n\n  // *********** //\n  // Playlists\n  // ! NOTE: A lot of these actions are currently not used for anything\n  // As such, only the currently used actions have synchronization implemented\n  // The remaining should have it implemented only when playlists\n  // get fully implemented into the app\n  electron__WEBPACK_IMPORTED_MODULE_0__.ipcMain.handle(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.DB_PLAYLISTS, async (event, {\n    action,\n    data\n  }) => {\n    try {\n      switch (action) {\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.CREATE:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.create(data);\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.FIND:\n          return await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.find();\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.PLAYLISTS.UPSERT_VIDEO:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.upsertVideoByPlaylistName(data.playlistName, data.videoData);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_PLAYLISTS, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.PLAYLISTS.UPSERT_VIDEO,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.PLAYLISTS.UPSERT_VIDEO_IDS:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.upsertVideoIdsByPlaylistId(data._id, data.videoIds);\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.DELETE:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists[\"delete\"](data);\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.PLAYLISTS.DELETE_VIDEO_ID:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.deleteVideoIdByPlaylistName(data.playlistName, data.videoId);\n          syncOtherWindows(_constants__WEBPACK_IMPORTED_MODULE_3__.IpcChannels.SYNC_PLAYLISTS, event, {\n            event: _constants__WEBPACK_IMPORTED_MODULE_3__.SyncEvents.PLAYLISTS.DELETE_VIDEO,\n            data\n          });\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.PLAYLISTS.DELETE_VIDEO_IDS:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.deleteVideoIdsByPlaylistName(data.playlistName, data.videoIds);\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.PLAYLISTS.DELETE_ALL_VIDEOS:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.deleteAllVideosByPlaylistName(data);\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.DELETE_MULTIPLE:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.deleteMultiple(data);\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        case _constants__WEBPACK_IMPORTED_MODULE_3__.DBActions.GENERAL.DELETE_ALL:\n          await _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playlists.deleteAll();\n          // TODO: Syncing (implement only when it starts being used)\n          // syncOtherWindows(IpcChannels.SYNC_PLAYLISTS, event, { event: '_', data })\n          return null;\n        default:\n          // eslint-disable-next-line no-throw-literal\n          throw 'invalid playlist db action';\n      }\n    } catch (err) {\n      if (typeof err === 'string') throw err;else throw err.toString();\n    }\n  });\n\n  // *********** //\n\n  function syncOtherWindows(channel, event, payload) {\n    const otherWindows = electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow.getAllWindows().filter(window => {\n      return window.webContents.id !== event.sender.id;\n    });\n    for (const window of otherWindows) {\n      window.webContents.send(channel, payload);\n    }\n  }\n\n  // ************************************************* //\n\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.once('window-all-closed', () => {\n    // Clear cache and storage if it's the last window\n    electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.clearCache();\n    electron__WEBPACK_IMPORTED_MODULE_0__.session.defaultSession.clearStorageData({\n      storages: ['appcache', 'cookies', 'filesystem', 'indexdb', 'shadercache', 'websql', 'serviceworkers', 'cachestorage']\n    });\n    if (process.platform !== 'darwin') {\n      electron__WEBPACK_IMPORTED_MODULE_0__.app.quit();\n    }\n  });\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.on('activate', () => {\n    if (electron__WEBPACK_IMPORTED_MODULE_0__.BrowserWindow.getAllWindows().length === 0) {\n      createWindow();\n    }\n  });\n\n  /*\n   * Callback when processing a freetube:// link (macOS)\n   */\n  electron__WEBPACK_IMPORTED_MODULE_0__.app.on('open-url', (event, url) => {\n    event.preventDefault();\n    if (mainWindow && mainWindow.webContents) {\n      mainWindow.webContents.send('openUrl', baseUrl(url));\n    } else {\n      startupUrl = baseUrl(url);\n    }\n  });\n\n  /*\n   * Check if an argument was passed and send it over to the GUI (Linux / Windows).\n   * Remove freetube:// protocol if present\n   */\n  const url = getLinkUrl(process.argv);\n  if (url) {\n    startupUrl = url;\n  }\n  function baseUrl(arg) {\n    let newArg = arg.replace('freetube://', '')\n    // add support for authority free url\n    .replace('freetube:', '');\n\n    // fix for Qt URL, like `freetube://https//www.youtube.com/watch?v=...`\n    // For details see https://github.com/FreeTubeApp/FreeTube/pull/3119\n    if (newArg.startsWith('https') && newArg.charAt(5) !== ':') {\n      newArg = 'https:' + newArg.substring(5);\n    }\n    return newArg;\n  }\n  function getLinkUrl(argv) {\n    if (argv.length > 1) {\n      return baseUrl(argv[argv.length - 1]);\n    } else {\n      return null;\n    }\n  }\n\n  /*\n   * Auto Updater\n   *\n   * Uncomment the following code below and install `electron-updater` to\n   * support auto updating. Code Signing with a valid certificate is required.\n   * https://simulatedgreg.gitbooks.io/electron-vue/content/en/using-electron-builder.html#auto-updating\n   */\n\n  /*\n  import { autoUpdater } from 'electron-updater'\n  autoUpdater.on('update-downloaded', () => {\n    autoUpdater.quitAndInstall()\n  })\n   app.on('ready', () => {\n    if (process.env.NODE_ENV === 'production') autoUpdater.checkForUpdates()\n  })\n   */\n\n  function navigateTo(path, browserWindow) {\n    if (browserWindow == null) {\n      return;\n    }\n    browserWindow.webContents.send('change-view', {\n      route: path\n    });\n  }\n  async function setMenu() {\n    const sidenavSettings = _datastores_handlers_base__WEBPACK_IMPORTED_MODULE_4__[\"default\"].settings._findSidenavSettings();\n    const hideTrendingVideos = (await sidenavSettings.hideTrendingVideos)?.value;\n    const hidePopularVideos = (await sidenavSettings.hidePopularVideos)?.value;\n    const hidePlaylists = (await sidenavSettings.hidePlaylists)?.value;\n    const template = [{\n      label: 'File',\n      submenu: [{\n        label: 'New Window',\n        accelerator: 'CmdOrCtrl+N',\n        click: (_menuItem, _browserWindow, _event) => {\n          createWindow({\n            replaceMainWindow: false,\n            showWindowNow: true\n          });\n        },\n        type: 'normal'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Preferences',\n        accelerator: 'CmdOrCtrl+,',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/settings', browserWindow);\n        },\n        type: 'normal'\n      }, {\n        type: 'separator'\n      }, {\n        role: 'quit'\n      }]\n    }, {\n      label: 'Edit',\n      submenu: [{\n        role: 'cut'\n      }, {\n        role: 'copy',\n        accelerator: 'CmdOrCtrl+C',\n        selector: 'copy:'\n      }, {\n        role: 'paste',\n        accelerator: 'CmdOrCtrl+V',\n        selector: 'paste:'\n      }, {\n        role: 'pasteandmatchstyle'\n      }, {\n        role: 'delete'\n      }, {\n        role: 'selectall'\n      }]\n    }, {\n      label: 'View',\n      submenu: [{\n        role: 'reload'\n      }, {\n        role: 'forcereload',\n        accelerator: 'CmdOrCtrl+Shift+R'\n      }, {\n        role: 'toggledevtools'\n      }, {\n        role: 'toggledevtools',\n        accelerator: 'f12',\n        visible: false\n      }, {\n        label: 'Enter Inspect Element Mode',\n        accelerator: 'CmdOrCtrl+Shift+C',\n        click: (_, window) => {\n          if (window.webContents.isDevToolsOpened()) {\n            window.devToolsWebContents.executeJavaScript('DevToolsAPI.enterInspectElementMode()');\n          } else {\n            window.webContents.once('devtools-opened', () => {\n              window.devToolsWebContents.executeJavaScript('DevToolsAPI.enterInspectElementMode()');\n            });\n            window.webContents.openDevTools();\n          }\n        }\n      }, {\n        type: 'separator'\n      }, {\n        role: 'resetzoom'\n      }, {\n        role: 'resetzoom',\n        accelerator: 'CmdOrCtrl+num0',\n        visible: false\n      }, {\n        role: 'zoomin',\n        accelerator: 'CmdOrCtrl+Plus'\n      }, {\n        role: 'zoomin',\n        accelerator: 'CmdOrCtrl+=',\n        visible: false\n      }, {\n        role: 'zoomin',\n        accelerator: 'CmdOrCtrl+numadd',\n        visible: false\n      }, {\n        role: 'zoomout'\n      }, {\n        role: 'zoomout',\n        accelerator: 'CmdOrCtrl+numsub',\n        visible: false\n      }, {\n        type: 'separator'\n      }, {\n        role: 'togglefullscreen'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Back',\n        accelerator: 'Alt+Left',\n        click: (_menuItem, browserWindow, _event) => {\n          if (browserWindow == null) {\n            return;\n          }\n          browserWindow.webContents.send('history-back');\n        },\n        type: 'normal'\n      }, {\n        label: 'Forward',\n        accelerator: 'Alt+Right',\n        click: (_menuItem, browserWindow, _event) => {\n          if (browserWindow == null) {\n            return;\n          }\n          browserWindow.webContents.send('history-forward');\n        },\n        type: 'normal'\n      }]\n    }, {\n      label: 'Navigate',\n      submenu: [{\n        label: 'Subscriptions',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/subscriptions', browserWindow);\n        },\n        type: 'normal'\n      }, {\n        label: 'Channels',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/subscribedchannels', browserWindow);\n        },\n        type: 'normal'\n      }, !hideTrendingVideos && {\n        label: 'Trending',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/trending', browserWindow);\n        },\n        type: 'normal'\n      }, !hidePopularVideos && {\n        label: 'Most Popular',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/popular', browserWindow);\n        },\n        type: 'normal'\n      }, !hidePlaylists && {\n        label: 'Playlists',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/userplaylists', browserWindow);\n        },\n        type: 'normal'\n      }, {\n        label: 'History',\n        // MacOS: Command + Y\n        // Other OS: Ctrl + H\n        accelerator: process.platform === 'darwin' ? 'Cmd+Y' : 'Ctrl+H',\n        click: (_menuItem, browserWindow, _event) => {\n          navigateTo('/history', browserWindow);\n        },\n        type: 'normal'\n      }].filter(v => v !== false)\n    }, {\n      role: 'window',\n      submenu: [{\n        role: 'minimize'\n      }, {\n        role: 'close'\n      }]\n    }];\n    if (process.platform === 'darwin') {\n      template.unshift({\n        label: electron__WEBPACK_IMPORTED_MODULE_0__.app.getName(),\n        submenu: [{\n          role: 'about'\n        }, {\n          type: 'separator'\n        }, {\n          role: 'services'\n        }, {\n          type: 'separator'\n        }, {\n          role: 'hide'\n        }, {\n          role: 'hideothers'\n        }, {\n          role: 'unhide'\n        }, {\n          type: 'separator'\n        }, {\n          role: 'quit'\n        }]\n      });\n      template.push({\n        role: 'window'\n      }, {\n        role: 'help'\n      }, {\n        role: 'services'\n      });\n    }\n    const menu = electron__WEBPACK_IMPORTED_MODULE_0__.Menu.buildFromTemplate(template);\n    electron__WEBPACK_IMPORTED_MODULE_0__.Menu.setApplicationMenu(menu);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/index.js\n");

/***/ }),

/***/ "./node_modules/cli-truncate/index.js":
/*!********************************************!*\
  !*** ./node_modules/cli-truncate/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst sliceAnsi = __webpack_require__(/*! slice-ansi */ \"./node_modules/slice-ansi/index.js\");\nconst stringWidth = __webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\");\n\nfunction getIndexOfNearestSpace(string, index, shouldSearchRight) {\n\tif (string.charAt(index) === ' ') {\n\t\treturn index;\n\t}\n\n\tfor (let i = 1; i <= 3; i++) {\n\t\tif (shouldSearchRight) {\n\t\t\tif (string.charAt(index + i) === ' ') {\n\t\t\t\treturn index + i;\n\t\t\t}\n\t\t} else if (string.charAt(index - i) === ' ') {\n\t\t\treturn index - i;\n\t\t}\n\t}\n\n\treturn index;\n}\n\nmodule.exports = (text, columns, options) => {\n\toptions = {\n\t\tposition: 'end',\n\t\tpreferTruncationOnSpace: false,\n\t\t...options\n\t};\n\n\tconst {position, space, preferTruncationOnSpace} = options;\n\tlet ellipsis = '…';\n\tlet ellipsisWidth = 1;\n\n\tif (typeof text !== 'string') {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a string, got ${typeof text}`);\n\t}\n\n\tif (typeof columns !== 'number') {\n\t\tthrow new TypeError(`Expected \\`columns\\` to be a number, got ${typeof columns}`);\n\t}\n\n\tif (columns < 1) {\n\t\treturn '';\n\t}\n\n\tif (columns === 1) {\n\t\treturn ellipsis;\n\t}\n\n\tconst length = stringWidth(text);\n\n\tif (length <= columns) {\n\t\treturn text;\n\t}\n\n\tif (position === 'start') {\n\t\tif (preferTruncationOnSpace) {\n\t\t\tconst nearestSpace = getIndexOfNearestSpace(text, length - columns + 1, true);\n\t\t\treturn ellipsis + sliceAnsi(text, nearestSpace, length).trim();\n\t\t}\n\n\t\tif (space === true) {\n\t\t\tellipsis += ' ';\n\t\t\tellipsisWidth = 2;\n\t\t}\n\n\t\treturn ellipsis + sliceAnsi(text, length - columns + ellipsisWidth, length);\n\t}\n\n\tif (position === 'middle') {\n\t\tif (space === true) {\n\t\t\tellipsis = ' ' + ellipsis + ' ';\n\t\t\tellipsisWidth = 3;\n\t\t}\n\n\t\tconst half = Math.floor(columns / 2);\n\n\t\tif (preferTruncationOnSpace) {\n\t\t\tconst spaceNearFirstBreakPoint = getIndexOfNearestSpace(text, half);\n\t\t\tconst spaceNearSecondBreakPoint = getIndexOfNearestSpace(text, length - (columns - half) + 1, true);\n\t\t\treturn sliceAnsi(text, 0, spaceNearFirstBreakPoint) + ellipsis + sliceAnsi(text, spaceNearSecondBreakPoint, length).trim();\n\t\t}\n\n\t\treturn (\n\t\t\tsliceAnsi(text, 0, half) +\n\t\t\tellipsis +\n\t\t\tsliceAnsi(text, length - (columns - half) + ellipsisWidth, length)\n\t\t);\n\t}\n\n\tif (position === 'end') {\n\t\tif (preferTruncationOnSpace) {\n\t\t\tconst nearestSpace = getIndexOfNearestSpace(text, columns - 1);\n\t\t\treturn sliceAnsi(text, 0, nearestSpace) + ellipsis;\n\t\t}\n\n\t\tif (space === true) {\n\t\t\tellipsis = ' ' + ellipsis;\n\t\t\tellipsisWidth = 2;\n\t\t}\n\n\t\treturn sliceAnsi(text, 0, columns - ellipsisWidth) + ellipsis;\n\t}\n\n\tthrow new Error(`Expected \\`options.position\\` to be either \\`start\\`, \\`middle\\` or \\`end\\`, got ${position}`);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2xpLXRydW5jYXRlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvY2xpLXRydW5jYXRlL2luZGV4LmpzP2RiZDgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qgc2xpY2VBbnNpID0gcmVxdWlyZSgnc2xpY2UtYW5zaScpO1xuY29uc3Qgc3RyaW5nV2lkdGggPSByZXF1aXJlKCdzdHJpbmctd2lkdGgnKTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhPZk5lYXJlc3RTcGFjZShzdHJpbmcsIGluZGV4LCBzaG91bGRTZWFyY2hSaWdodCkge1xuXHRpZiAoc3RyaW5nLmNoYXJBdChpbmRleCkgPT09ICcgJykge1xuXHRcdHJldHVybiBpbmRleDtcblx0fVxuXG5cdGZvciAobGV0IGkgPSAxOyBpIDw9IDM7IGkrKykge1xuXHRcdGlmIChzaG91bGRTZWFyY2hSaWdodCkge1xuXHRcdFx0aWYgKHN0cmluZy5jaGFyQXQoaW5kZXggKyBpKSA9PT0gJyAnKSB7XG5cdFx0XHRcdHJldHVybiBpbmRleCArIGk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChzdHJpbmcuY2hhckF0KGluZGV4IC0gaSkgPT09ICcgJykge1xuXHRcdFx0cmV0dXJuIGluZGV4IC0gaTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gaW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKHRleHQsIGNvbHVtbnMsIG9wdGlvbnMpID0+IHtcblx0b3B0aW9ucyA9IHtcblx0XHRwb3NpdGlvbjogJ2VuZCcsXG5cdFx0cHJlZmVyVHJ1bmNhdGlvbk9uU3BhY2U6IGZhbHNlLFxuXHRcdC4uLm9wdGlvbnNcblx0fTtcblxuXHRjb25zdCB7cG9zaXRpb24sIHNwYWNlLCBwcmVmZXJUcnVuY2F0aW9uT25TcGFjZX0gPSBvcHRpb25zO1xuXHRsZXQgZWxsaXBzaXMgPSAn4oCmJztcblx0bGV0IGVsbGlwc2lzV2lkdGggPSAxO1xuXG5cdGlmICh0eXBlb2YgdGV4dCAhPT0gJ3N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBcXGBpbnB1dFxcYCB0byBiZSBhIHN0cmluZywgZ290ICR7dHlwZW9mIHRleHR9YCk7XG5cdH1cblxuXHRpZiAodHlwZW9mIGNvbHVtbnMgIT09ICdudW1iZXInKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgXFxgY29sdW1uc1xcYCB0byBiZSBhIG51bWJlciwgZ290ICR7dHlwZW9mIGNvbHVtbnN9YCk7XG5cdH1cblxuXHRpZiAoY29sdW1ucyA8IDEpIHtcblx0XHRyZXR1cm4gJyc7XG5cdH1cblxuXHRpZiAoY29sdW1ucyA9PT0gMSkge1xuXHRcdHJldHVybiBlbGxpcHNpcztcblx0fVxuXG5cdGNvbnN0IGxlbmd0aCA9IHN0cmluZ1dpZHRoKHRleHQpO1xuXG5cdGlmIChsZW5ndGggPD0gY29sdW1ucykge1xuXHRcdHJldHVybiB0ZXh0O1xuXHR9XG5cblx0aWYgKHBvc2l0aW9uID09PSAnc3RhcnQnKSB7XG5cdFx0aWYgKHByZWZlclRydW5jYXRpb25PblNwYWNlKSB7XG5cdFx0XHRjb25zdCBuZWFyZXN0U3BhY2UgPSBnZXRJbmRleE9mTmVhcmVzdFNwYWNlKHRleHQsIGxlbmd0aCAtIGNvbHVtbnMgKyAxLCB0cnVlKTtcblx0XHRcdHJldHVybiBlbGxpcHNpcyArIHNsaWNlQW5zaSh0ZXh0LCBuZWFyZXN0U3BhY2UsIGxlbmd0aCkudHJpbSgpO1xuXHRcdH1cblxuXHRcdGlmIChzcGFjZSA9PT0gdHJ1ZSkge1xuXHRcdFx0ZWxsaXBzaXMgKz0gJyAnO1xuXHRcdFx0ZWxsaXBzaXNXaWR0aCA9IDI7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVsbGlwc2lzICsgc2xpY2VBbnNpKHRleHQsIGxlbmd0aCAtIGNvbHVtbnMgKyBlbGxpcHNpc1dpZHRoLCBsZW5ndGgpO1xuXHR9XG5cblx0aWYgKHBvc2l0aW9uID09PSAnbWlkZGxlJykge1xuXHRcdGlmIChzcGFjZSA9PT0gdHJ1ZSkge1xuXHRcdFx0ZWxsaXBzaXMgPSAnICcgKyBlbGxpcHNpcyArICcgJztcblx0XHRcdGVsbGlwc2lzV2lkdGggPSAzO1xuXHRcdH1cblxuXHRcdGNvbnN0IGhhbGYgPSBNYXRoLmZsb29yKGNvbHVtbnMgLyAyKTtcblxuXHRcdGlmIChwcmVmZXJUcnVuY2F0aW9uT25TcGFjZSkge1xuXHRcdFx0Y29uc3Qgc3BhY2VOZWFyRmlyc3RCcmVha1BvaW50ID0gZ2V0SW5kZXhPZk5lYXJlc3RTcGFjZSh0ZXh0LCBoYWxmKTtcblx0XHRcdGNvbnN0IHNwYWNlTmVhclNlY29uZEJyZWFrUG9pbnQgPSBnZXRJbmRleE9mTmVhcmVzdFNwYWNlKHRleHQsIGxlbmd0aCAtIChjb2x1bW5zIC0gaGFsZikgKyAxLCB0cnVlKTtcblx0XHRcdHJldHVybiBzbGljZUFuc2kodGV4dCwgMCwgc3BhY2VOZWFyRmlyc3RCcmVha1BvaW50KSArIGVsbGlwc2lzICsgc2xpY2VBbnNpKHRleHQsIHNwYWNlTmVhclNlY29uZEJyZWFrUG9pbnQsIGxlbmd0aCkudHJpbSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiAoXG5cdFx0XHRzbGljZUFuc2kodGV4dCwgMCwgaGFsZikgK1xuXHRcdFx0ZWxsaXBzaXMgK1xuXHRcdFx0c2xpY2VBbnNpKHRleHQsIGxlbmd0aCAtIChjb2x1bW5zIC0gaGFsZikgKyBlbGxpcHNpc1dpZHRoLCBsZW5ndGgpXG5cdFx0KTtcblx0fVxuXG5cdGlmIChwb3NpdGlvbiA9PT0gJ2VuZCcpIHtcblx0XHRpZiAocHJlZmVyVHJ1bmNhdGlvbk9uU3BhY2UpIHtcblx0XHRcdGNvbnN0IG5lYXJlc3RTcGFjZSA9IGdldEluZGV4T2ZOZWFyZXN0U3BhY2UodGV4dCwgY29sdW1ucyAtIDEpO1xuXHRcdFx0cmV0dXJuIHNsaWNlQW5zaSh0ZXh0LCAwLCBuZWFyZXN0U3BhY2UpICsgZWxsaXBzaXM7XG5cdFx0fVxuXG5cdFx0aWYgKHNwYWNlID09PSB0cnVlKSB7XG5cdFx0XHRlbGxpcHNpcyA9ICcgJyArIGVsbGlwc2lzO1xuXHRcdFx0ZWxsaXBzaXNXaWR0aCA9IDI7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHNsaWNlQW5zaSh0ZXh0LCAwLCBjb2x1bW5zIC0gZWxsaXBzaXNXaWR0aCkgKyBlbGxpcHNpcztcblx0fVxuXG5cdHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgXFxgb3B0aW9ucy5wb3NpdGlvblxcYCB0byBiZSBlaXRoZXIgXFxgc3RhcnRcXGAsIFxcYG1pZGRsZVxcYCBvciBcXGBlbmRcXGAsIGdvdCAke3Bvc2l0aW9ufWApO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cli-truncate/index.js\n");

/***/ }),

/***/ "./node_modules/electron-context-menu/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/electron-context-menu/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst electron = __webpack_require__(/*! electron */ \"electron\");\nconst cliTruncate = __webpack_require__(/*! cli-truncate */ \"./node_modules/cli-truncate/index.js\");\nconst {download} = __webpack_require__(/*! electron-dl */ \"./node_modules/electron-dl/index.js\");\nconst isDev = __webpack_require__(/*! electron-is-dev */ \"./node_modules/electron-is-dev/index.js\");\n\nconst webContents = win => win.webContents || (win.id && win);\n\nconst decorateMenuItem = menuItem => {\n\treturn (options = {}) => {\n\t\tif (options.transform && !options.click) {\n\t\t\tmenuItem.transform = options.transform;\n\t\t}\n\n\t\treturn menuItem;\n\t};\n};\n\nconst removeUnusedMenuItems = menuTemplate => {\n\tlet notDeletedPreviousElement;\n\n\treturn menuTemplate\n\t\t.filter(menuItem => menuItem !== undefined && menuItem !== false && menuItem.visible !== false && menuItem.visible !== '')\n\t\t.filter((menuItem, index, array) => {\n\t\t\tconst toDelete = menuItem.type === 'separator' && (!notDeletedPreviousElement || index === array.length - 1 || array[index + 1].type === 'separator');\n\t\t\tnotDeletedPreviousElement = toDelete ? notDeletedPreviousElement : menuItem;\n\t\t\treturn !toDelete;\n\t\t});\n};\n\nconst create = (win, options) => {\n\tconst handleContextMenu = (event, props) => {\n\t\tif (typeof options.shouldShowMenu === 'function' && options.shouldShowMenu(event, props) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {editFlags} = props;\n\t\tconst hasText = props.selectionText.length > 0;\n\t\tconst isLink = Boolean(props.linkURL);\n\t\tconst can = type => editFlags[`can${type}`] && hasText;\n\n\t\tconst defaultActions = {\n\t\t\tseparator: () => ({type: 'separator'}),\n\t\t\tlearnSpelling: decorateMenuItem({\n\t\t\t\tid: 'learnSpelling',\n\t\t\t\tlabel: '&Learn Spelling',\n\t\t\t\tvisible: Boolean(props.isEditable && hasText && props.misspelledWord),\n\t\t\t\tclick() {\n\t\t\t\t\tconst target = webContents(win);\n\t\t\t\t\ttarget.session.addWordToSpellCheckerDictionary(props.misspelledWord);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tlookUpSelection: decorateMenuItem({\n\t\t\t\tid: 'lookUpSelection',\n\t\t\t\tlabel: 'Look Up “{selection}”',\n\t\t\t\tvisible: process.platform === 'darwin' && hasText && !isLink,\n\t\t\t\tclick() {\n\t\t\t\t\tif (process.platform === 'darwin') {\n\t\t\t\t\t\twebContents(win).showDefinitionForSelection();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tsearchWithGoogle: decorateMenuItem({\n\t\t\t\tid: 'searchWithGoogle',\n\t\t\t\tlabel: '&Search with Google',\n\t\t\t\tvisible: hasText,\n\t\t\t\tclick() {\n\t\t\t\t\tconst url = new URL('https://www.google.com/search');\n\t\t\t\t\turl.searchParams.set('q', props.selectionText);\n\t\t\t\t\telectron.shell.openExternal(url.toString());\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcut: decorateMenuItem({\n\t\t\t\tid: 'cut',\n\t\t\t\tlabel: 'Cu&t',\n\t\t\t\tenabled: can('Cut'),\n\t\t\t\tvisible: props.isEditable,\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tconst target = webContents(win);\n\n\t\t\t\t\tif (!menuItem.transform && target) {\n\t\t\t\t\t\ttarget.cut();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprops.selectionText = menuItem.transform ? menuItem.transform(props.selectionText) : props.selectionText;\n\t\t\t\t\t\telectron.clipboard.writeText(props.selectionText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcopy: decorateMenuItem({\n\t\t\t\tid: 'copy',\n\t\t\t\tlabel: '&Copy',\n\t\t\t\tenabled: can('Copy'),\n\t\t\t\tvisible: props.isEditable || hasText,\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tconst target = webContents(win);\n\n\t\t\t\t\tif (!menuItem.transform && target) {\n\t\t\t\t\t\ttarget.copy();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprops.selectionText = menuItem.transform ? menuItem.transform(props.selectionText) : props.selectionText;\n\t\t\t\t\t\telectron.clipboard.writeText(props.selectionText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tpaste: decorateMenuItem({\n\t\t\t\tid: 'paste',\n\t\t\t\tlabel: '&Paste',\n\t\t\t\tenabled: editFlags.canPaste,\n\t\t\t\tvisible: props.isEditable,\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tconst target = webContents(win);\n\n\t\t\t\t\tif (menuItem.transform) {\n\t\t\t\t\t\tlet clipboardContent = electron.clipboard.readText(props.selectionText);\n\t\t\t\t\t\tclipboardContent = menuItem.transform ? menuItem.transform(clipboardContent) : clipboardContent;\n\t\t\t\t\t\ttarget.insertText(clipboardContent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.paste();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tselectAll: decorateMenuItem({\n\t\t\t\tid: 'selectAll',\n\t\t\t\tlabel: 'Select &All',\n\t\t\t\tclick() {\n\t\t\t\t\twebContents(win).selectAll();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tsaveImage: decorateMenuItem({\n\t\t\t\tid: 'saveImage',\n\t\t\t\tlabel: 'Save I&mage',\n\t\t\t\tvisible: props.mediaType === 'image',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.srcURL = menuItem.transform ? menuItem.transform(props.srcURL) : props.srcURL;\n\t\t\t\t\tdownload(win, props.srcURL);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tsaveImageAs: decorateMenuItem({\n\t\t\t\tid: 'saveImageAs',\n\t\t\t\tlabel: 'Sa&ve Image As…',\n\t\t\t\tvisible: props.mediaType === 'image',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.srcURL = menuItem.transform ? menuItem.transform(props.srcURL) : props.srcURL;\n\t\t\t\t\tdownload(win, props.srcURL, {saveAs: true});\n\t\t\t\t}\n\t\t\t}),\n\t\t\tsaveVideo: decorateMenuItem({\n\t\t\t\tid: 'saveVideo',\n\t\t\t\tlabel: 'Save Vide&o',\n\t\t\t\tvisible: props.mediaType === 'video',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.srcURL = menuItem.transform ? menuItem.transform(props.srcURL) : props.srcURL;\n\t\t\t\t\tdownload(win, props.srcURL);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tsaveVideoAs: decorateMenuItem({\n\t\t\t\tid: 'saveVideoAs',\n\t\t\t\tlabel: 'Save Video& As…',\n\t\t\t\tvisible: props.mediaType === 'video',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.srcURL = menuItem.transform ? menuItem.transform(props.srcURL) : props.srcURL;\n\t\t\t\t\tdownload(win, props.srcURL, {saveAs: true});\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcopyLink: decorateMenuItem({\n\t\t\t\tid: 'copyLink',\n\t\t\t\tlabel: 'Copy Lin&k',\n\t\t\t\tvisible: props.linkURL.length > 0 && props.mediaType === 'none',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.linkURL = menuItem.transform ? menuItem.transform(props.linkURL) : props.linkURL;\n\n\t\t\t\t\telectron.clipboard.write({\n\t\t\t\t\t\tbookmark: props.linkText,\n\t\t\t\t\t\ttext: props.linkURL\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t\tsaveLinkAs: decorateMenuItem({\n\t\t\t\tid: 'saveLinkAs',\n\t\t\t\tlabel: 'Save Link As…',\n\t\t\t\tvisible: props.linkURL.length > 0 && props.mediaType === 'none',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.linkURL = menuItem.transform ? menuItem.transform(props.linkURL) : props.linkURL;\n\t\t\t\t\tdownload(win, props.linkURL, {saveAs: true});\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcopyImage: decorateMenuItem({\n\t\t\t\tid: 'copyImage',\n\t\t\t\tlabel: 'Cop&y Image',\n\t\t\t\tvisible: props.mediaType === 'image',\n\t\t\t\tclick() {\n\t\t\t\t\twebContents(win).copyImageAt(props.x, props.y);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcopyImageAddress: decorateMenuItem({\n\t\t\t\tid: 'copyImageAddress',\n\t\t\t\tlabel: 'C&opy Image Address',\n\t\t\t\tvisible: props.mediaType === 'image',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.srcURL = menuItem.transform ? menuItem.transform(props.srcURL) : props.srcURL;\n\n\t\t\t\t\telectron.clipboard.write({\n\t\t\t\t\t\tbookmark: props.srcURL,\n\t\t\t\t\t\ttext: props.srcURL\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t\tcopyVideoAddress: decorateMenuItem({\n\t\t\t\tid: 'copyVideoAddress',\n\t\t\t\tlabel: 'Copy Video Ad&dress',\n\t\t\t\tvisible: props.mediaType === 'video',\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tprops.srcURL = menuItem.transform ? menuItem.transform(props.srcURL) : props.srcURL;\n\n\t\t\t\t\telectron.clipboard.write({\n\t\t\t\t\t\tbookmark: props.srcURL,\n\t\t\t\t\t\ttext: props.srcURL\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t\tinspect: () => ({\n\t\t\t\tid: 'inspect',\n\t\t\t\tlabel: 'I&nspect Element',\n\t\t\t\tclick() {\n\t\t\t\t\twebContents(win).inspectElement(props.x, props.y);\n\n\t\t\t\t\tif (webContents(win).isDevToolsOpened()) {\n\t\t\t\t\t\twebContents(win).devToolsWebContents.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tservices: () => ({\n\t\t\t\tid: 'services',\n\t\t\t\tlabel: 'Services',\n\t\t\t\trole: 'services',\n\t\t\t\tvisible: process.platform === 'darwin' && (props.isEditable || hasText)\n\t\t\t})\n\t\t};\n\n\t\tconst shouldShowInspectElement = typeof options.showInspectElement === 'boolean' ? options.showInspectElement : isDev;\n\t\tconst shouldShowSelectAll = options.showSelectAll || (options.showSelectAll !== false && process.platform !== 'darwin');\n\n\t\tfunction word(suggestion) {\n\t\t\treturn {\n\t\t\t\tid: 'dictionarySuggestions',\n\t\t\t\tlabel: suggestion,\n\t\t\t\tvisible: Boolean(props.isEditable && hasText && props.misspelledWord),\n\t\t\t\tclick(menuItem) {\n\t\t\t\t\tconst target = webContents(win);\n\t\t\t\t\ttarget.replaceMisspelling(menuItem.label);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tlet dictionarySuggestions = [];\n\t\tif (hasText && props.misspelledWord && props.dictionarySuggestions.length > 0) {\n\t\t\tdictionarySuggestions = props.dictionarySuggestions.map(suggestion => word(suggestion));\n\t\t} else {\n\t\t\tdictionarySuggestions.push(\n\t\t\t\t{\n\t\t\t\t\tid: 'dictionarySuggestions',\n\t\t\t\t\tlabel: 'No Guesses Found',\n\t\t\t\t\tvisible: Boolean(hasText && props.misspelledWord),\n\t\t\t\t\tenabled: false\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet menuTemplate = [\n\t\t\tdictionarySuggestions.length > 0 && defaultActions.separator(),\n\t\t\t...dictionarySuggestions,\n\t\t\tdefaultActions.separator(),\n\t\t\toptions.showLearnSpelling !== false && defaultActions.learnSpelling(),\n\t\t\tdefaultActions.separator(),\n\t\t\toptions.showLookUpSelection !== false && defaultActions.lookUpSelection(),\n\t\t\tdefaultActions.separator(),\n\t\t\toptions.showSearchWithGoogle !== false && defaultActions.searchWithGoogle(),\n\t\t\tdefaultActions.separator(),\n\t\t\tdefaultActions.cut(),\n\t\t\tdefaultActions.copy(),\n\t\t\tdefaultActions.paste(),\n\t\t\tshouldShowSelectAll && defaultActions.selectAll(),\n\t\t\tdefaultActions.separator(),\n\t\t\toptions.showSaveImage && defaultActions.saveImage(),\n\t\t\toptions.showSaveImageAs && defaultActions.saveImageAs(),\n\t\t\toptions.showCopyImage !== false && defaultActions.copyImage(),\n\t\t\toptions.showCopyImageAddress && defaultActions.copyImageAddress(),\n\t\t\toptions.showSaveVideo && defaultActions.saveVideo(),\n\t\t\toptions.showSaveVideoAs && defaultActions.saveVideoAs(),\n\t\t\toptions.showCopyVideoAddress && defaultActions.copyVideoAddress(),\n\t\t\tdefaultActions.separator(),\n\t\t\toptions.showCopyLink !== false && defaultActions.copyLink(),\n\t\t\toptions.showSaveLinkAs && defaultActions.saveLinkAs(),\n\t\t\tdefaultActions.separator(),\n\t\t\tshouldShowInspectElement && defaultActions.inspect(),\n\t\t\toptions.showServices && defaultActions.services(),\n\t\t\tdefaultActions.separator()\n\t\t];\n\n\t\tif (options.menu) {\n\t\t\tmenuTemplate = options.menu(defaultActions, props, win, dictionarySuggestions, event);\n\t\t}\n\n\t\tif (options.prepend) {\n\t\t\tconst result = options.prepend(defaultActions, props, win, event);\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tmenuTemplate.unshift(...result);\n\t\t\t}\n\t\t}\n\n\t\tif (options.append) {\n\t\t\tconst result = options.append(defaultActions, props, win, event);\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tmenuTemplate.push(...result);\n\t\t\t}\n\t\t}\n\n\t\t// Filter out leading/trailing separators\n\t\t// TODO: https://github.com/electron/electron/issues/5869\n\t\tmenuTemplate = removeUnusedMenuItems(menuTemplate);\n\n\t\tfor (const menuItem of menuTemplate) {\n\t\t\t// Apply custom labels for default menu items\n\t\t\tif (options.labels && options.labels[menuItem.id]) {\n\t\t\t\tmenuItem.label = options.labels[menuItem.id];\n\t\t\t}\n\n\t\t\t// Replace placeholders in menu item labels\n\t\t\tif (typeof menuItem.label === 'string' && menuItem.label.includes('{selection}')) {\n\t\t\t\tconst selectionString = typeof props.selectionText === 'string' ? props.selectionText.trim() : '';\n\t\t\t\tmenuItem.label = menuItem.label.replace('{selection}', cliTruncate(selectionString, 25).replace(/&/g, '&&'));\n\t\t\t}\n\t\t}\n\n\t\tif (menuTemplate.length > 0) {\n\t\t\tconst menu = electron.Menu.buildFromTemplate(menuTemplate);\n\n\t\t\tif (typeof options.onShow === 'function') {\n\t\t\t\tmenu.on('menu-will-show', options.onShow);\n\t\t\t}\n\n\t\t\tif (typeof options.onClose === 'function') {\n\t\t\t\tmenu.on('menu-will-close', options.onClose);\n\t\t\t}\n\n\t\t\tmenu.popup(win);\n\t\t}\n\t};\n\n\twebContents(win).on('context-menu', handleContextMenu);\n\n\treturn () => {\n\t\tif (win.isDestroyed()) {\n\t\t\treturn;\n\t\t}\n\n\t\twebContents(win).removeListener('context-menu', handleContextMenu);\n\t};\n};\n\nmodule.exports = (options = {}) => {\n\tif (process.type === 'renderer') {\n\t\tthrow new Error('Cannot use electron-context-menu in the renderer process!');\n\t}\n\n\tlet isDisposed = false;\n\tconst disposables = [];\n\n\tconst init = win => {\n\t\tif (isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposeMenu = create(win, options);\n\n\t\tdisposables.push(disposeMenu);\n\t\tconst removeDisposable = () => {\n\t\t\tconst index = disposables.indexOf(disposeMenu);\n\t\t\tif (index !== -1) {\n\t\t\t\tdisposables.splice(index, 1);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof win.once !== 'undefined') { // Support for BrowserView\n\t\t\twin.once('closed', removeDisposable);\n\t\t}\n\n\t\tdisposables.push(() => {\n\t\t\twin.off('closed', removeDisposable);\n\t\t});\n\t};\n\n\tconst dispose = () => {\n\t\tfor (const dispose of disposables) {\n\t\t\tdispose();\n\t\t}\n\n\t\tdisposables.length = 0;\n\t\tisDisposed = true;\n\t};\n\n\tif (options.window) {\n\t\tconst win = options.window;\n\n\t\t// When window is a webview that has not yet finished loading webContents is not available\n\t\tif (webContents(win) === undefined) {\n\t\t\tconst onDomReady = () => {\n\t\t\t\tinit(win);\n\t\t\t};\n\n\t\t\tconst listenerFunction = win.addEventListener || win.addListener;\n\t\t\tlistenerFunction('dom-ready', onDomReady, {once: true});\n\n\t\t\tdisposables.push(() => {\n\t\t\t\twin.removeEventListener('dom-ready', onDomReady, {once: true});\n\t\t\t});\n\n\t\t\treturn dispose;\n\t\t}\n\n\t\tinit(win);\n\n\t\treturn dispose;\n\t}\n\n\tfor (const win of electron.BrowserWindow.getAllWindows()) {\n\t\tinit(win);\n\t}\n\n\tconst onWindowCreated = (event, win) => {\n\t\tinit(win);\n\t};\n\n\telectron.app.on('browser-window-created', onWindowCreated);\n\tdisposables.push(() => {\n\t\telectron.app.removeListener('browser-window-created', onWindowCreated);\n\t});\n\n\treturn dispose;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/electron-context-menu/index.js\n");

/***/ }),

/***/ "./node_modules/electron-dl/index.js":
/*!*******************************************!*\
  !*** ./node_modules/electron-dl/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst path = __webpack_require__(/*! path */ \"path\");\nconst {app, BrowserWindow, shell, dialog} = __webpack_require__(/*! electron */ \"electron\");\nconst unusedFilename = __webpack_require__(/*! unused-filename */ \"./node_modules/unused-filename/index.js\");\nconst pupa = __webpack_require__(/*! pupa */ \"./node_modules/pupa/index.js\");\nconst extName = __webpack_require__(/*! ext-name */ \"./node_modules/ext-name/index.js\");\n\nconst getFilenameFromMime = (name, mime) => {\n\tconst extensions = extName.mime(mime);\n\n\tif (extensions.length !== 1) {\n\t\treturn name;\n\t}\n\n\treturn `${name}.${extensions[0].ext}`;\n};\n\nconst majorElectronVersion = () => {\n\tconst version = process.versions.electron.split('.');\n\treturn Number.parseInt(version[0], 10);\n};\n\nconst getWindowFromBrowserView = webContents => {\n\tfor (const currentWindow of BrowserWindow.getAllWindows()) {\n\t\tfor (const currentBrowserView of currentWindow.getBrowserViews()) {\n\t\t\tif (currentBrowserView.webContents.id === webContents.id) {\n\t\t\t\treturn currentWindow;\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst getWindowFromWebContents = webContents => {\n\tlet window_;\n\tconst webContentsType = webContents.getType();\n\tswitch (webContentsType) {\n\t\tcase 'webview':\n\t\t\twindow_ = BrowserWindow.fromWebContents(webContents.hostWebContents);\n\t\t\tbreak;\n\t\tcase 'browserView':\n\t\t\twindow_ = getWindowFromBrowserView(webContents);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twindow_ = BrowserWindow.fromWebContents(webContents);\n\t\t\tbreak;\n\t}\n\n\treturn window_;\n};\n\nfunction registerListener(session, options, callback = () => {}) {\n\tconst downloadItems = new Set();\n\tlet receivedBytes = 0;\n\tlet completedBytes = 0;\n\tlet totalBytes = 0;\n\tconst activeDownloadItems = () => downloadItems.size;\n\tconst progressDownloadItems = () => receivedBytes / totalBytes;\n\n\toptions = {\n\t\tshowBadge: true,\n\t\t...options\n\t};\n\n\tconst listener = (event, item, webContents) => {\n\t\tdownloadItems.add(item);\n\t\ttotalBytes += item.getTotalBytes();\n\n\t\tconst window_ = majorElectronVersion() >= 12 ? BrowserWindow.fromWebContents(webContents) : getWindowFromWebContents(webContents);\n\n\t\tif (options.directory && !path.isAbsolute(options.directory)) {\n\t\t\tthrow new Error('The `directory` option must be an absolute path');\n\t\t}\n\n\t\tconst directory = options.directory || app.getPath('downloads');\n\n\t\tlet filePath;\n\t\tif (options.filename) {\n\t\t\tfilePath = path.join(directory, options.filename);\n\t\t} else {\n\t\t\tconst filename = item.getFilename();\n\t\t\tconst name = path.extname(filename) ? filename : getFilenameFromMime(filename, item.getMimeType());\n\n\t\t\tfilePath = options.overwrite ? path.join(directory, name) : unusedFilename.sync(path.join(directory, name));\n\t\t}\n\n\t\tconst errorMessage = options.errorMessage || 'The download of {filename} was interrupted';\n\n\t\tif (options.saveAs) {\n\t\t\titem.setSaveDialogOptions({defaultPath: filePath});\n\t\t} else {\n\t\t\titem.setSavePath(filePath);\n\t\t}\n\n\t\tif (typeof options.onStarted === 'function') {\n\t\t\toptions.onStarted(item);\n\t\t}\n\n\t\titem.on('updated', () => {\n\t\t\treceivedBytes = completedBytes;\n\t\t\tfor (const item of downloadItems) {\n\t\t\t\treceivedBytes += item.getReceivedBytes();\n\t\t\t}\n\n\t\t\tif (options.showBadge && ['darwin', 'linux'].includes(process.platform)) {\n\t\t\t\tapp.badgeCount = activeDownloadItems();\n\t\t\t}\n\n\t\t\tif (!window_.isDestroyed()) {\n\t\t\t\twindow_.setProgressBar(progressDownloadItems());\n\t\t\t}\n\n\t\t\tif (typeof options.onProgress === 'function') {\n\t\t\t\tconst itemTransferredBytes = item.getReceivedBytes();\n\t\t\t\tconst itemTotalBytes = item.getTotalBytes();\n\n\t\t\t\toptions.onProgress({\n\t\t\t\t\tpercent: itemTotalBytes ? itemTransferredBytes / itemTotalBytes : 0,\n\t\t\t\t\ttransferredBytes: itemTransferredBytes,\n\t\t\t\t\ttotalBytes: itemTotalBytes\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (typeof options.onTotalProgress === 'function') {\n\t\t\t\toptions.onTotalProgress({\n\t\t\t\t\tpercent: progressDownloadItems(),\n\t\t\t\t\ttransferredBytes: receivedBytes,\n\t\t\t\t\ttotalBytes\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\titem.on('done', (event, state) => {\n\t\t\tcompletedBytes += item.getTotalBytes();\n\t\t\tdownloadItems.delete(item);\n\n\t\t\tif (options.showBadge && ['darwin', 'linux'].includes(process.platform)) {\n\t\t\t\tapp.badgeCount = activeDownloadItems();\n\t\t\t}\n\n\t\t\tif (!window_.isDestroyed() && !activeDownloadItems()) {\n\t\t\t\twindow_.setProgressBar(-1);\n\t\t\t\treceivedBytes = 0;\n\t\t\t\tcompletedBytes = 0;\n\t\t\t\ttotalBytes = 0;\n\t\t\t}\n\n\t\t\tif (options.unregisterWhenDone) {\n\t\t\t\tsession.removeListener('will-download', listener);\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line unicorn/prefer-switch\n\t\t\tif (state === 'cancelled') {\n\t\t\t\tif (typeof options.onCancel === 'function') {\n\t\t\t\t\toptions.onCancel(item);\n\t\t\t\t}\n\t\t\t} else if (state === 'interrupted') {\n\t\t\t\tconst message = pupa(errorMessage, {filename: path.basename(filePath)});\n\t\t\t\tcallback(new Error(message));\n\t\t\t} else if (state === 'completed') {\n\t\t\t\tconst savePath = item.getSavePath();\n\n\t\t\t\tif (process.platform === 'darwin') {\n\t\t\t\t\tapp.dock.downloadFinished(savePath);\n\t\t\t\t}\n\n\t\t\t\tif (options.openFolderWhenDone) {\n\t\t\t\t\tshell.showItemInFolder(savePath);\n\t\t\t\t}\n\n\t\t\t\tif (typeof options.onCompleted === 'function') {\n\t\t\t\t\toptions.onCompleted({\n\t\t\t\t\t\tfileName: item.getFilename(),\n\t\t\t\t\t\tpath: savePath,\n\t\t\t\t\t\tfileSize: item.getReceivedBytes(),\n\t\t\t\t\t\tmimeType: item.getMimeType(),\n\t\t\t\t\t\turl: item.getURL()\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcallback(null, item);\n\t\t\t}\n\t\t});\n\t};\n\n\tsession.on('will-download', listener);\n}\n\nmodule.exports = (options = {}) => {\n\tapp.on('session-created', session => {\n\t\tregisterListener(session, options, (error, _) => {\n\t\t\tif (error) {\n\t\t\t\tconst errorTitle = options.errorTitle || 'Download Error';\n\t\t\t\tdialog.showErrorBox(errorTitle, error.message);\n\t\t\t}\n\t\t});\n\t});\n};\n\nmodule.exports.download = (window_, url, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\t...options,\n\t\tunregisterWhenDone: true\n\t};\n\n\tregisterListener(window_.webContents.session, options, (error, item) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n\n\twindow_.webContents.downloadURL(url);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/electron-dl/index.js\n");

/***/ }),

/***/ "./node_modules/electron-is-dev/index.js":
/*!***********************************************!*\
  !*** ./node_modules/electron-is-dev/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst electron = __webpack_require__(/*! electron */ \"electron\");\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = Number.parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !electron.app.isPackaged;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZWxlY3Ryb24taXMtZGV2L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9lbGVjdHJvbi1pcy1kZXYvaW5kZXguanM/NzNkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBlbGVjdHJvbiA9IHJlcXVpcmUoJ2VsZWN0cm9uJyk7XG5cbmlmICh0eXBlb2YgZWxlY3Ryb24gPT09ICdzdHJpbmcnKSB7XG5cdHRocm93IG5ldyBUeXBlRXJyb3IoJ05vdCBydW5uaW5nIGluIGFuIEVsZWN0cm9uIGVudmlyb25tZW50IScpO1xufVxuXG5jb25zdCBpc0VudlNldCA9ICdFTEVDVFJPTl9JU19ERVYnIGluIHByb2Nlc3MuZW52O1xuY29uc3QgZ2V0RnJvbUVudiA9IE51bWJlci5wYXJzZUludChwcm9jZXNzLmVudi5FTEVDVFJPTl9JU19ERVYsIDEwKSA9PT0gMTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0VudlNldCA/IGdldEZyb21FbnYgOiAhZWxlY3Ryb24uYXBwLmlzUGFja2FnZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/electron-is-dev/index.js\n");

/***/ }),

/***/ "./node_modules/escape-goat/index.js":
/*!*******************************************!*\
  !*** ./node_modules/escape-goat/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.htmlEscape = string => string\n\t.replace(/&/g, '&amp;')\n\t.replace(/\"/g, '&quot;')\n\t.replace(/'/g, '&#39;')\n\t.replace(/</g, '&lt;')\n\t.replace(/>/g, '&gt;');\n\nexports.htmlUnescape = htmlString => htmlString\n\t.replace(/&gt;/g, '>')\n\t.replace(/&lt;/g, '<')\n\t.replace(/&#0?39;/g, '\\'')\n\t.replace(/&quot;/g, '\"')\n\t.replace(/&amp;/g, '&');\n\nexports.htmlEscapeTag = (strings, ...values) => {\n\tlet output = strings[0];\n\tfor (let i = 0; i < values.length; i++) {\n\t\toutput = output + exports.htmlEscape(String(values[i])) + strings[i + 1];\n\t}\n\n\treturn output;\n};\n\nexports.htmlUnescapeTag = (strings, ...values) => {\n\tlet output = strings[0];\n\tfor (let i = 0; i < values.length; i++) {\n\t\toutput = output + exports.htmlUnescape(String(values[i])) + strings[i + 1];\n\t}\n\n\treturn output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXNjYXBlLWdvYXQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvZXNjYXBlLWdvYXQvaW5kZXguanM/MjFlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuaHRtbEVzY2FwZSA9IHN0cmluZyA9PiBzdHJpbmdcblx0LnJlcGxhY2UoLyYvZywgJyZhbXA7Jylcblx0LnJlcGxhY2UoL1wiL2csICcmcXVvdDsnKVxuXHQucmVwbGFjZSgvJy9nLCAnJiMzOTsnKVxuXHQucmVwbGFjZSgvPC9nLCAnJmx0OycpXG5cdC5yZXBsYWNlKC8+L2csICcmZ3Q7Jyk7XG5cbmV4cG9ydHMuaHRtbFVuZXNjYXBlID0gaHRtbFN0cmluZyA9PiBodG1sU3RyaW5nXG5cdC5yZXBsYWNlKC8mZ3Q7L2csICc+Jylcblx0LnJlcGxhY2UoLyZsdDsvZywgJzwnKVxuXHQucmVwbGFjZSgvJiMwPzM5Oy9nLCAnXFwnJylcblx0LnJlcGxhY2UoLyZxdW90Oy9nLCAnXCInKVxuXHQucmVwbGFjZSgvJmFtcDsvZywgJyYnKTtcblxuZXhwb3J0cy5odG1sRXNjYXBlVGFnID0gKHN0cmluZ3MsIC4uLnZhbHVlcykgPT4ge1xuXHRsZXQgb3V0cHV0ID0gc3RyaW5nc1swXTtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpKyspIHtcblx0XHRvdXRwdXQgPSBvdXRwdXQgKyBleHBvcnRzLmh0bWxFc2NhcGUoU3RyaW5nKHZhbHVlc1tpXSkpICsgc3RyaW5nc1tpICsgMV07XG5cdH1cblxuXHRyZXR1cm4gb3V0cHV0O1xufTtcblxuZXhwb3J0cy5odG1sVW5lc2NhcGVUYWcgPSAoc3RyaW5ncywgLi4udmFsdWVzKSA9PiB7XG5cdGxldCBvdXRwdXQgPSBzdHJpbmdzWzBdO1xuXHRmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGg7IGkrKykge1xuXHRcdG91dHB1dCA9IG91dHB1dCArIGV4cG9ydHMuaHRtbFVuZXNjYXBlKFN0cmluZyh2YWx1ZXNbaV0pKSArIHN0cmluZ3NbaSArIDFdO1xuXHR9XG5cblx0cmV0dXJuIG91dHB1dDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/escape-goat/index.js\n");

/***/ }),

/***/ "./node_modules/ext-list/index.js":
/*!****************************************!*\
  !*** ./node_modules/ext-list/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar mimeDb = __webpack_require__(/*! mime-db */ \"./node_modules/mime-db/index.js\");\n\nmodule.exports = function () {\n\tvar ret = {};\n\n\tObject.keys(mimeDb).forEach(function (x) {\n\t\tvar val = mimeDb[x];\n\n\t\tif (val.extensions && val.extensions.length > 0) {\n\t\t\tval.extensions.forEach(function (y) {\n\t\t\t\tret[y] = x;\n\t\t\t});\n\t\t}\n\t});\n\n\treturn ret;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXh0LWxpc3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvZXh0LWxpc3QvaW5kZXguanM/ZTViOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgbWltZURiID0gcmVxdWlyZSgnbWltZS1kYicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblx0dmFyIHJldCA9IHt9O1xuXG5cdE9iamVjdC5rZXlzKG1pbWVEYikuZm9yRWFjaChmdW5jdGlvbiAoeCkge1xuXHRcdHZhciB2YWwgPSBtaW1lRGJbeF07XG5cblx0XHRpZiAodmFsLmV4dGVuc2lvbnMgJiYgdmFsLmV4dGVuc2lvbnMubGVuZ3RoID4gMCkge1xuXHRcdFx0dmFsLmV4dGVuc2lvbnMuZm9yRWFjaChmdW5jdGlvbiAoeSkge1xuXHRcdFx0XHRyZXRbeV0gPSB4O1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9KTtcblxuXHRyZXR1cm4gcmV0O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ext-list/index.js\n");

/***/ }),

/***/ "./node_modules/ext-name/index.js":
/*!****************************************!*\
  !*** ./node_modules/ext-name/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst extList = __webpack_require__(/*! ext-list */ \"./node_modules/ext-list/index.js\");\nconst sortKeysLength = __webpack_require__(/*! sort-keys-length */ \"./node_modules/sort-keys-length/index.js\");\n\nmodule.exports = str => {\n\tconst obj = sortKeysLength.desc(extList());\n\tconst exts = Object.keys(obj).filter(x => str.endsWith(x));\n\n\tif (exts.length === 0) {\n\t\treturn [];\n\t}\n\n\treturn exts.map(x => ({\n\t\text: x,\n\t\tmime: obj[x]\n\t}));\n};\n\nmodule.exports.mime = str => {\n\tconst obj = sortKeysLength.desc(extList());\n\tconst exts = Object.keys(obj).filter(x => obj[x] === str);\n\n\tif (exts.length === 0) {\n\t\treturn [];\n\t}\n\n\treturn exts.map(x => ({\n\t\text: x,\n\t\tmime: obj[x]\n\t}));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXh0LW5hbWUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9leHQtbmFtZS9pbmRleC5qcz8wZjg3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGV4dExpc3QgPSByZXF1aXJlKCdleHQtbGlzdCcpO1xuY29uc3Qgc29ydEtleXNMZW5ndGggPSByZXF1aXJlKCdzb3J0LWtleXMtbGVuZ3RoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyID0+IHtcblx0Y29uc3Qgb2JqID0gc29ydEtleXNMZW5ndGguZGVzYyhleHRMaXN0KCkpO1xuXHRjb25zdCBleHRzID0gT2JqZWN0LmtleXMob2JqKS5maWx0ZXIoeCA9PiBzdHIuZW5kc1dpdGgoeCkpO1xuXG5cdGlmIChleHRzLmxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXG5cdHJldHVybiBleHRzLm1hcCh4ID0+ICh7XG5cdFx0ZXh0OiB4LFxuXHRcdG1pbWU6IG9ialt4XVxuXHR9KSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5taW1lID0gc3RyID0+IHtcblx0Y29uc3Qgb2JqID0gc29ydEtleXNMZW5ndGguZGVzYyhleHRMaXN0KCkpO1xuXHRjb25zdCBleHRzID0gT2JqZWN0LmtleXMob2JqKS5maWx0ZXIoeCA9PiBvYmpbeF0gPT09IHN0cik7XG5cblx0aWYgKGV4dHMubGVuZ3RoID09PSAwKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0cmV0dXJuIGV4dHMubWFwKHggPT4gKHtcblx0XHRleHQ6IHgsXG5cdFx0bWltZTogb2JqW3hdXG5cdH0pKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ext-name/index.js\n");

/***/ }),

/***/ "./node_modules/is-fullwidth-code-point/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/is-fullwidth-code-point/index.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("/* eslint-disable yoda */\n\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports[\"default\"] = isFullwidthCodePoint;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtZnVsbHdpZHRoLWNvZGUtcG9pbnQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL2lzLWZ1bGx3aWR0aC1jb2RlLXBvaW50L2luZGV4LmpzPzQ2OTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgeW9kYSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpc0Z1bGx3aWR0aENvZGVQb2ludCA9IGNvZGVQb2ludCA9PiB7XG5cdGlmIChOdW1iZXIuaXNOYU4oY29kZVBvaW50KSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdC8vIENvZGUgcG9pbnRzIGFyZSBkZXJpdmVkIGZyb206XG5cdC8vIGh0dHA6Ly93d3cudW5peC5vcmcvUHVibGljL1VOSURBVEEvRWFzdEFzaWFuV2lkdGgudHh0XG5cdGlmIChcblx0XHRjb2RlUG9pbnQgPj0gMHgxMTAwICYmIChcblx0XHRcdGNvZGVQb2ludCA8PSAweDExNUYgfHwgLy8gSGFuZ3VsIEphbW9cblx0XHRcdGNvZGVQb2ludCA9PT0gMHgyMzI5IHx8IC8vIExFRlQtUE9JTlRJTkcgQU5HTEUgQlJBQ0tFVFxuXHRcdFx0Y29kZVBvaW50ID09PSAweDIzMkEgfHwgLy8gUklHSFQtUE9JTlRJTkcgQU5HTEUgQlJBQ0tFVFxuXHRcdFx0Ly8gQ0pLIFJhZGljYWxzIFN1cHBsZW1lbnQgLi4gRW5jbG9zZWQgQ0pLIExldHRlcnMgYW5kIE1vbnRoc1xuXHRcdFx0KDB4MkU4MCA8PSBjb2RlUG9pbnQgJiYgY29kZVBvaW50IDw9IDB4MzI0NyAmJiBjb2RlUG9pbnQgIT09IDB4MzAzRikgfHxcblx0XHRcdC8vIEVuY2xvc2VkIENKSyBMZXR0ZXJzIGFuZCBNb250aHMgLi4gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyBFeHRlbnNpb24gQVxuXHRcdFx0KDB4MzI1MCA8PSBjb2RlUG9pbnQgJiYgY29kZVBvaW50IDw9IDB4NERCRikgfHxcblx0XHRcdC8vIENKSyBVbmlmaWVkIElkZW9ncmFwaHMgLi4gWWkgUmFkaWNhbHNcblx0XHRcdCgweDRFMDAgPD0gY29kZVBvaW50ICYmIGNvZGVQb2ludCA8PSAweEE0QzYpIHx8XG5cdFx0XHQvLyBIYW5ndWwgSmFtbyBFeHRlbmRlZC1BXG5cdFx0XHQoMHhBOTYwIDw9IGNvZGVQb2ludCAmJiBjb2RlUG9pbnQgPD0gMHhBOTdDKSB8fFxuXHRcdFx0Ly8gSGFuZ3VsIFN5bGxhYmxlc1xuXHRcdFx0KDB4QUMwMCA8PSBjb2RlUG9pbnQgJiYgY29kZVBvaW50IDw9IDB4RDdBMykgfHxcblx0XHRcdC8vIENKSyBDb21wYXRpYmlsaXR5IElkZW9ncmFwaHNcblx0XHRcdCgweEY5MDAgPD0gY29kZVBvaW50ICYmIGNvZGVQb2ludCA8PSAweEZBRkYpIHx8XG5cdFx0XHQvLyBWZXJ0aWNhbCBGb3Jtc1xuXHRcdFx0KDB4RkUxMCA8PSBjb2RlUG9pbnQgJiYgY29kZVBvaW50IDw9IDB4RkUxOSkgfHxcblx0XHRcdC8vIENKSyBDb21wYXRpYmlsaXR5IEZvcm1zIC4uIFNtYWxsIEZvcm0gVmFyaWFudHNcblx0XHRcdCgweEZFMzAgPD0gY29kZVBvaW50ICYmIGNvZGVQb2ludCA8PSAweEZFNkIpIHx8XG5cdFx0XHQvLyBIYWxmd2lkdGggYW5kIEZ1bGx3aWR0aCBGb3Jtc1xuXHRcdFx0KDB4RkYwMSA8PSBjb2RlUG9pbnQgJiYgY29kZVBvaW50IDw9IDB4RkY2MCkgfHxcblx0XHRcdCgweEZGRTAgPD0gY29kZVBvaW50ICYmIGNvZGVQb2ludCA8PSAweEZGRTYpIHx8XG5cdFx0XHQvLyBLYW5hIFN1cHBsZW1lbnRcblx0XHRcdCgweDFCMDAwIDw9IGNvZGVQb2ludCAmJiBjb2RlUG9pbnQgPD0gMHgxQjAwMSkgfHxcblx0XHRcdC8vIEVuY2xvc2VkIElkZW9ncmFwaGljIFN1cHBsZW1lbnRcblx0XHRcdCgweDFGMjAwIDw9IGNvZGVQb2ludCAmJiBjb2RlUG9pbnQgPD0gMHgxRjI1MSkgfHxcblx0XHRcdC8vIENKSyBVbmlmaWVkIElkZW9ncmFwaHMgRXh0ZW5zaW9uIEIgLi4gVGVydGlhcnkgSWRlb2dyYXBoaWMgUGxhbmVcblx0XHRcdCgweDIwMDAwIDw9IGNvZGVQb2ludCAmJiBjb2RlUG9pbnQgPD0gMHgzRkZGRClcblx0XHQpXG5cdCkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0cmV0dXJuIGZhbHNlO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0Z1bGx3aWR0aENvZGVQb2ludDtcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBpc0Z1bGx3aWR0aENvZGVQb2ludDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/is-fullwidth-code-point/index.js\n");

/***/ }),

/***/ "./node_modules/is-plain-obj/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-plain-obj/index.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\tvar prototype;\n\treturn toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqL2luZGV4LmpzPzM2NDIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkge1xuXHR2YXIgcHJvdG90eXBlO1xuXHRyZXR1cm4gdG9TdHJpbmcuY2FsbCh4KSA9PT0gJ1tvYmplY3QgT2JqZWN0XScgJiYgKHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih4KSwgcHJvdG90eXBlID09PSBudWxsIHx8IHByb3RvdHlwZSA9PT0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHt9KSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/is-plain-obj/index.js\n");

/***/ }),

/***/ "./node_modules/mime-db/index.js":
/*!***************************************!*\
  !*** ./node_modules/mime-db/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = __webpack_require__(/*! ./db.json */ \"./node_modules/mime-db/db.json\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWltZS1kYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9taW1lLWRiL2luZGV4LmpzP2I0ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBtaW1lLWRiXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE1LTIwMjIgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RiLmpzb24nKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mime-db/index.js\n");

/***/ }),

/***/ "./node_modules/modify-filename/index.js":
/*!***********************************************!*\
  !*** ./node_modules/modify-filename/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar path = __webpack_require__(/*! path */ \"path\");\n\nmodule.exports = function modifyFilename(pth, modifier) {\n\tif (arguments.length !== 2) {\n\t\tthrow new Error('`path` and `modifier` required');\n\t}\n\n\tif (Array.isArray(pth)) {\n\t\treturn pth.map(function (el) {\n\t\t\treturn modifyFilename(el, modifier);\n\t\t});\n\t}\n\n\tvar ext = path.extname(pth);\n\treturn path.join(path.dirname(pth), modifier(path.basename(pth, ext), ext));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9kaWZ5LWZpbGVuYW1lL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9tb2RpZnktZmlsZW5hbWUvaW5kZXguanM/NTFjZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtb2RpZnlGaWxlbmFtZShwdGgsIG1vZGlmaWVyKSB7XG5cdGlmIChhcmd1bWVudHMubGVuZ3RoICE9PSAyKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdgcGF0aGAgYW5kIGBtb2RpZmllcmAgcmVxdWlyZWQnKTtcblx0fVxuXG5cdGlmIChBcnJheS5pc0FycmF5KHB0aCkpIHtcblx0XHRyZXR1cm4gcHRoLm1hcChmdW5jdGlvbiAoZWwpIHtcblx0XHRcdHJldHVybiBtb2RpZnlGaWxlbmFtZShlbCwgbW9kaWZpZXIpO1xuXHRcdH0pO1xuXHR9XG5cblx0dmFyIGV4dCA9IHBhdGguZXh0bmFtZShwdGgpO1xuXHRyZXR1cm4gcGF0aC5qb2luKHBhdGguZGlybmFtZShwdGgpLCBtb2RpZmllcihwYXRoLmJhc2VuYW1lKHB0aCwgZXh0KSwgZXh0KSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/modify-filename/index.js\n");

/***/ }),

/***/ "./node_modules/nedb-promises/index.js":
/*!*********************************************!*\
  !*** ./node_modules/nedb-promises/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./src/Datastore */ \"./node_modules/nedb-promises/src/Datastore.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVkYi1wcm9taXNlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL25lZGItcHJvbWlzZXMvaW5kZXguanM/ZTRjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vc3JjL0RhdGFzdG9yZScpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/nedb-promises/index.js\n");

/***/ }),

/***/ "./node_modules/nedb-promises/src/Cursor.js":
/*!**************************************************!*\
  !*** ./node_modules/nedb-promises/src/Cursor.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const OriginalCursor = __webpack_require__(/*! @seald-io/nedb/lib/cursor */ \"./node_modules/@seald-io/nedb/lib/cursor.js\");\n\n/**\n * @class\n */\nclass Cursor {\n    constructor(datastore, op, ...args) {\n        const cursor = datastore.__original[op](...args);\n        if (!(cursor instanceof OriginalCursor)) {\n            throw new TypeError(`Unexpected ${typeof original}, expected: Cursor (nedb/lib/cursor)`);\n        }\n\n        Object.defineProperties(this, {\n            __original: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: cursor,\n            },\n\n            __datastore: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: datastore,\n            },\n\n            __op: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: op,\n            },\n\n            __args: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: args,\n            },\n        });\n    }\n\n    /**\n     * Sort the queried documents.\n     *\n     * See: https://github.com/louischatriot/nedb#sorting-and-paginating\n     * \n     * @return {Cursor}\n     */\n    sort(...args) {\n        this.__original.sort(...args);\n        return this;\n    }\n\n    /**\n     * Skip some of the queried documents.\n     *\n     * See: https://github.com/louischatriot/nedb#sorting-and-paginating\n     * \n     * @return {Cursor}\n     */\n    skip(...args) {\n        this.__original.skip(...args);\n        return this;\n    }\n\n    /**\n     * Limit the queried documents.\n     *\n     * See: https://github.com/louischatriot/nedb#sorting-and-paginating\n     * \n     * @return {Cursor}\n     */\n    limit(...args) {\n        this.__original.limit(...args);\n        return this;\n    }\n\n    /**\n     * Set the document projection.\n     * \n     * See: https://github.com/louischatriot/nedb#projections\n     * \n     * @return {Cursor}\n     */\n    project(...args) {\n        this.__original.projection(...args);\n        return this;\n    }\n\n    /**\n     * Execute the cursor.\n     *\n     * Since the Cursor has a `then` and a `catch` method\n     * JavaScript identifies it as a thenable object\n     * thus you can await it in async functions.\n     *\n     * @example\n     * // in an async function\n     * await datastore.find(...)\n     *  .sort(...)\n     *  .limit(...)\n     *\n     * @example\n     * // the previous is the same as:\n     * await datastore.find(...)\n     *  .sort(...)\n     *  .limit(...)\n     *  .exec()\n     * \n     * @return {Promise<Object[]>}\n     */\n    async exec() {\n        await this.__datastore.load();\n        try {\n            const result = await this.__original.execAsync();\n            this.__datastore.broadcastSuccess(this.__op, result, ...this.__args);\n            return result;\n        } catch (error) {\n            this.__datastore.broadcastError(this.__op, error, ...this.__args);\n            throw error;\n        }\n    }\n\n    /**\n     * Execute the cursor and set promise callbacks.\n     * \n     * For more information visit:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\n     * \n     * @param  {Function} fulfilled\n     * @param  {Function} [rejected]\n     * @return {Promise}\n     */\n    then(fulfilled, rejected) {\n        return this.exec().then(fulfilled, rejected);\n    }\n\n    /**\n     * Execute the cursor and set promise error callback.\n     *\n     * For more information visit:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\n     * \n     * @param  {Function} rejected\n     * @return {Promise}\n     */\n    catch(rejected) {\n        return this.exec().catch(rejected);\n    }\n}\n\nmodule.exports = Cursor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVkYi1wcm9taXNlcy9zcmMvQ3Vyc29yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvbmVkYi1wcm9taXNlcy9zcmMvQ3Vyc29yLmpzPzBmNjEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgT3JpZ2luYWxDdXJzb3IgPSByZXF1aXJlKCdAc2VhbGQtaW8vbmVkYi9saWIvY3Vyc29yJyk7XG5cbi8qKlxuICogQGNsYXNzXG4gKi9cbmNsYXNzIEN1cnNvciB7XG4gICAgY29uc3RydWN0b3IoZGF0YXN0b3JlLCBvcCwgLi4uYXJncykge1xuICAgICAgICBjb25zdCBjdXJzb3IgPSBkYXRhc3RvcmUuX19vcmlnaW5hbFtvcF0oLi4uYXJncyk7XG4gICAgICAgIGlmICghKGN1cnNvciBpbnN0YW5jZW9mIE9yaWdpbmFsQ3Vyc29yKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgVW5leHBlY3RlZCAke3R5cGVvZiBvcmlnaW5hbH0sIGV4cGVjdGVkOiBDdXJzb3IgKG5lZGIvbGliL2N1cnNvcilgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgICAgICAgIF9fb3JpZ2luYWw6IHtcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogY3Vyc29yLFxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgX19kYXRhc3RvcmU6IHtcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZGF0YXN0b3JlLFxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgX19vcDoge1xuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBvcCxcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIF9fYXJnczoge1xuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBhcmdzLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU29ydCB0aGUgcXVlcmllZCBkb2N1bWVudHMuXG4gICAgICpcbiAgICAgKiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9sb3Vpc2NoYXRyaW90L25lZGIjc29ydGluZy1hbmQtcGFnaW5hdGluZ1xuICAgICAqIFxuICAgICAqIEByZXR1cm4ge0N1cnNvcn1cbiAgICAgKi9cbiAgICBzb3J0KC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5fX29yaWdpbmFsLnNvcnQoLi4uYXJncyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNraXAgc29tZSBvZiB0aGUgcXVlcmllZCBkb2N1bWVudHMuXG4gICAgICpcbiAgICAgKiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9sb3Vpc2NoYXRyaW90L25lZGIjc29ydGluZy1hbmQtcGFnaW5hdGluZ1xuICAgICAqIFxuICAgICAqIEByZXR1cm4ge0N1cnNvcn1cbiAgICAgKi9cbiAgICBza2lwKC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5fX29yaWdpbmFsLnNraXAoLi4uYXJncyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIExpbWl0IHRoZSBxdWVyaWVkIGRvY3VtZW50cy5cbiAgICAgKlxuICAgICAqIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2xvdWlzY2hhdHJpb3QvbmVkYiNzb3J0aW5nLWFuZC1wYWdpbmF0aW5nXG4gICAgICogXG4gICAgICogQHJldHVybiB7Q3Vyc29yfVxuICAgICAqL1xuICAgIGxpbWl0KC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5fX29yaWdpbmFsLmxpbWl0KC4uLmFyZ3MpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGRvY3VtZW50IHByb2plY3Rpb24uXG4gICAgICogXG4gICAgICogU2VlOiBodHRwczovL2dpdGh1Yi5jb20vbG91aXNjaGF0cmlvdC9uZWRiI3Byb2plY3Rpb25zXG4gICAgICogXG4gICAgICogQHJldHVybiB7Q3Vyc29yfVxuICAgICAqL1xuICAgIHByb2plY3QoLi4uYXJncykge1xuICAgICAgICB0aGlzLl9fb3JpZ2luYWwucHJvamVjdGlvbiguLi5hcmdzKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSB0aGUgY3Vyc29yLlxuICAgICAqXG4gICAgICogU2luY2UgdGhlIEN1cnNvciBoYXMgYSBgdGhlbmAgYW5kIGEgYGNhdGNoYCBtZXRob2RcbiAgICAgKiBKYXZhU2NyaXB0IGlkZW50aWZpZXMgaXQgYXMgYSB0aGVuYWJsZSBvYmplY3RcbiAgICAgKiB0aHVzIHlvdSBjYW4gYXdhaXQgaXQgaW4gYXN5bmMgZnVuY3Rpb25zLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAvLyBpbiBhbiBhc3luYyBmdW5jdGlvblxuICAgICAqIGF3YWl0IGRhdGFzdG9yZS5maW5kKC4uLilcbiAgICAgKiAgLnNvcnQoLi4uKVxuICAgICAqICAubGltaXQoLi4uKVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAvLyB0aGUgcHJldmlvdXMgaXMgdGhlIHNhbWUgYXM6XG4gICAgICogYXdhaXQgZGF0YXN0b3JlLmZpbmQoLi4uKVxuICAgICAqICAuc29ydCguLi4pXG4gICAgICogIC5saW1pdCguLi4pXG4gICAgICogIC5leGVjKClcbiAgICAgKiBcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlPE9iamVjdFtdPn1cbiAgICAgKi9cbiAgICBhc3luYyBleGVjKCkge1xuICAgICAgICBhd2FpdCB0aGlzLl9fZGF0YXN0b3JlLmxvYWQoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuX19vcmlnaW5hbC5leGVjQXN5bmMoKTtcbiAgICAgICAgICAgIHRoaXMuX19kYXRhc3RvcmUuYnJvYWRjYXN0U3VjY2Vzcyh0aGlzLl9fb3AsIHJlc3VsdCwgLi4udGhpcy5fX2FyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuX19kYXRhc3RvcmUuYnJvYWRjYXN0RXJyb3IodGhpcy5fX29wLCBlcnJvciwgLi4udGhpcy5fX2FyZ3MpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIHRoZSBjdXJzb3IgYW5kIHNldCBwcm9taXNlIGNhbGxiYWNrcy5cbiAgICAgKiBcbiAgICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiB2aXNpdDpcbiAgICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9Qcm9taXNlL3RoZW5cbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gZnVsZmlsbGVkXG4gICAgICogQHBhcmFtICB7RnVuY3Rpb259IFtyZWplY3RlZF1cbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgICAqL1xuICAgIHRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5leGVjKCkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIHRoZSBjdXJzb3IgYW5kIHNldCBwcm9taXNlIGVycm9yIGNhbGxiYWNrLlxuICAgICAqXG4gICAgICogRm9yIG1vcmUgaW5mb3JtYXRpb24gdmlzaXQ6XG4gICAgICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZS9jYXRjaFxuICAgICAqIFxuICAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSByZWplY3RlZFxuICAgICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAgICovXG4gICAgY2F0Y2gocmVqZWN0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhlYygpLmNhdGNoKHJlamVjdGVkKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ3Vyc29yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/nedb-promises/src/Cursor.js\n");

/***/ }),

/***/ "./node_modules/nedb-promises/src/Datastore.js":
/*!*****************************************************!*\
  !*** ./node_modules/nedb-promises/src/Datastore.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst OriginalDatastore = __webpack_require__(/*! @seald-io/nedb */ \"./node_modules/@seald-io/nedb/index.js\");\nconst Cursor = __webpack_require__(/*! ./Cursor */ \"./node_modules/nedb-promises/src/Cursor.js\");\n\n/**\n * @summary\n * As of v2.0.0 the Datastore class extends node's built \n * in EventEmitter class and implements each method as an event\n * plus additional error events. It also inherits the `compaction.done`\n * event from nedb but for consistency, in this library the event\n * was renamed to `compactionDone`.\n *\n * All event callbacks will be passed the same type of values,\n * the first being the datastore, then the operation result (if there is any)\n * and then the arguments of the called method. (Check out the first example!)\n *\n * All events have a matching error event that goes by the name of `${method}Error`,\n * for example `findError` or `loadError`. The callbacks of these events will receive\n * the same parameters as the normal event handlers except that instead of the \n * operation result there will be an operation error. (Check out the second example!)\n *\n * A generic `__error__` event is also available. This event will be emitted at any of\n * the above error events. The callbacks of this event will receive the same parameters\n * as the specific error event handlers except that there will be one more parameter \n * passed between the datastore and the error object, that being the name of the method\n * that failed. (Check out the third example!)\n *\n * @example\n * let datastore = Datastore.create()\n * datastore.on('update', (datastore, result, query, update, options) => {\n * })\n * datastore.on('load', (datastore) => {\n *     // this event doesn't have a result\n * })\n * datastore.on('ensureIndex', (datastore, options) => {\n *     // this event doesn't have a result\n *     // but it has the options argument which will be passed to the\n *     // event handlers\n * })\n * datastore.on('compactionDone', (datastore) => {\n *     // inherited from nedb's compaction.done event\n * })\n *\n * @example\n * let datastore = Datastore.create()\n * datastore.on('updateError', (datastore, error, query, update, options) => {\n * })\n * datastore.on('loadError', (datastore, error) => {\n * })\n * datastore.on('ensureIndexError', (datastore, error, options) => {\n * })\n *\n * @example\n * let datastore = Datastore.create()\n * datastore.on('__error__', (datastore, event, error, ...args) => {\n *     // for example\n *     // datastore, 'find', error, [{ foo: 'bar' }, {}]\n * })\n * \n * @class\n */\nclass Datastore extends EventEmitter {\n    /**\n     * Create a database instance.\n     *\n     * Use this over `new Datastore(...)` to access\n     * original nedb datastore properties, such as\n     * `datastore.persistence`.\n     *\n     * Note that this method only creates the `Datastore`\n     * class instance, not the datastore file itself.\n     * The file will only be created once an operation\n     * is issued against the datastore or if you call\n     * the `load` instance method explicitly.\n     * \n     * The path (if specified) will be relative to `process.cwd()`\n     * (unless an absolute path was passed).\n     *\n     * For more information visit:\n     * https://github.com/louischatriot/nedb#creatingloading-a-database\n     * \n     * @param  {string|Object} [pathOrOptions]\n     * @return {Proxy<static>}\n     */\n    static create(pathOrOptions) {\n        return new Proxy(new this(pathOrOptions), {\n            get(target, key) {\n                return target[key]\n                    ? target[key]\n                    : target.__original[key];\n            },\n\n            set(target, key, value) {\n                return Object.prototype.hasOwnProperty.call(target.__original, key)\n                    ? (target.__original[key] = value)\n                    : (target[key] = value);\n            },\n        });\n    }\n\n    /**\n     * Datastore constructor...\n     *\n     * You should use `Datastore.create(...)` instead\n     * of `new Datastore(...)`. With that you can access\n     * the original datastore's properties such as `datastore.persistence`.\n     *\n     * Create a Datastore instance.\n     * \n     * Note that the datastore will be created\n     * relative to `process.cwd()`\n     * (unless an absolute path was passed).\n     * \n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#creatingloading-a-database\n     * \n     * @param  {string|Object} [pathOrOptions]\n     * @return {static}\n     */\n    constructor(pathOrOptions) {\n        super();\n\n        const datastore = new OriginalDatastore(\n            typeof pathOrOptions === 'string'\n                ? { filename: pathOrOptions }\n                : pathOrOptions,\n        );\n\n        Object.defineProperties(this, {\n            __loaded: {\n                enumerable: false,\n                writable: true,\n                value: null,\n            },\n\n            __original: {\n                configurable: true,\n                enumerable: false,\n                writable: false,\n                value: datastore,\n            },\n        });\n\n        this.__original.on('compaction.done', () => {\n            this.emit('compactionDone', this);\n        });\n    }\n\n    /**\n     * Load the datastore.\n     *\n     * Note that you don't necessarily have to call\n     * this method to load the datastore as it will\n     * automatically be called and awaited on any\n     * operation issued against the datastore\n     * (i.e.: `find`, `findOne`, etc.).\n     * \n     * @return {Promise<undefined>}\n     */\n    load() {\n        if ( ! (this.__loaded instanceof Promise)) {\n            this.__loaded = this.__original.loadDatabaseAsync()\n                .then(() => this.broadcastSuccess('load'))\n                .catch((error) => { this.broadcastError('load', error); throw error; });\n        }\n\n        return this.__loaded;\n    }\n\n    /**\n     * Find documents that match the specified `query`.\n     *\n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#finding-documents\n     *\n     * There are differences minor in how the cursor works though.\n     *\n     * @example\n     * datastore.find({ ... }).sort({ ... }).exec().then(...)\n     *\n     * @example\n     * datastore.find({ ... }).sort({ ... }).then(...)\n     *\n     * @example\n     * // in an async function\n     * await datastore.find({ ... }).sort({ ... })\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [projection]\n     * @return {Cursor}\n     */\n    find(query = {}, projection) {\n        if (typeof projection === 'function') {\n            projection = {};\n        }\n\n        return new Cursor(this, 'find', query, projection);\n    }\n\n    /**\n     * Find a document that matches the specified `query`.\n     *\n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#finding-documents\n     *\n     * @example\n     * datastore.findOne({ ... }).then(...)\n     *\n     * @example\n     * // in an async function\n     * await datastore.findOne({ ... }).sort({ ... })\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [projection]\n     * @return {Cursor}\n     */\n    findOne(query = {}, projection) {\n        if (typeof projection === 'function') {\n            projection = {};\n        }\n\n        return new Cursor(this, 'findOne', query, projection);\n    }\n\n    /**\n     * Insert a document or documents.\n     *\n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#inserting-documents\n     * \n     * @param  {Object|Object[]} docs\n     * @return {Promise<Object|Object[]>}\n     */\n    async insert(docs) {\n        await this.load();\n        try {\n            const result = await this.__original.insertAsync(docs);\n            this.broadcastSuccess('insert', docs);\n            return result;\n        } catch (error) {\n            this.broadcastError('insert', error, docs);\n            throw error;\n        }\n    }\n\n    /**\n     * Insert a single document.\n     *\n     * This is just an alias for `insert` with object destructuring\n     * to ensure a single document.\n     * \n     * @param  {Object} doc\n     * @return {Promise<Object>}\n     */\n    insertOne({ ...doc }) {\n        return this.insert(doc);\n    }\n\n    /**\n     * Insert multiple documents.\n     *\n     * This is just an alias for `insert` with array destructuring\n     * to ensure multiple documents.\n     * \n     * @param  {Object[]} docs\n     * @return {Promise<Object[]>}\n     */\n    insertMany([...docs]) {\n        return this.insert(docs);\n    }\n\n    /**\n     * Update documents that match the specified `query`.\n     *\n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#updating-documents\n     *\n     * If you set `options.returnUpdatedDocs`,\n     * the returned promise will resolve with\n     * an object (if `options.multi` is `false`) or\n     * with an array of objects.\n     * \n     * @param  {Object} query\n     * @param  {Object} update\n     * @param  {Object} [options]\n     * @return {Promise<number|Object|Object[]>}\n     */\n    async update(query, update, options = {}) {\n        await this.load();\n        try {\n            const { numAffected, affectedDocuments } = await this.__original.updateAsync(query, update, options);\n            const result = options.returnUpdatedDocs ? affectedDocuments : numAffected;\n            this.broadcastSuccess('update', result, query, update, options);\n            return result;\n        } catch (error) {\n            this.broadcastError('update', error, query, update, options);\n            throw error;\n        }\n    }\n\n    /**\n     * Update a single document that matches the specified `query`.\n     *\n     * This is just an alias for `update` with `options.multi` set to `false`.\n     * \n     * @param  {Object} query\n     * @param  {Object} update\n     * @param  {Object} [options]\n     * \n     * @return {Promise<number|Object>}\n     */\n    updateOne(query, update, options = {}) {\n        return this.update(query, update, { ...options, multi: false });\n    }\n\n    /**\n     * Update multiple documents that match the specified `query`.\n     *\n     * This is just an alias for `update` with `options.multi` set to `true`.\n     *\n     * @param  {Object} query\n     * @param  {Object} update\n     * @param  {Object} [options]\n     * \n     * @return {Promise<number|Object[]>}\n     */\n    updateMany(query, update, options = {}) {\n        return this.update(query, update, { ...options, multi: true });\n    }\n\n    /**\n     * Remove documents that match the specified `query`.\n     *\n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#removing-documents\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [options]\n     * @return {Promise<number>}\n     */\n    async remove(query = {}, options = {}) {\n        await this.load();\n        try {\n            const result = await this.__original.removeAsync(query, options);\n            this.broadcastSuccess('remove', result, query, options);\n            return result;\n        } catch (error) {\n            this.broadcastError('remove', error, query, options);\n            throw error;\n        }\n    }\n\n    /**\n     * Remove the first document that matches the specified `query`.\n     *\n     * This is just an alias for `remove` with `options.multi` set to `false`.\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [options]\n     * \n     * @return {Promise<number>}\n     */\n    removeOne(query, options = {}) {\n        return this.remove(query, { ...options, multi: false });\n    }\n\n    /**\n     * Remove all documents that match the specified `query`.\n     *\n     * This is just an alias for `remove` with `options.multi` set to `true`.\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [options]\n     * \n     * @return {Promise<number>}\n     */\n    removeMany(query, options = {}) {\n        return this.remove(query, { ...options, multi: true });\n    }\n\n    /**\n     * Remove the first document that matches the specified `query`.\n     *\n     * This is just an alias for `removeOne`.\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [options]\n     * \n     * @return {Promise<number>}\n     */\n    deleteOne(query, options) {\n        return this.removeOne(query, options);\n    }\n\n    /**\n     * Remove all documents that match the specified `query`.\n     *\n     * This is just an alias for `removeMany`.\n     * \n     * @param  {Object} [query]\n     * @param  {Object} [options]\n     * \n     * @return {Promise<number>}\n     */\n    deleteMany(query, options) {\n        return this.removeMany(query, options);\n    }\n\n    /**\n     * Count documents matching the specified `query`.\n     *\n     * It's basically the same as the original:\n     * https://github.com/louischatriot/nedb#counting-documents\n     *\n     * @example\n     * datastore.count({ ... }).limit(...).then(...)\n     *\n     * @example\n     * // in an async function\n     * await datastore.count({ ... })\n     * // or\n     * await datastore.count({ ... }).sort(...).limit(...)\n     * \n     * @param  {Object} [query]\n     * @return {Cursor}\n     */\n    count(query = {}) {\n        return new Cursor(this, 'count', query);\n    }\n\n    /**\n     * https://github.com/louischatriot/nedb#indexing\n     * \n     * @param  {Object} options\n     * @return {Promise<undefined>}\n     */\n    async ensureIndex(options) {\n        try {\n            const result = await this.__original.ensureIndexAsync(options);\n            this.broadcastSuccess('ensureIndex', result, options);\n            return result;\n        } catch (error) {\n            this.broadcastError('ensureIndex', error, options);\n            throw error;\n        }\n    }\n\n    /**\n     * https://github.com/louischatriot/nedb#indexing\n     * \n     * @param  {string} field\n     * @return {Promise<undefined>}\n     */\n    async removeIndex(field) {\n        try {\n            const result = await this.__original.removeIndexAsync(field);\n            this.broadcastSuccess('removeIndex', result, field);\n            return result;\n        } catch (error) {\n            this.broadcastError('removeIndex', error, field);\n            throw error;\n        }\n    }\n\n    /**\n     * Broadcasts operation success messages.\n     * \n     * @param  {string} op\n     * @param  {*}      result\n     * @param  {...*}   args\n     * \n     * @return {undefined}\n     * @private\n     */\n    broadcastSuccess(op, result, ...args) {\n        this.emit(op, this, result, ...args);\n        return this;\n    }\n\n    /**\n     * Broadcasts operation error messages.\n     * \n     * @param  {string} op\n     * @param  {Error}  error\n     * @param  {...*}   args\n     * \n     * @return {undefined}\n     * @private\n     */\n    broadcastError(op, error, ...args) {\n        this.emit(`${op}Error`, this, error, ...args);\n        this.emit('__error__', this, op, error, ...args);\n        return this;\n    }\n}\n\nmodule.exports = Datastore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/nedb-promises/src/Datastore.js\n");

/***/ }),

/***/ "./node_modules/path-exists/index.js":
/*!*******************************************!*\
  !*** ./node_modules/path-exists/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst {promisify} = __webpack_require__(/*! util */ \"util\");\n\nconst pAccess = promisify(fs.access);\n\nmodule.exports = async path => {\n\ttry {\n\t\tawait pAccess(path);\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n\nmodule.exports.sync = path => {\n\ttry {\n\t\tfs.accessSync(path);\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcGF0aC1leGlzdHMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL3BhdGgtZXhpc3RzL2luZGV4LmpzPzgyMjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3Qge3Byb21pc2lmeX0gPSByZXF1aXJlKCd1dGlsJyk7XG5cbmNvbnN0IHBBY2Nlc3MgPSBwcm9taXNpZnkoZnMuYWNjZXNzKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyBwYXRoID0+IHtcblx0dHJ5IHtcblx0XHRhd2FpdCBwQWNjZXNzKHBhdGgpO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChfKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5zeW5jID0gcGF0aCA9PiB7XG5cdHRyeSB7XG5cdFx0ZnMuYWNjZXNzU3luYyhwYXRoKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoXykge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/path-exists/index.js\n");

/***/ }),

/***/ "./node_modules/pupa/index.js":
/*!************************************!*\
  !*** ./node_modules/pupa/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst {htmlEscape} = __webpack_require__(/*! escape-goat */ \"./node_modules/escape-goat/index.js\");\n\nmodule.exports = (template, data) => {\n\tif (typeof template !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\` in the first argument, got \\`${typeof template}\\``);\n\t}\n\n\tif (typeof data !== 'object') {\n\t\tthrow new TypeError(`Expected an \\`object\\` or \\`Array\\` in the second argument, got \\`${typeof data}\\``);\n\t}\n\n\t// The regex tries to match either a number inside `{{ }}` or a valid JS identifier or key path.\n\tconst doubleBraceRegex = /{{(\\d+|[a-z$_][a-z\\d$_]*?(?:\\.[a-z\\d$_]*?)*?)}}/gi;\n\n\tif (doubleBraceRegex.test(template)) {\n\t\ttemplate = template.replace(doubleBraceRegex, (_, key) => {\n\t\t\tlet result = data;\n\n\t\t\tfor (const property of key.split('.')) {\n\t\t\t\tresult = result ? result[property] : '';\n\t\t\t}\n\n\t\t\treturn htmlEscape(String(result));\n\t\t});\n\t}\n\n\tconst braceRegex = /{(\\d+|[a-z$_][a-z\\d$_]*?(?:\\.[a-z\\d$_]*?)*?)}/gi;\n\n\treturn template.replace(braceRegex, (_, key) => {\n\t\tlet result = data;\n\n\t\tfor (const property of key.split('.')) {\n\t\t\tresult = result ? result[property] : '';\n\t\t}\n\n\t\treturn String(result);\n\t});\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHVwYS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9wdXBhL2luZGV4LmpzP2RmNDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge2h0bWxFc2NhcGV9ID0gcmVxdWlyZSgnZXNjYXBlLWdvYXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAodGVtcGxhdGUsIGRhdGEpID0+IHtcblx0aWYgKHR5cGVvZiB0ZW1wbGF0ZSAhPT0gJ3N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBhIFxcYHN0cmluZ1xcYCBpbiB0aGUgZmlyc3QgYXJndW1lbnQsIGdvdCBcXGAke3R5cGVvZiB0ZW1wbGF0ZX1cXGBgKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBhbiBcXGBvYmplY3RcXGAgb3IgXFxgQXJyYXlcXGAgaW4gdGhlIHNlY29uZCBhcmd1bWVudCwgZ290IFxcYCR7dHlwZW9mIGRhdGF9XFxgYCk7XG5cdH1cblxuXHQvLyBUaGUgcmVnZXggdHJpZXMgdG8gbWF0Y2ggZWl0aGVyIGEgbnVtYmVyIGluc2lkZSBge3sgfX1gIG9yIGEgdmFsaWQgSlMgaWRlbnRpZmllciBvciBrZXkgcGF0aC5cblx0Y29uc3QgZG91YmxlQnJhY2VSZWdleCA9IC97eyhcXGQrfFthLXokX11bYS16XFxkJF9dKj8oPzpcXC5bYS16XFxkJF9dKj8pKj8pfX0vZ2k7XG5cblx0aWYgKGRvdWJsZUJyYWNlUmVnZXgudGVzdCh0ZW1wbGF0ZSkpIHtcblx0XHR0ZW1wbGF0ZSA9IHRlbXBsYXRlLnJlcGxhY2UoZG91YmxlQnJhY2VSZWdleCwgKF8sIGtleSkgPT4ge1xuXHRcdFx0bGV0IHJlc3VsdCA9IGRhdGE7XG5cblx0XHRcdGZvciAoY29uc3QgcHJvcGVydHkgb2Yga2V5LnNwbGl0KCcuJykpIHtcblx0XHRcdFx0cmVzdWx0ID0gcmVzdWx0ID8gcmVzdWx0W3Byb3BlcnR5XSA6ICcnO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gaHRtbEVzY2FwZShTdHJpbmcocmVzdWx0KSk7XG5cdFx0fSk7XG5cdH1cblxuXHRjb25zdCBicmFjZVJlZ2V4ID0gL3soXFxkK3xbYS16JF9dW2EtelxcZCRfXSo/KD86XFwuW2EtelxcZCRfXSo/KSo/KX0vZ2k7XG5cblx0cmV0dXJuIHRlbXBsYXRlLnJlcGxhY2UoYnJhY2VSZWdleCwgKF8sIGtleSkgPT4ge1xuXHRcdGxldCByZXN1bHQgPSBkYXRhO1xuXG5cdFx0Zm9yIChjb25zdCBwcm9wZXJ0eSBvZiBrZXkuc3BsaXQoJy4nKSkge1xuXHRcdFx0cmVzdWx0ID0gcmVzdWx0ID8gcmVzdWx0W3Byb3BlcnR5XSA6ICcnO1xuXHRcdH1cblxuXHRcdHJldHVybiBTdHJpbmcocmVzdWx0KTtcblx0fSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pupa/index.js\n");

/***/ }),

/***/ "./node_modules/slice-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/slice-ansi/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ \"./node_modules/is-fullwidth-code-point/index.js\");\nconst astralRegex = __webpack_require__(/*! astral-regex */ \"./node_modules/astral-regex/index.js\");\nconst ansiStyles = __webpack_require__(/*! ansi-styles */ \"./node_modules/slice-ansi/node_modules/ansi-styles/index.js\");\n\nconst ESCAPES = [\n\t'\\u001B',\n\t'\\u009B'\n];\n\nconst wrapAnsi = code => `${ESCAPES[0]}[${code}m`;\n\nconst checkAnsi = (ansiCodes, isEscapes, endAnsiCode) => {\n\tlet output = [];\n\tansiCodes = [...ansiCodes];\n\n\tfor (let ansiCode of ansiCodes) {\n\t\tconst ansiCodeOrigin = ansiCode;\n\t\tif (ansiCode.match(';')) {\n\t\t\tansiCode = ansiCode.split(';')[0][0] + '0';\n\t\t}\n\n\t\tconst item = ansiStyles.codes.get(parseInt(ansiCode, 10));\n\t\tif (item) {\n\t\t\tconst indexEscape = ansiCodes.indexOf(item.toString());\n\t\t\tif (indexEscape >= 0) {\n\t\t\t\tansiCodes.splice(indexEscape, 1);\n\t\t\t} else {\n\t\t\t\toutput.push(wrapAnsi(isEscapes ? item : ansiCodeOrigin));\n\t\t\t}\n\t\t} else if (isEscapes) {\n\t\t\toutput.push(wrapAnsi(0));\n\t\t\tbreak;\n\t\t} else {\n\t\t\toutput.push(wrapAnsi(ansiCodeOrigin));\n\t\t}\n\t}\n\n\tif (isEscapes) {\n\t\toutput = output.filter((element, index) => output.indexOf(element) === index);\n\t\tif (endAnsiCode !== undefined) {\n\t\t\tconst fistEscapeCode = wrapAnsi(ansiStyles.codes.get(parseInt(endAnsiCode, 10)));\n\t\t\toutput = output.reduce((current, next) => next === fistEscapeCode ? [next, ...current] : [...current, next], []);\n\t\t}\n\t}\n\n\treturn output.join('');\n};\n\nmodule.exports = (string, begin, end) => {\n\tconst characters = [...string.normalize()];\n\tconst ansiCodes = [];\n\n\tend = typeof end === 'number' ? end : characters.length;\n\n\tlet isInsideEscape = false;\n\tlet ansiCode;\n\tlet visible = 0;\n\tlet output = '';\n\n\tfor (const [index, character] of characters.entries()) {\n\t\tlet leftEscape = false;\n\n\t\tif (ESCAPES.includes(character)) {\n\t\t\tconst code = /\\d[^m]*/.exec(string.slice(index, index + 18));\n\t\t\tansiCode = code && code.length > 0 ? code[0] : undefined;\n\t\t\tif (visible < end) {\n\t\t\t\tisInsideEscape = true;\n\t\t\t\tif (ansiCode !== undefined) {\n\t\t\t\t\tansiCodes.push(ansiCode);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isInsideEscape && character === 'm') {\n\t\t\tisInsideEscape = false;\n\t\t\tleftEscape = true;\n\t\t}\n\n\t\tif (!isInsideEscape && !leftEscape) {\n\t\t\t++visible;\n\t\t}\n\n\t\tif (!astralRegex({exact: true}).test(character) && isFullwidthCodePoint(character.codePointAt())) {\n\t\t\t++visible;\n\t\t}\n\n\t\tif (visible > begin && visible <= end) {\n\t\t\toutput += character;\n\t\t} else if (visible === begin && !isInsideEscape && ansiCode !== undefined) {\n\t\t\toutput = checkAnsi(ansiCodes);\n\t\t} else if (visible >= end) {\n\t\t\toutput += checkAnsi(ansiCodes, true, ansiCode);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL3NsaWNlLWFuc2kvaW5kZXguanM/NTI2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBpc0Z1bGx3aWR0aENvZGVQb2ludCA9IHJlcXVpcmUoJ2lzLWZ1bGx3aWR0aC1jb2RlLXBvaW50Jyk7XG5jb25zdCBhc3RyYWxSZWdleCA9IHJlcXVpcmUoJ2FzdHJhbC1yZWdleCcpO1xuY29uc3QgYW5zaVN0eWxlcyA9IHJlcXVpcmUoJ2Fuc2ktc3R5bGVzJyk7XG5cbmNvbnN0IEVTQ0FQRVMgPSBbXG5cdCdcXHUwMDFCJyxcblx0J1xcdTAwOUInXG5dO1xuXG5jb25zdCB3cmFwQW5zaSA9IGNvZGUgPT4gYCR7RVNDQVBFU1swXX1bJHtjb2RlfW1gO1xuXG5jb25zdCBjaGVja0Fuc2kgPSAoYW5zaUNvZGVzLCBpc0VzY2FwZXMsIGVuZEFuc2lDb2RlKSA9PiB7XG5cdGxldCBvdXRwdXQgPSBbXTtcblx0YW5zaUNvZGVzID0gWy4uLmFuc2lDb2Rlc107XG5cblx0Zm9yIChsZXQgYW5zaUNvZGUgb2YgYW5zaUNvZGVzKSB7XG5cdFx0Y29uc3QgYW5zaUNvZGVPcmlnaW4gPSBhbnNpQ29kZTtcblx0XHRpZiAoYW5zaUNvZGUubWF0Y2goJzsnKSkge1xuXHRcdFx0YW5zaUNvZGUgPSBhbnNpQ29kZS5zcGxpdCgnOycpWzBdWzBdICsgJzAnO1xuXHRcdH1cblxuXHRcdGNvbnN0IGl0ZW0gPSBhbnNpU3R5bGVzLmNvZGVzLmdldChwYXJzZUludChhbnNpQ29kZSwgMTApKTtcblx0XHRpZiAoaXRlbSkge1xuXHRcdFx0Y29uc3QgaW5kZXhFc2NhcGUgPSBhbnNpQ29kZXMuaW5kZXhPZihpdGVtLnRvU3RyaW5nKCkpO1xuXHRcdFx0aWYgKGluZGV4RXNjYXBlID49IDApIHtcblx0XHRcdFx0YW5zaUNvZGVzLnNwbGljZShpbmRleEVzY2FwZSwgMSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRvdXRwdXQucHVzaCh3cmFwQW5zaShpc0VzY2FwZXMgPyBpdGVtIDogYW5zaUNvZGVPcmlnaW4pKTtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKGlzRXNjYXBlcykge1xuXHRcdFx0b3V0cHV0LnB1c2god3JhcEFuc2koMCkpO1xuXHRcdFx0YnJlYWs7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG91dHB1dC5wdXNoKHdyYXBBbnNpKGFuc2lDb2RlT3JpZ2luKSk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKGlzRXNjYXBlcykge1xuXHRcdG91dHB1dCA9IG91dHB1dC5maWx0ZXIoKGVsZW1lbnQsIGluZGV4KSA9PiBvdXRwdXQuaW5kZXhPZihlbGVtZW50KSA9PT0gaW5kZXgpO1xuXHRcdGlmIChlbmRBbnNpQ29kZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRjb25zdCBmaXN0RXNjYXBlQ29kZSA9IHdyYXBBbnNpKGFuc2lTdHlsZXMuY29kZXMuZ2V0KHBhcnNlSW50KGVuZEFuc2lDb2RlLCAxMCkpKTtcblx0XHRcdG91dHB1dCA9IG91dHB1dC5yZWR1Y2UoKGN1cnJlbnQsIG5leHQpID0+IG5leHQgPT09IGZpc3RFc2NhcGVDb2RlID8gW25leHQsIC4uLmN1cnJlbnRdIDogWy4uLmN1cnJlbnQsIG5leHRdLCBbXSk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG91dHB1dC5qb2luKCcnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKHN0cmluZywgYmVnaW4sIGVuZCkgPT4ge1xuXHRjb25zdCBjaGFyYWN0ZXJzID0gWy4uLnN0cmluZy5ub3JtYWxpemUoKV07XG5cdGNvbnN0IGFuc2lDb2RlcyA9IFtdO1xuXG5cdGVuZCA9IHR5cGVvZiBlbmQgPT09ICdudW1iZXInID8gZW5kIDogY2hhcmFjdGVycy5sZW5ndGg7XG5cblx0bGV0IGlzSW5zaWRlRXNjYXBlID0gZmFsc2U7XG5cdGxldCBhbnNpQ29kZTtcblx0bGV0IHZpc2libGUgPSAwO1xuXHRsZXQgb3V0cHV0ID0gJyc7XG5cblx0Zm9yIChjb25zdCBbaW5kZXgsIGNoYXJhY3Rlcl0gb2YgY2hhcmFjdGVycy5lbnRyaWVzKCkpIHtcblx0XHRsZXQgbGVmdEVzY2FwZSA9IGZhbHNlO1xuXG5cdFx0aWYgKEVTQ0FQRVMuaW5jbHVkZXMoY2hhcmFjdGVyKSkge1xuXHRcdFx0Y29uc3QgY29kZSA9IC9cXGRbXm1dKi8uZXhlYyhzdHJpbmcuc2xpY2UoaW5kZXgsIGluZGV4ICsgMTgpKTtcblx0XHRcdGFuc2lDb2RlID0gY29kZSAmJiBjb2RlLmxlbmd0aCA+IDAgPyBjb2RlWzBdIDogdW5kZWZpbmVkO1xuXHRcdFx0aWYgKHZpc2libGUgPCBlbmQpIHtcblx0XHRcdFx0aXNJbnNpZGVFc2NhcGUgPSB0cnVlO1xuXHRcdFx0XHRpZiAoYW5zaUNvZGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGFuc2lDb2Rlcy5wdXNoKGFuc2lDb2RlKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAoaXNJbnNpZGVFc2NhcGUgJiYgY2hhcmFjdGVyID09PSAnbScpIHtcblx0XHRcdGlzSW5zaWRlRXNjYXBlID0gZmFsc2U7XG5cdFx0XHRsZWZ0RXNjYXBlID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIWlzSW5zaWRlRXNjYXBlICYmICFsZWZ0RXNjYXBlKSB7XG5cdFx0XHQrK3Zpc2libGU7XG5cdFx0fVxuXG5cdFx0aWYgKCFhc3RyYWxSZWdleCh7ZXhhY3Q6IHRydWV9KS50ZXN0KGNoYXJhY3RlcikgJiYgaXNGdWxsd2lkdGhDb2RlUG9pbnQoY2hhcmFjdGVyLmNvZGVQb2ludEF0KCkpKSB7XG5cdFx0XHQrK3Zpc2libGU7XG5cdFx0fVxuXG5cdFx0aWYgKHZpc2libGUgPiBiZWdpbiAmJiB2aXNpYmxlIDw9IGVuZCkge1xuXHRcdFx0b3V0cHV0ICs9IGNoYXJhY3Rlcjtcblx0XHR9IGVsc2UgaWYgKHZpc2libGUgPT09IGJlZ2luICYmICFpc0luc2lkZUVzY2FwZSAmJiBhbnNpQ29kZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRvdXRwdXQgPSBjaGVja0Fuc2koYW5zaUNvZGVzKTtcblx0XHR9IGVsc2UgaWYgKHZpc2libGUgPj0gZW5kKSB7XG5cdFx0XHRvdXRwdXQgKz0gY2hlY2tBbnNpKGFuc2lDb2RlcywgdHJ1ZSwgYW5zaUNvZGUpO1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG91dHB1dDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/slice-ansi/index.js\n");

/***/ }),

/***/ "./node_modules/slice-ansi/node_modules/ansi-styles/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/slice-ansi/node_modules/ansi-styles/index.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = __webpack_require__(/*! color-convert */ \"./node_modules/slice-ansi/node_modules/color-convert/index.js\");\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9ub2RlX21vZHVsZXMvYW5zaS1zdHlsZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9ub2RlX21vZHVsZXMvYW5zaS1zdHlsZXMvaW5kZXguanM/MDY4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHdyYXBBbnNpMTYgPSAoZm4sIG9mZnNldCkgPT4gKC4uLmFyZ3MpID0+IHtcblx0Y29uc3QgY29kZSA9IGZuKC4uLmFyZ3MpO1xuXHRyZXR1cm4gYFxcdTAwMUJbJHtjb2RlICsgb2Zmc2V0fW1gO1xufTtcblxuY29uc3Qgd3JhcEFuc2kyNTYgPSAoZm4sIG9mZnNldCkgPT4gKC4uLmFyZ3MpID0+IHtcblx0Y29uc3QgY29kZSA9IGZuKC4uLmFyZ3MpO1xuXHRyZXR1cm4gYFxcdTAwMUJbJHszOCArIG9mZnNldH07NTske2NvZGV9bWA7XG59O1xuXG5jb25zdCB3cmFwQW5zaTE2bSA9IChmbiwgb2Zmc2V0KSA9PiAoLi4uYXJncykgPT4ge1xuXHRjb25zdCByZ2IgPSBmbiguLi5hcmdzKTtcblx0cmV0dXJuIGBcXHUwMDFCWyR7MzggKyBvZmZzZXR9OzI7JHtyZ2JbMF19OyR7cmdiWzFdfTske3JnYlsyXX1tYDtcbn07XG5cbmNvbnN0IGFuc2kyYW5zaSA9IG4gPT4gbjtcbmNvbnN0IHJnYjJyZ2IgPSAociwgZywgYikgPT4gW3IsIGcsIGJdO1xuXG5jb25zdCBzZXRMYXp5UHJvcGVydHkgPSAob2JqZWN0LCBwcm9wZXJ0eSwgZ2V0KSA9PiB7XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIHByb3BlcnR5LCB7XG5cdFx0Z2V0OiAoKSA9PiB7XG5cdFx0XHRjb25zdCB2YWx1ZSA9IGdldCgpO1xuXG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBwcm9wZXJ0eSwge1xuXHRcdFx0XHR2YWx1ZSxcblx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH0sXG5cdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRjb25maWd1cmFibGU6IHRydWVcblx0fSk7XG59O1xuXG4vKiogQHR5cGUge3R5cGVvZiBpbXBvcnQoJ2NvbG9yLWNvbnZlcnQnKX0gKi9cbmxldCBjb2xvckNvbnZlcnQ7XG5jb25zdCBtYWtlRHluYW1pY1N0eWxlcyA9ICh3cmFwLCB0YXJnZXRTcGFjZSwgaWRlbnRpdHksIGlzQmFja2dyb3VuZCkgPT4ge1xuXHRpZiAoY29sb3JDb252ZXJ0ID09PSB1bmRlZmluZWQpIHtcblx0XHRjb2xvckNvbnZlcnQgPSByZXF1aXJlKCdjb2xvci1jb252ZXJ0Jyk7XG5cdH1cblxuXHRjb25zdCBvZmZzZXQgPSBpc0JhY2tncm91bmQgPyAxMCA6IDA7XG5cdGNvbnN0IHN0eWxlcyA9IHt9O1xuXG5cdGZvciAoY29uc3QgW3NvdXJjZVNwYWNlLCBzdWl0ZV0gb2YgT2JqZWN0LmVudHJpZXMoY29sb3JDb252ZXJ0KSkge1xuXHRcdGNvbnN0IG5hbWUgPSBzb3VyY2VTcGFjZSA9PT0gJ2Fuc2kxNicgPyAnYW5zaScgOiBzb3VyY2VTcGFjZTtcblx0XHRpZiAoc291cmNlU3BhY2UgPT09IHRhcmdldFNwYWNlKSB7XG5cdFx0XHRzdHlsZXNbbmFtZV0gPSB3cmFwKGlkZW50aXR5LCBvZmZzZXQpO1xuXHRcdH0gZWxzZSBpZiAodHlwZW9mIHN1aXRlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0c3R5bGVzW25hbWVdID0gd3JhcChzdWl0ZVt0YXJnZXRTcGFjZV0sIG9mZnNldCk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn07XG5cbmZ1bmN0aW9uIGFzc2VtYmxlU3R5bGVzKCkge1xuXHRjb25zdCBjb2RlcyA9IG5ldyBNYXAoKTtcblx0Y29uc3Qgc3R5bGVzID0ge1xuXHRcdG1vZGlmaWVyOiB7XG5cdFx0XHRyZXNldDogWzAsIDBdLFxuXHRcdFx0Ly8gMjEgaXNuJ3Qgd2lkZWx5IHN1cHBvcnRlZCBhbmQgMjIgZG9lcyB0aGUgc2FtZSB0aGluZ1xuXHRcdFx0Ym9sZDogWzEsIDIyXSxcblx0XHRcdGRpbTogWzIsIDIyXSxcblx0XHRcdGl0YWxpYzogWzMsIDIzXSxcblx0XHRcdHVuZGVybGluZTogWzQsIDI0XSxcblx0XHRcdGludmVyc2U6IFs3LCAyN10sXG5cdFx0XHRoaWRkZW46IFs4LCAyOF0sXG5cdFx0XHRzdHJpa2V0aHJvdWdoOiBbOSwgMjldXG5cdFx0fSxcblx0XHRjb2xvcjoge1xuXHRcdFx0YmxhY2s6IFszMCwgMzldLFxuXHRcdFx0cmVkOiBbMzEsIDM5XSxcblx0XHRcdGdyZWVuOiBbMzIsIDM5XSxcblx0XHRcdHllbGxvdzogWzMzLCAzOV0sXG5cdFx0XHRibHVlOiBbMzQsIDM5XSxcblx0XHRcdG1hZ2VudGE6IFszNSwgMzldLFxuXHRcdFx0Y3lhbjogWzM2LCAzOV0sXG5cdFx0XHR3aGl0ZTogWzM3LCAzOV0sXG5cblx0XHRcdC8vIEJyaWdodCBjb2xvclxuXHRcdFx0YmxhY2tCcmlnaHQ6IFs5MCwgMzldLFxuXHRcdFx0cmVkQnJpZ2h0OiBbOTEsIDM5XSxcblx0XHRcdGdyZWVuQnJpZ2h0OiBbOTIsIDM5XSxcblx0XHRcdHllbGxvd0JyaWdodDogWzkzLCAzOV0sXG5cdFx0XHRibHVlQnJpZ2h0OiBbOTQsIDM5XSxcblx0XHRcdG1hZ2VudGFCcmlnaHQ6IFs5NSwgMzldLFxuXHRcdFx0Y3lhbkJyaWdodDogWzk2LCAzOV0sXG5cdFx0XHR3aGl0ZUJyaWdodDogWzk3LCAzOV1cblx0XHR9LFxuXHRcdGJnQ29sb3I6IHtcblx0XHRcdGJnQmxhY2s6IFs0MCwgNDldLFxuXHRcdFx0YmdSZWQ6IFs0MSwgNDldLFxuXHRcdFx0YmdHcmVlbjogWzQyLCA0OV0sXG5cdFx0XHRiZ1llbGxvdzogWzQzLCA0OV0sXG5cdFx0XHRiZ0JsdWU6IFs0NCwgNDldLFxuXHRcdFx0YmdNYWdlbnRhOiBbNDUsIDQ5XSxcblx0XHRcdGJnQ3lhbjogWzQ2LCA0OV0sXG5cdFx0XHRiZ1doaXRlOiBbNDcsIDQ5XSxcblxuXHRcdFx0Ly8gQnJpZ2h0IGNvbG9yXG5cdFx0XHRiZ0JsYWNrQnJpZ2h0OiBbMTAwLCA0OV0sXG5cdFx0XHRiZ1JlZEJyaWdodDogWzEwMSwgNDldLFxuXHRcdFx0YmdHcmVlbkJyaWdodDogWzEwMiwgNDldLFxuXHRcdFx0YmdZZWxsb3dCcmlnaHQ6IFsxMDMsIDQ5XSxcblx0XHRcdGJnQmx1ZUJyaWdodDogWzEwNCwgNDldLFxuXHRcdFx0YmdNYWdlbnRhQnJpZ2h0OiBbMTA1LCA0OV0sXG5cdFx0XHRiZ0N5YW5CcmlnaHQ6IFsxMDYsIDQ5XSxcblx0XHRcdGJnV2hpdGVCcmlnaHQ6IFsxMDcsIDQ5XVxuXHRcdH1cblx0fTtcblxuXHQvLyBBbGlhcyBicmlnaHQgYmxhY2sgYXMgZ3JheSAoYW5kIGdyZXkpXG5cdHN0eWxlcy5jb2xvci5ncmF5ID0gc3R5bGVzLmNvbG9yLmJsYWNrQnJpZ2h0O1xuXHRzdHlsZXMuYmdDb2xvci5iZ0dyYXkgPSBzdHlsZXMuYmdDb2xvci5iZ0JsYWNrQnJpZ2h0O1xuXHRzdHlsZXMuY29sb3IuZ3JleSA9IHN0eWxlcy5jb2xvci5ibGFja0JyaWdodDtcblx0c3R5bGVzLmJnQ29sb3IuYmdHcmV5ID0gc3R5bGVzLmJnQ29sb3IuYmdCbGFja0JyaWdodDtcblxuXHRmb3IgKGNvbnN0IFtncm91cE5hbWUsIGdyb3VwXSBvZiBPYmplY3QuZW50cmllcyhzdHlsZXMpKSB7XG5cdFx0Zm9yIChjb25zdCBbc3R5bGVOYW1lLCBzdHlsZV0gb2YgT2JqZWN0LmVudHJpZXMoZ3JvdXApKSB7XG5cdFx0XHRzdHlsZXNbc3R5bGVOYW1lXSA9IHtcblx0XHRcdFx0b3BlbjogYFxcdTAwMUJbJHtzdHlsZVswXX1tYCxcblx0XHRcdFx0Y2xvc2U6IGBcXHUwMDFCWyR7c3R5bGVbMV19bWBcblx0XHRcdH07XG5cblx0XHRcdGdyb3VwW3N0eWxlTmFtZV0gPSBzdHlsZXNbc3R5bGVOYW1lXTtcblxuXHRcdFx0Y29kZXMuc2V0KHN0eWxlWzBdLCBzdHlsZVsxXSk7XG5cdFx0fVxuXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHN0eWxlcywgZ3JvdXBOYW1lLCB7XG5cdFx0XHR2YWx1ZTogZ3JvdXAsXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHRcdH0pO1xuXHR9XG5cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHN0eWxlcywgJ2NvZGVzJywge1xuXHRcdHZhbHVlOiBjb2Rlcyxcblx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHR9KTtcblxuXHRzdHlsZXMuY29sb3IuY2xvc2UgPSAnXFx1MDAxQlszOW0nO1xuXHRzdHlsZXMuYmdDb2xvci5jbG9zZSA9ICdcXHUwMDFCWzQ5bSc7XG5cblx0c2V0TGF6eVByb3BlcnR5KHN0eWxlcy5jb2xvciwgJ2Fuc2knLCAoKSA9PiBtYWtlRHluYW1pY1N0eWxlcyh3cmFwQW5zaTE2LCAnYW5zaTE2JywgYW5zaTJhbnNpLCBmYWxzZSkpO1xuXHRzZXRMYXp5UHJvcGVydHkoc3R5bGVzLmNvbG9yLCAnYW5zaTI1NicsICgpID0+IG1ha2VEeW5hbWljU3R5bGVzKHdyYXBBbnNpMjU2LCAnYW5zaTI1NicsIGFuc2kyYW5zaSwgZmFsc2UpKTtcblx0c2V0TGF6eVByb3BlcnR5KHN0eWxlcy5jb2xvciwgJ2Fuc2kxNm0nLCAoKSA9PiBtYWtlRHluYW1pY1N0eWxlcyh3cmFwQW5zaTE2bSwgJ3JnYicsIHJnYjJyZ2IsIGZhbHNlKSk7XG5cdHNldExhenlQcm9wZXJ0eShzdHlsZXMuYmdDb2xvciwgJ2Fuc2knLCAoKSA9PiBtYWtlRHluYW1pY1N0eWxlcyh3cmFwQW5zaTE2LCAnYW5zaTE2JywgYW5zaTJhbnNpLCB0cnVlKSk7XG5cdHNldExhenlQcm9wZXJ0eShzdHlsZXMuYmdDb2xvciwgJ2Fuc2kyNTYnLCAoKSA9PiBtYWtlRHluYW1pY1N0eWxlcyh3cmFwQW5zaTI1NiwgJ2Fuc2kyNTYnLCBhbnNpMmFuc2ksIHRydWUpKTtcblx0c2V0TGF6eVByb3BlcnR5KHN0eWxlcy5iZ0NvbG9yLCAnYW5zaTE2bScsICgpID0+IG1ha2VEeW5hbWljU3R5bGVzKHdyYXBBbnNpMTZtLCAncmdiJywgcmdiMnJnYiwgdHJ1ZSkpO1xuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbi8vIE1ha2UgdGhlIGV4cG9ydCBpbW11dGFibGVcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsICdleHBvcnRzJywge1xuXHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRnZXQ6IGFzc2VtYmxlU3R5bGVzXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/slice-ansi/node_modules/ansi-styles/index.js\n");

/***/ }),

/***/ "./node_modules/slice-ansi/node_modules/color-convert/conversions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/slice-ansi/node_modules/color-convert/conversions.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = __webpack_require__(/*! color-name */ \"./node_modules/slice-ansi/node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/slice-ansi/node_modules/color-convert/conversions.js\n");

/***/ }),

/***/ "./node_modules/slice-ansi/node_modules/color-convert/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/slice-ansi/node_modules/color-convert/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/slice-ansi/node_modules/color-convert/conversions.js\");\nconst route = __webpack_require__(/*! ./route */ \"./node_modules/slice-ansi/node_modules/color-convert/route.js\");\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9ub2RlX21vZHVsZXMvY29sb3ItY29udmVydC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9zbGljZS1hbnNpL25vZGVfbW9kdWxlcy9jb2xvci1jb252ZXJ0L2luZGV4LmpzP2Y4MDkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29udmVyc2lvbnMgPSByZXF1aXJlKCcuL2NvbnZlcnNpb25zJyk7XG5jb25zdCByb3V0ZSA9IHJlcXVpcmUoJy4vcm91dGUnKTtcblxuY29uc3QgY29udmVydCA9IHt9O1xuXG5jb25zdCBtb2RlbHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9ucyk7XG5cbmZ1bmN0aW9uIHdyYXBSYXcoZm4pIHtcblx0Y29uc3Qgd3JhcHBlZEZuID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcblx0XHRjb25zdCBhcmcwID0gYXJnc1swXTtcblx0XHRpZiAoYXJnMCA9PT0gdW5kZWZpbmVkIHx8IGFyZzAgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBhcmcwO1xuXHRcdH1cblxuXHRcdGlmIChhcmcwLmxlbmd0aCA+IDEpIHtcblx0XHRcdGFyZ3MgPSBhcmcwO1xuXHRcdH1cblxuXHRcdHJldHVybiBmbihhcmdzKTtcblx0fTtcblxuXHQvLyBQcmVzZXJ2ZSAuY29udmVyc2lvbiBwcm9wZXJ0eSBpZiB0aGVyZSBpcyBvbmVcblx0aWYgKCdjb252ZXJzaW9uJyBpbiBmbikge1xuXHRcdHdyYXBwZWRGbi5jb252ZXJzaW9uID0gZm4uY29udmVyc2lvbjtcblx0fVxuXG5cdHJldHVybiB3cmFwcGVkRm47XG59XG5cbmZ1bmN0aW9uIHdyYXBSb3VuZGVkKGZuKSB7XG5cdGNvbnN0IHdyYXBwZWRGbiA9IGZ1bmN0aW9uICguLi5hcmdzKSB7XG5cdFx0Y29uc3QgYXJnMCA9IGFyZ3NbMF07XG5cblx0XHRpZiAoYXJnMCA9PT0gdW5kZWZpbmVkIHx8IGFyZzAgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBhcmcwO1xuXHRcdH1cblxuXHRcdGlmIChhcmcwLmxlbmd0aCA+IDEpIHtcblx0XHRcdGFyZ3MgPSBhcmcwO1xuXHRcdH1cblxuXHRcdGNvbnN0IHJlc3VsdCA9IGZuKGFyZ3MpO1xuXG5cdFx0Ly8gV2UncmUgYXNzdW1pbmcgdGhlIHJlc3VsdCBpcyBhbiBhcnJheSBoZXJlLlxuXHRcdC8vIHNlZSBub3RpY2UgaW4gY29udmVyc2lvbnMuanM7IGRvbid0IHVzZSBib3ggdHlwZXNcblx0XHQvLyBpbiBjb252ZXJzaW9uIGZ1bmN0aW9ucy5cblx0XHRpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ29iamVjdCcpIHtcblx0XHRcdGZvciAobGV0IGxlbiA9IHJlc3VsdC5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdFx0cmVzdWx0W2ldID0gTWF0aC5yb3VuZChyZXN1bHRbaV0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXN1bHQ7XG5cdH07XG5cblx0Ly8gUHJlc2VydmUgLmNvbnZlcnNpb24gcHJvcGVydHkgaWYgdGhlcmUgaXMgb25lXG5cdGlmICgnY29udmVyc2lvbicgaW4gZm4pIHtcblx0XHR3cmFwcGVkRm4uY29udmVyc2lvbiA9IGZuLmNvbnZlcnNpb247XG5cdH1cblxuXHRyZXR1cm4gd3JhcHBlZEZuO1xufVxuXG5tb2RlbHMuZm9yRWFjaChmcm9tTW9kZWwgPT4ge1xuXHRjb252ZXJ0W2Zyb21Nb2RlbF0gPSB7fTtcblxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udmVydFtmcm9tTW9kZWxdLCAnY2hhbm5lbHMnLCB7dmFsdWU6IGNvbnZlcnNpb25zW2Zyb21Nb2RlbF0uY2hhbm5lbHN9KTtcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnZlcnRbZnJvbU1vZGVsXSwgJ2xhYmVscycsIHt2YWx1ZTogY29udmVyc2lvbnNbZnJvbU1vZGVsXS5sYWJlbHN9KTtcblxuXHRjb25zdCByb3V0ZXMgPSByb3V0ZShmcm9tTW9kZWwpO1xuXHRjb25zdCByb3V0ZU1vZGVscyA9IE9iamVjdC5rZXlzKHJvdXRlcyk7XG5cblx0cm91dGVNb2RlbHMuZm9yRWFjaCh0b01vZGVsID0+IHtcblx0XHRjb25zdCBmbiA9IHJvdXRlc1t0b01vZGVsXTtcblxuXHRcdGNvbnZlcnRbZnJvbU1vZGVsXVt0b01vZGVsXSA9IHdyYXBSb3VuZGVkKGZuKTtcblx0XHRjb252ZXJ0W2Zyb21Nb2RlbF1bdG9Nb2RlbF0ucmF3ID0gd3JhcFJhdyhmbik7XG5cdH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gY29udmVydDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/slice-ansi/node_modules/color-convert/index.js\n");

/***/ }),

/***/ "./node_modules/slice-ansi/node_modules/color-convert/route.js":
/*!*********************************************************************!*\
  !*** ./node_modules/slice-ansi/node_modules/color-convert/route.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/slice-ansi/node_modules/color-convert/conversions.js\");\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9ub2RlX21vZHVsZXMvY29sb3ItY29udmVydC9yb3V0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL3NsaWNlLWFuc2kvbm9kZV9tb2R1bGVzL2NvbG9yLWNvbnZlcnQvcm91dGUuanM/OGZlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb252ZXJzaW9ucyA9IHJlcXVpcmUoJy4vY29udmVyc2lvbnMnKTtcblxuLypcblx0VGhpcyBmdW5jdGlvbiByb3V0ZXMgYSBtb2RlbCB0byBhbGwgb3RoZXIgbW9kZWxzLlxuXG5cdGFsbCBmdW5jdGlvbnMgdGhhdCBhcmUgcm91dGVkIGhhdmUgYSBwcm9wZXJ0eSBgLmNvbnZlcnNpb25gIGF0dGFjaGVkXG5cdHRvIHRoZSByZXR1cm5lZCBzeW50aGV0aWMgZnVuY3Rpb24uIFRoaXMgcHJvcGVydHkgaXMgYW4gYXJyYXlcblx0b2Ygc3RyaW5ncywgZWFjaCB3aXRoIHRoZSBzdGVwcyBpbiBiZXR3ZWVuIHRoZSAnZnJvbScgYW5kICd0bydcblx0Y29sb3IgbW9kZWxzIChpbmNsdXNpdmUpLlxuXG5cdGNvbnZlcnNpb25zIHRoYXQgYXJlIG5vdCBwb3NzaWJsZSBzaW1wbHkgYXJlIG5vdCBpbmNsdWRlZC5cbiovXG5cbmZ1bmN0aW9uIGJ1aWxkR3JhcGgoKSB7XG5cdGNvbnN0IGdyYXBoID0ge307XG5cdC8vIGh0dHBzOi8vanNwZXJmLmNvbS9vYmplY3Qta2V5cy12cy1mb3ItaW4td2l0aC1jbG9zdXJlLzNcblx0Y29uc3QgbW9kZWxzID0gT2JqZWN0LmtleXMoY29udmVyc2lvbnMpO1xuXG5cdGZvciAobGV0IGxlbiA9IG1vZGVscy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRncmFwaFttb2RlbHNbaV1dID0ge1xuXHRcdFx0Ly8gaHR0cDovL2pzcGVyZi5jb20vMS12cy1pbmZpbml0eVxuXHRcdFx0Ly8gbWljcm8tb3B0LCBidXQgdGhpcyBpcyBzaW1wbGUuXG5cdFx0XHRkaXN0YW5jZTogLTEsXG5cdFx0XHRwYXJlbnQ6IG51bGxcblx0XHR9O1xuXHR9XG5cblx0cmV0dXJuIGdyYXBoO1xufVxuXG4vLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CcmVhZHRoLWZpcnN0X3NlYXJjaFxuZnVuY3Rpb24gZGVyaXZlQkZTKGZyb21Nb2RlbCkge1xuXHRjb25zdCBncmFwaCA9IGJ1aWxkR3JhcGgoKTtcblx0Y29uc3QgcXVldWUgPSBbZnJvbU1vZGVsXTsgLy8gVW5zaGlmdCAtPiBxdWV1ZSAtPiBwb3BcblxuXHRncmFwaFtmcm9tTW9kZWxdLmRpc3RhbmNlID0gMDtcblxuXHR3aGlsZSAocXVldWUubGVuZ3RoKSB7XG5cdFx0Y29uc3QgY3VycmVudCA9IHF1ZXVlLnBvcCgpO1xuXHRcdGNvbnN0IGFkamFjZW50cyA9IE9iamVjdC5rZXlzKGNvbnZlcnNpb25zW2N1cnJlbnRdKTtcblxuXHRcdGZvciAobGV0IGxlbiA9IGFkamFjZW50cy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdGNvbnN0IGFkamFjZW50ID0gYWRqYWNlbnRzW2ldO1xuXHRcdFx0Y29uc3Qgbm9kZSA9IGdyYXBoW2FkamFjZW50XTtcblxuXHRcdFx0aWYgKG5vZGUuZGlzdGFuY2UgPT09IC0xKSB7XG5cdFx0XHRcdG5vZGUuZGlzdGFuY2UgPSBncmFwaFtjdXJyZW50XS5kaXN0YW5jZSArIDE7XG5cdFx0XHRcdG5vZGUucGFyZW50ID0gY3VycmVudDtcblx0XHRcdFx0cXVldWUudW5zaGlmdChhZGphY2VudCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGdyYXBoO1xufVxuXG5mdW5jdGlvbiBsaW5rKGZyb20sIHRvKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoYXJncykge1xuXHRcdHJldHVybiB0byhmcm9tKGFyZ3MpKTtcblx0fTtcbn1cblxuZnVuY3Rpb24gd3JhcENvbnZlcnNpb24odG9Nb2RlbCwgZ3JhcGgpIHtcblx0Y29uc3QgcGF0aCA9IFtncmFwaFt0b01vZGVsXS5wYXJlbnQsIHRvTW9kZWxdO1xuXHRsZXQgZm4gPSBjb252ZXJzaW9uc1tncmFwaFt0b01vZGVsXS5wYXJlbnRdW3RvTW9kZWxdO1xuXG5cdGxldCBjdXIgPSBncmFwaFt0b01vZGVsXS5wYXJlbnQ7XG5cdHdoaWxlIChncmFwaFtjdXJdLnBhcmVudCkge1xuXHRcdHBhdGgudW5zaGlmdChncmFwaFtjdXJdLnBhcmVudCk7XG5cdFx0Zm4gPSBsaW5rKGNvbnZlcnNpb25zW2dyYXBoW2N1cl0ucGFyZW50XVtjdXJdLCBmbik7XG5cdFx0Y3VyID0gZ3JhcGhbY3VyXS5wYXJlbnQ7XG5cdH1cblxuXHRmbi5jb252ZXJzaW9uID0gcGF0aDtcblx0cmV0dXJuIGZuO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmcm9tTW9kZWwpIHtcblx0Y29uc3QgZ3JhcGggPSBkZXJpdmVCRlMoZnJvbU1vZGVsKTtcblx0Y29uc3QgY29udmVyc2lvbiA9IHt9O1xuXG5cdGNvbnN0IG1vZGVscyA9IE9iamVjdC5rZXlzKGdyYXBoKTtcblx0Zm9yIChsZXQgbGVuID0gbW9kZWxzLmxlbmd0aCwgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHRcdGNvbnN0IHRvTW9kZWwgPSBtb2RlbHNbaV07XG5cdFx0Y29uc3Qgbm9kZSA9IGdyYXBoW3RvTW9kZWxdO1xuXG5cdFx0aWYgKG5vZGUucGFyZW50ID09PSBudWxsKSB7XG5cdFx0XHQvLyBObyBwb3NzaWJsZSBjb252ZXJzaW9uLCBvciB0aGlzIG5vZGUgaXMgdGhlIHNvdXJjZSBtb2RlbC5cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGNvbnZlcnNpb25bdG9Nb2RlbF0gPSB3cmFwQ29udmVyc2lvbih0b01vZGVsLCBncmFwaCk7XG5cdH1cblxuXHRyZXR1cm4gY29udmVyc2lvbjtcbn07XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/slice-ansi/node_modules/color-convert/route.js\n");

/***/ }),

/***/ "./node_modules/slice-ansi/node_modules/color-name/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/slice-ansi/node_modules/color-name/index.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9ub2RlX21vZHVsZXMvY29sb3ItbmFtZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvc2xpY2UtYW5zaS9ub2RlX21vZHVsZXMvY29sb3ItbmFtZS9pbmRleC5qcz9mYzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblx0XCJhbGljZWJsdWVcIjogWzI0MCwgMjQ4LCAyNTVdLFxyXG5cdFwiYW50aXF1ZXdoaXRlXCI6IFsyNTAsIDIzNSwgMjE1XSxcclxuXHRcImFxdWFcIjogWzAsIDI1NSwgMjU1XSxcclxuXHRcImFxdWFtYXJpbmVcIjogWzEyNywgMjU1LCAyMTJdLFxyXG5cdFwiYXp1cmVcIjogWzI0MCwgMjU1LCAyNTVdLFxyXG5cdFwiYmVpZ2VcIjogWzI0NSwgMjQ1LCAyMjBdLFxyXG5cdFwiYmlzcXVlXCI6IFsyNTUsIDIyOCwgMTk2XSxcclxuXHRcImJsYWNrXCI6IFswLCAwLCAwXSxcclxuXHRcImJsYW5jaGVkYWxtb25kXCI6IFsyNTUsIDIzNSwgMjA1XSxcclxuXHRcImJsdWVcIjogWzAsIDAsIDI1NV0sXHJcblx0XCJibHVldmlvbGV0XCI6IFsxMzgsIDQzLCAyMjZdLFxyXG5cdFwiYnJvd25cIjogWzE2NSwgNDIsIDQyXSxcclxuXHRcImJ1cmx5d29vZFwiOiBbMjIyLCAxODQsIDEzNV0sXHJcblx0XCJjYWRldGJsdWVcIjogWzk1LCAxNTgsIDE2MF0sXHJcblx0XCJjaGFydHJldXNlXCI6IFsxMjcsIDI1NSwgMF0sXHJcblx0XCJjaG9jb2xhdGVcIjogWzIxMCwgMTA1LCAzMF0sXHJcblx0XCJjb3JhbFwiOiBbMjU1LCAxMjcsIDgwXSxcclxuXHRcImNvcm5mbG93ZXJibHVlXCI6IFsxMDAsIDE0OSwgMjM3XSxcclxuXHRcImNvcm5zaWxrXCI6IFsyNTUsIDI0OCwgMjIwXSxcclxuXHRcImNyaW1zb25cIjogWzIyMCwgMjAsIDYwXSxcclxuXHRcImN5YW5cIjogWzAsIDI1NSwgMjU1XSxcclxuXHRcImRhcmtibHVlXCI6IFswLCAwLCAxMzldLFxyXG5cdFwiZGFya2N5YW5cIjogWzAsIDEzOSwgMTM5XSxcclxuXHRcImRhcmtnb2xkZW5yb2RcIjogWzE4NCwgMTM0LCAxMV0sXHJcblx0XCJkYXJrZ3JheVwiOiBbMTY5LCAxNjksIDE2OV0sXHJcblx0XCJkYXJrZ3JlZW5cIjogWzAsIDEwMCwgMF0sXHJcblx0XCJkYXJrZ3JleVwiOiBbMTY5LCAxNjksIDE2OV0sXHJcblx0XCJkYXJra2hha2lcIjogWzE4OSwgMTgzLCAxMDddLFxyXG5cdFwiZGFya21hZ2VudGFcIjogWzEzOSwgMCwgMTM5XSxcclxuXHRcImRhcmtvbGl2ZWdyZWVuXCI6IFs4NSwgMTA3LCA0N10sXHJcblx0XCJkYXJrb3JhbmdlXCI6IFsyNTUsIDE0MCwgMF0sXHJcblx0XCJkYXJrb3JjaGlkXCI6IFsxNTMsIDUwLCAyMDRdLFxyXG5cdFwiZGFya3JlZFwiOiBbMTM5LCAwLCAwXSxcclxuXHRcImRhcmtzYWxtb25cIjogWzIzMywgMTUwLCAxMjJdLFxyXG5cdFwiZGFya3NlYWdyZWVuXCI6IFsxNDMsIDE4OCwgMTQzXSxcclxuXHRcImRhcmtzbGF0ZWJsdWVcIjogWzcyLCA2MSwgMTM5XSxcclxuXHRcImRhcmtzbGF0ZWdyYXlcIjogWzQ3LCA3OSwgNzldLFxyXG5cdFwiZGFya3NsYXRlZ3JleVwiOiBbNDcsIDc5LCA3OV0sXHJcblx0XCJkYXJrdHVycXVvaXNlXCI6IFswLCAyMDYsIDIwOV0sXHJcblx0XCJkYXJrdmlvbGV0XCI6IFsxNDgsIDAsIDIxMV0sXHJcblx0XCJkZWVwcGlua1wiOiBbMjU1LCAyMCwgMTQ3XSxcclxuXHRcImRlZXBza3libHVlXCI6IFswLCAxOTEsIDI1NV0sXHJcblx0XCJkaW1ncmF5XCI6IFsxMDUsIDEwNSwgMTA1XSxcclxuXHRcImRpbWdyZXlcIjogWzEwNSwgMTA1LCAxMDVdLFxyXG5cdFwiZG9kZ2VyYmx1ZVwiOiBbMzAsIDE0NCwgMjU1XSxcclxuXHRcImZpcmVicmlja1wiOiBbMTc4LCAzNCwgMzRdLFxyXG5cdFwiZmxvcmFsd2hpdGVcIjogWzI1NSwgMjUwLCAyNDBdLFxyXG5cdFwiZm9yZXN0Z3JlZW5cIjogWzM0LCAxMzksIDM0XSxcclxuXHRcImZ1Y2hzaWFcIjogWzI1NSwgMCwgMjU1XSxcclxuXHRcImdhaW5zYm9yb1wiOiBbMjIwLCAyMjAsIDIyMF0sXHJcblx0XCJnaG9zdHdoaXRlXCI6IFsyNDgsIDI0OCwgMjU1XSxcclxuXHRcImdvbGRcIjogWzI1NSwgMjE1LCAwXSxcclxuXHRcImdvbGRlbnJvZFwiOiBbMjE4LCAxNjUsIDMyXSxcclxuXHRcImdyYXlcIjogWzEyOCwgMTI4LCAxMjhdLFxyXG5cdFwiZ3JlZW5cIjogWzAsIDEyOCwgMF0sXHJcblx0XCJncmVlbnllbGxvd1wiOiBbMTczLCAyNTUsIDQ3XSxcclxuXHRcImdyZXlcIjogWzEyOCwgMTI4LCAxMjhdLFxyXG5cdFwiaG9uZXlkZXdcIjogWzI0MCwgMjU1LCAyNDBdLFxyXG5cdFwiaG90cGlua1wiOiBbMjU1LCAxMDUsIDE4MF0sXHJcblx0XCJpbmRpYW5yZWRcIjogWzIwNSwgOTIsIDkyXSxcclxuXHRcImluZGlnb1wiOiBbNzUsIDAsIDEzMF0sXHJcblx0XCJpdm9yeVwiOiBbMjU1LCAyNTUsIDI0MF0sXHJcblx0XCJraGFraVwiOiBbMjQwLCAyMzAsIDE0MF0sXHJcblx0XCJsYXZlbmRlclwiOiBbMjMwLCAyMzAsIDI1MF0sXHJcblx0XCJsYXZlbmRlcmJsdXNoXCI6IFsyNTUsIDI0MCwgMjQ1XSxcclxuXHRcImxhd25ncmVlblwiOiBbMTI0LCAyNTIsIDBdLFxyXG5cdFwibGVtb25jaGlmZm9uXCI6IFsyNTUsIDI1MCwgMjA1XSxcclxuXHRcImxpZ2h0Ymx1ZVwiOiBbMTczLCAyMTYsIDIzMF0sXHJcblx0XCJsaWdodGNvcmFsXCI6IFsyNDAsIDEyOCwgMTI4XSxcclxuXHRcImxpZ2h0Y3lhblwiOiBbMjI0LCAyNTUsIDI1NV0sXHJcblx0XCJsaWdodGdvbGRlbnJvZHllbGxvd1wiOiBbMjUwLCAyNTAsIDIxMF0sXHJcblx0XCJsaWdodGdyYXlcIjogWzIxMSwgMjExLCAyMTFdLFxyXG5cdFwibGlnaHRncmVlblwiOiBbMTQ0LCAyMzgsIDE0NF0sXHJcblx0XCJsaWdodGdyZXlcIjogWzIxMSwgMjExLCAyMTFdLFxyXG5cdFwibGlnaHRwaW5rXCI6IFsyNTUsIDE4MiwgMTkzXSxcclxuXHRcImxpZ2h0c2FsbW9uXCI6IFsyNTUsIDE2MCwgMTIyXSxcclxuXHRcImxpZ2h0c2VhZ3JlZW5cIjogWzMyLCAxNzgsIDE3MF0sXHJcblx0XCJsaWdodHNreWJsdWVcIjogWzEzNSwgMjA2LCAyNTBdLFxyXG5cdFwibGlnaHRzbGF0ZWdyYXlcIjogWzExOSwgMTM2LCAxNTNdLFxyXG5cdFwibGlnaHRzbGF0ZWdyZXlcIjogWzExOSwgMTM2LCAxNTNdLFxyXG5cdFwibGlnaHRzdGVlbGJsdWVcIjogWzE3NiwgMTk2LCAyMjJdLFxyXG5cdFwibGlnaHR5ZWxsb3dcIjogWzI1NSwgMjU1LCAyMjRdLFxyXG5cdFwibGltZVwiOiBbMCwgMjU1LCAwXSxcclxuXHRcImxpbWVncmVlblwiOiBbNTAsIDIwNSwgNTBdLFxyXG5cdFwibGluZW5cIjogWzI1MCwgMjQwLCAyMzBdLFxyXG5cdFwibWFnZW50YVwiOiBbMjU1LCAwLCAyNTVdLFxyXG5cdFwibWFyb29uXCI6IFsxMjgsIDAsIDBdLFxyXG5cdFwibWVkaXVtYXF1YW1hcmluZVwiOiBbMTAyLCAyMDUsIDE3MF0sXHJcblx0XCJtZWRpdW1ibHVlXCI6IFswLCAwLCAyMDVdLFxyXG5cdFwibWVkaXVtb3JjaGlkXCI6IFsxODYsIDg1LCAyMTFdLFxyXG5cdFwibWVkaXVtcHVycGxlXCI6IFsxNDcsIDExMiwgMjE5XSxcclxuXHRcIm1lZGl1bXNlYWdyZWVuXCI6IFs2MCwgMTc5LCAxMTNdLFxyXG5cdFwibWVkaXVtc2xhdGVibHVlXCI6IFsxMjMsIDEwNCwgMjM4XSxcclxuXHRcIm1lZGl1bXNwcmluZ2dyZWVuXCI6IFswLCAyNTAsIDE1NF0sXHJcblx0XCJtZWRpdW10dXJxdW9pc2VcIjogWzcyLCAyMDksIDIwNF0sXHJcblx0XCJtZWRpdW12aW9sZXRyZWRcIjogWzE5OSwgMjEsIDEzM10sXHJcblx0XCJtaWRuaWdodGJsdWVcIjogWzI1LCAyNSwgMTEyXSxcclxuXHRcIm1pbnRjcmVhbVwiOiBbMjQ1LCAyNTUsIDI1MF0sXHJcblx0XCJtaXN0eXJvc2VcIjogWzI1NSwgMjI4LCAyMjVdLFxyXG5cdFwibW9jY2FzaW5cIjogWzI1NSwgMjI4LCAxODFdLFxyXG5cdFwibmF2YWpvd2hpdGVcIjogWzI1NSwgMjIyLCAxNzNdLFxyXG5cdFwibmF2eVwiOiBbMCwgMCwgMTI4XSxcclxuXHRcIm9sZGxhY2VcIjogWzI1MywgMjQ1LCAyMzBdLFxyXG5cdFwib2xpdmVcIjogWzEyOCwgMTI4LCAwXSxcclxuXHRcIm9saXZlZHJhYlwiOiBbMTA3LCAxNDIsIDM1XSxcclxuXHRcIm9yYW5nZVwiOiBbMjU1LCAxNjUsIDBdLFxyXG5cdFwib3JhbmdlcmVkXCI6IFsyNTUsIDY5LCAwXSxcclxuXHRcIm9yY2hpZFwiOiBbMjE4LCAxMTIsIDIxNF0sXHJcblx0XCJwYWxlZ29sZGVucm9kXCI6IFsyMzgsIDIzMiwgMTcwXSxcclxuXHRcInBhbGVncmVlblwiOiBbMTUyLCAyNTEsIDE1Ml0sXHJcblx0XCJwYWxldHVycXVvaXNlXCI6IFsxNzUsIDIzOCwgMjM4XSxcclxuXHRcInBhbGV2aW9sZXRyZWRcIjogWzIxOSwgMTEyLCAxNDddLFxyXG5cdFwicGFwYXlhd2hpcFwiOiBbMjU1LCAyMzksIDIxM10sXHJcblx0XCJwZWFjaHB1ZmZcIjogWzI1NSwgMjE4LCAxODVdLFxyXG5cdFwicGVydVwiOiBbMjA1LCAxMzMsIDYzXSxcclxuXHRcInBpbmtcIjogWzI1NSwgMTkyLCAyMDNdLFxyXG5cdFwicGx1bVwiOiBbMjIxLCAxNjAsIDIyMV0sXHJcblx0XCJwb3dkZXJibHVlXCI6IFsxNzYsIDIyNCwgMjMwXSxcclxuXHRcInB1cnBsZVwiOiBbMTI4LCAwLCAxMjhdLFxyXG5cdFwicmViZWNjYXB1cnBsZVwiOiBbMTAyLCA1MSwgMTUzXSxcclxuXHRcInJlZFwiOiBbMjU1LCAwLCAwXSxcclxuXHRcInJvc3licm93blwiOiBbMTg4LCAxNDMsIDE0M10sXHJcblx0XCJyb3lhbGJsdWVcIjogWzY1LCAxMDUsIDIyNV0sXHJcblx0XCJzYWRkbGVicm93blwiOiBbMTM5LCA2OSwgMTldLFxyXG5cdFwic2FsbW9uXCI6IFsyNTAsIDEyOCwgMTE0XSxcclxuXHRcInNhbmR5YnJvd25cIjogWzI0NCwgMTY0LCA5Nl0sXHJcblx0XCJzZWFncmVlblwiOiBbNDYsIDEzOSwgODddLFxyXG5cdFwic2Vhc2hlbGxcIjogWzI1NSwgMjQ1LCAyMzhdLFxyXG5cdFwic2llbm5hXCI6IFsxNjAsIDgyLCA0NV0sXHJcblx0XCJzaWx2ZXJcIjogWzE5MiwgMTkyLCAxOTJdLFxyXG5cdFwic2t5Ymx1ZVwiOiBbMTM1LCAyMDYsIDIzNV0sXHJcblx0XCJzbGF0ZWJsdWVcIjogWzEwNiwgOTAsIDIwNV0sXHJcblx0XCJzbGF0ZWdyYXlcIjogWzExMiwgMTI4LCAxNDRdLFxyXG5cdFwic2xhdGVncmV5XCI6IFsxMTIsIDEyOCwgMTQ0XSxcclxuXHRcInNub3dcIjogWzI1NSwgMjUwLCAyNTBdLFxyXG5cdFwic3ByaW5nZ3JlZW5cIjogWzAsIDI1NSwgMTI3XSxcclxuXHRcInN0ZWVsYmx1ZVwiOiBbNzAsIDEzMCwgMTgwXSxcclxuXHRcInRhblwiOiBbMjEwLCAxODAsIDE0MF0sXHJcblx0XCJ0ZWFsXCI6IFswLCAxMjgsIDEyOF0sXHJcblx0XCJ0aGlzdGxlXCI6IFsyMTYsIDE5MSwgMjE2XSxcclxuXHRcInRvbWF0b1wiOiBbMjU1LCA5OSwgNzFdLFxyXG5cdFwidHVycXVvaXNlXCI6IFs2NCwgMjI0LCAyMDhdLFxyXG5cdFwidmlvbGV0XCI6IFsyMzgsIDEzMCwgMjM4XSxcclxuXHRcIndoZWF0XCI6IFsyNDUsIDIyMiwgMTc5XSxcclxuXHRcIndoaXRlXCI6IFsyNTUsIDI1NSwgMjU1XSxcclxuXHRcIndoaXRlc21va2VcIjogWzI0NSwgMjQ1LCAyNDVdLFxyXG5cdFwieWVsbG93XCI6IFsyNTUsIDI1NSwgMF0sXHJcblx0XCJ5ZWxsb3dncmVlblwiOiBbMTU0LCAyMDUsIDUwXVxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/slice-ansi/node_modules/color-name/index.js\n");

/***/ }),

/***/ "./node_modules/sort-keys-length/index.js":
/*!************************************************!*\
  !*** ./node_modules/sort-keys-length/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar sortKeys = __webpack_require__(/*! sort-keys */ \"./node_modules/sort-keys/index.js\");\n\n/**\n * Sort object keys by length\n *\n * @param obj\n * @api public\n */\n\nmodule.exports.desc = function (obj) {\n\treturn sortKeys(obj, function (a, b) {\n\t\treturn b.length - a.length;\n\t});\n}\n\nmodule.exports.asc = function (obj) {\n\treturn sortKeys(obj, function (a, b) {\n\t\treturn a.length - b.length;\n\t});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ydC1rZXlzLWxlbmd0aC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL3NvcnQta2V5cy1sZW5ndGgvaW5kZXguanM/ZDdjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBzb3J0S2V5cyA9IHJlcXVpcmUoJ3NvcnQta2V5cycpO1xuXG4vKipcbiAqIFNvcnQgb2JqZWN0IGtleXMgYnkgbGVuZ3RoXG4gKlxuICogQHBhcmFtIG9ialxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cy5kZXNjID0gZnVuY3Rpb24gKG9iaikge1xuXHRyZXR1cm4gc29ydEtleXMob2JqLCBmdW5jdGlvbiAoYSwgYikge1xuXHRcdHJldHVybiBiLmxlbmd0aCAtIGEubGVuZ3RoO1xuXHR9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMuYXNjID0gZnVuY3Rpb24gKG9iaikge1xuXHRyZXR1cm4gc29ydEtleXMob2JqLCBmdW5jdGlvbiAoYSwgYikge1xuXHRcdHJldHVybiBhLmxlbmd0aCAtIGIubGVuZ3RoO1xuXHR9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sort-keys-length/index.js\n");

/***/ }),

/***/ "./node_modules/sort-keys/index.js":
/*!*****************************************!*\
  !*** ./node_modules/sort-keys/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar isPlainObj = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\");\n\nmodule.exports = function (obj, opts) {\n\tif (!isPlainObj(obj)) {\n\t\tthrow new TypeError('Expected a plain object');\n\t}\n\n\topts = opts || {};\n\n\t// DEPRECATED\n\tif (typeof opts === 'function') {\n\t\topts = {compare: opts};\n\t}\n\n\tvar deep = opts.deep;\n\tvar seenInput = [];\n\tvar seenOutput = [];\n\n\tvar sortKeys = function (x) {\n\t\tvar seenIndex = seenInput.indexOf(x);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tvar ret = {};\n\t\tvar keys = Object.keys(x).sort(opts.compare);\n\n\t\tseenInput.push(x);\n\t\tseenOutput.push(ret);\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar val = x[key];\n\n\t\t\tret[key] = deep && isPlainObj(val) ? sortKeys(val) : val;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\treturn sortKeys(obj);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ydC1rZXlzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9zb3J0LWtleXMvaW5kZXguanM/YjBhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgaXNQbGFpbk9iaiA9IHJlcXVpcmUoJ2lzLXBsYWluLW9iaicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcblx0aWYgKCFpc1BsYWluT2JqKG9iaikpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhIHBsYWluIG9iamVjdCcpO1xuXHR9XG5cblx0b3B0cyA9IG9wdHMgfHwge307XG5cblx0Ly8gREVQUkVDQVRFRFxuXHRpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIHtcblx0XHRvcHRzID0ge2NvbXBhcmU6IG9wdHN9O1xuXHR9XG5cblx0dmFyIGRlZXAgPSBvcHRzLmRlZXA7XG5cdHZhciBzZWVuSW5wdXQgPSBbXTtcblx0dmFyIHNlZW5PdXRwdXQgPSBbXTtcblxuXHR2YXIgc29ydEtleXMgPSBmdW5jdGlvbiAoeCkge1xuXHRcdHZhciBzZWVuSW5kZXggPSBzZWVuSW5wdXQuaW5kZXhPZih4KTtcblxuXHRcdGlmIChzZWVuSW5kZXggIT09IC0xKSB7XG5cdFx0XHRyZXR1cm4gc2Vlbk91dHB1dFtzZWVuSW5kZXhdO1xuXHRcdH1cblxuXHRcdHZhciByZXQgPSB7fTtcblx0XHR2YXIga2V5cyA9IE9iamVjdC5rZXlzKHgpLnNvcnQob3B0cy5jb21wYXJlKTtcblxuXHRcdHNlZW5JbnB1dC5wdXNoKHgpO1xuXHRcdHNlZW5PdXRwdXQucHVzaChyZXQpO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIga2V5ID0ga2V5c1tpXTtcblx0XHRcdHZhciB2YWwgPSB4W2tleV07XG5cblx0XHRcdHJldFtrZXldID0gZGVlcCAmJiBpc1BsYWluT2JqKHZhbCkgPyBzb3J0S2V5cyh2YWwpIDogdmFsO1xuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH07XG5cblx0cmV0dXJuIHNvcnRLZXlzKG9iaik7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sort-keys/index.js\n");

/***/ }),

/***/ "./node_modules/string-width/index.js":
/*!********************************************!*\
  !*** ./node_modules/string-width/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst stripAnsi = __webpack_require__(/*! strip-ansi */ \"./node_modules/strip-ansi/index.js\");\nconst isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ \"./node_modules/is-fullwidth-code-point/index.js\");\nconst emojiRegex = __webpack_require__(/*! emoji-regex */ \"./node_modules/string-width/node_modules/emoji-regex/index.js\");\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports[\"default\"] = stringWidth;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyaW5nLXdpZHRoL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcmVldHViZS8uL25vZGVfbW9kdWxlcy9zdHJpbmctd2lkdGgvaW5kZXguanM/YWNlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBzdHJpcEFuc2kgPSByZXF1aXJlKCdzdHJpcC1hbnNpJyk7XG5jb25zdCBpc0Z1bGx3aWR0aENvZGVQb2ludCA9IHJlcXVpcmUoJ2lzLWZ1bGx3aWR0aC1jb2RlLXBvaW50Jyk7XG5jb25zdCBlbW9qaVJlZ2V4ID0gcmVxdWlyZSgnZW1vamktcmVnZXgnKTtcblxuY29uc3Qgc3RyaW5nV2lkdGggPSBzdHJpbmcgPT4ge1xuXHRpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycgfHwgc3RyaW5nLmxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0c3RyaW5nID0gc3RyaXBBbnNpKHN0cmluZyk7XG5cblx0aWYgKHN0cmluZy5sZW5ndGggPT09IDApIHtcblx0XHRyZXR1cm4gMDtcblx0fVxuXG5cdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKGVtb2ppUmVnZXgoKSwgJyAgJyk7XG5cblx0bGV0IHdpZHRoID0gMDtcblxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuXHRcdGNvbnN0IGNvZGUgPSBzdHJpbmcuY29kZVBvaW50QXQoaSk7XG5cblx0XHQvLyBJZ25vcmUgY29udHJvbCBjaGFyYWN0ZXJzXG5cdFx0aWYgKGNvZGUgPD0gMHgxRiB8fCAoY29kZSA+PSAweDdGICYmIGNvZGUgPD0gMHg5RikpIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdC8vIElnbm9yZSBjb21iaW5pbmcgY2hhcmFjdGVyc1xuXHRcdGlmIChjb2RlID49IDB4MzAwICYmIGNvZGUgPD0gMHgzNkYpIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdC8vIFN1cnJvZ2F0ZXNcblx0XHRpZiAoY29kZSA+IDB4RkZGRikge1xuXHRcdFx0aSsrO1xuXHRcdH1cblxuXHRcdHdpZHRoICs9IGlzRnVsbHdpZHRoQ29kZVBvaW50KGNvZGUpID8gMiA6IDE7XG5cdH1cblxuXHRyZXR1cm4gd2lkdGg7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN0cmluZ1dpZHRoO1xuLy8gVE9ETzogcmVtb3ZlIHRoaXMgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvblxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IHN0cmluZ1dpZHRoO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/string-width/index.js\n");

/***/ }),

/***/ "./node_modules/string-width/node_modules/emoji-regex/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/string-width/node_modules/emoji-regex/index.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/string-width/node_modules/emoji-regex/index.js\n");

/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst ansiRegex = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\");\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyaXAtYW5zaS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL3N0cmlwLWFuc2kvaW5kZXguanM/NzY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBhbnNpUmVnZXggPSByZXF1aXJlKCdhbnNpLXJlZ2V4Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaW5nID0+IHR5cGVvZiBzdHJpbmcgPT09ICdzdHJpbmcnID8gc3RyaW5nLnJlcGxhY2UoYW5zaVJlZ2V4KCksICcnKSA6IHN0cmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/strip-ansi/index.js\n");

/***/ }),

/***/ "./node_modules/unused-filename/index.js":
/*!***********************************************!*\
  !*** ./node_modules/unused-filename/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst pathExists = __webpack_require__(/*! path-exists */ \"./node_modules/path-exists/index.js\");\nconst modifyFilename = __webpack_require__(/*! modify-filename */ \"./node_modules/modify-filename/index.js\");\n\nconst incrementer = filePath => {\n\tlet counter = 0;\n\treturn () => modifyFilename(filePath, (filename, extension) => `${filename} (${++counter})${extension}`);\n};\n\nconst unusedFilename = filePath => {\n\tconst getFilePath = incrementer(filePath);\n\tconst find = async newFilePath => await pathExists(newFilePath) ? find(getFilePath()) : newFilePath;\n\treturn find(filePath);\n};\n\nmodule.exports = unusedFilename;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = unusedFilename;\n\nmodule.exports.sync = filePath => {\n\tconst getFilePath = incrementer(filePath);\n\tconst find = newFilePath => pathExists.sync(newFilePath) ? find(getFilePath()) : newFilePath;\n\treturn find(filePath);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW51c2VkLWZpbGVuYW1lL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZyZWV0dWJlLy4vbm9kZV9tb2R1bGVzL3VudXNlZC1maWxlbmFtZS9pbmRleC5qcz8zYWI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHBhdGhFeGlzdHMgPSByZXF1aXJlKCdwYXRoLWV4aXN0cycpO1xuY29uc3QgbW9kaWZ5RmlsZW5hbWUgPSByZXF1aXJlKCdtb2RpZnktZmlsZW5hbWUnKTtcblxuY29uc3QgaW5jcmVtZW50ZXIgPSBmaWxlUGF0aCA9PiB7XG5cdGxldCBjb3VudGVyID0gMDtcblx0cmV0dXJuICgpID0+IG1vZGlmeUZpbGVuYW1lKGZpbGVQYXRoLCAoZmlsZW5hbWUsIGV4dGVuc2lvbikgPT4gYCR7ZmlsZW5hbWV9ICgkeysrY291bnRlcn0pJHtleHRlbnNpb259YCk7XG59O1xuXG5jb25zdCB1bnVzZWRGaWxlbmFtZSA9IGZpbGVQYXRoID0+IHtcblx0Y29uc3QgZ2V0RmlsZVBhdGggPSBpbmNyZW1lbnRlcihmaWxlUGF0aCk7XG5cdGNvbnN0IGZpbmQgPSBhc3luYyBuZXdGaWxlUGF0aCA9PiBhd2FpdCBwYXRoRXhpc3RzKG5ld0ZpbGVQYXRoKSA/IGZpbmQoZ2V0RmlsZVBhdGgoKSkgOiBuZXdGaWxlUGF0aDtcblx0cmV0dXJuIGZpbmQoZmlsZVBhdGgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB1bnVzZWRGaWxlbmFtZTtcbi8vIFRPRE86IFJlbW92ZSB0aGlzIGZvciB0aGUgbmV4dCBtYWpvciByZWxlYXNlXG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gdW51c2VkRmlsZW5hbWU7XG5cbm1vZHVsZS5leHBvcnRzLnN5bmMgPSBmaWxlUGF0aCA9PiB7XG5cdGNvbnN0IGdldEZpbGVQYXRoID0gaW5jcmVtZW50ZXIoZmlsZVBhdGgpO1xuXHRjb25zdCBmaW5kID0gbmV3RmlsZVBhdGggPT4gcGF0aEV4aXN0cy5zeW5jKG5ld0ZpbGVQYXRoKSA/IGZpbmQoZ2V0RmlsZVBhdGgoKSkgOiBuZXdGaWxlUGF0aDtcblx0cmV0dXJuIGZpbmQoZmlsZVBhdGgpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/unused-filename/index.js\n");

/***/ }),

/***/ "./node_modules/vue-devtools/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/vue-devtools/lib/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var __dirname = \"node_modules/vue-devtools/lib\";\nconst path = __webpack_require__(/*! path */ \"path\")\r\nconst electron = __webpack_require__(/*! electron */ \"electron\")\r\n\r\nconst extName = 'Vue.js devtools'\r\nconst extPath = path.join(__dirname, '..', 'vender')\r\n\r\nexports.install = () => {\r\n  if (process.type === 'renderer' || process.type === 'browser') {\r\n    console.log(`Installing ${extName} from ${extPath}`)\r\n\r\n    if (electron.session.defaultSession.getAllExtensions) {\r\n      if (electron.session.defaultSession.getAllExtensions()[extName]) return true\r\n      return electron.session.defaultSession.loadExtension(extPath)\r\n    }\r\n\r\n    if (process.type === 'renderer') {\r\n      if (electron.remote.BrowserWindow.getDevToolsExtensions &&\r\n            electron.remote.BrowserWindow.getDevToolsExtensions()[extName]) return true\r\n      return electron.remote.BrowserWindow.addDevToolsExtension(extPath)\r\n    }\r\n\r\n    if (process.type === 'browser') {\r\n      if (electron.BrowserWindow.getDevToolsExtensions &&\r\n        electron.BrowserWindow.getDevToolsExtensions()[extName]) return true\r\n      return electron.BrowserWindow.addDevToolsExtension(extPath)\r\n    }\r\n  } else {\r\n    throw new Error(`${extName} can only be installed from an Electron process.`)\r\n  }\r\n}\r\n\r\nexports.uninstall = () => {\r\n  if (process.type === 'renderer' || process.type === 'browser') {\r\n    console.log(`Uninstalling ${extName} from ${extPath}`)\r\n    if (electron.session.defaultSession.removeExtension) {\r\n      return electron.session.defaultSession.removeExtension(extName)\r\n    }\r\n\r\n    if (process.type === 'renderer') {\r\n      return electron.remote.BrowserWindow.removeDevToolsExtension(extName)\r\n    }\r\n\r\n    if (process.type === 'browser') {\r\n      return electron.BrowserWindow.removeDevToolsExtension(extName)\r\n    }\r\n  } else {\r\n    throw new Error(`${extName} can only be uninstalled from an Electron process.`)\r\n  }\r\n}\r\n\r\nexports.path = extPath\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdnVlLWRldnRvb2xzL2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJlZXR1YmUvLi9ub2RlX21vZHVsZXMvdnVlLWRldnRvb2xzL2xpYi9pbmRleC5qcz8xMDg2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcclxuY29uc3QgZWxlY3Ryb24gPSByZXF1aXJlKCdlbGVjdHJvbicpXHJcblxyXG5jb25zdCBleHROYW1lID0gJ1Z1ZS5qcyBkZXZ0b29scydcclxuY29uc3QgZXh0UGF0aCA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLicsICd2ZW5kZXInKVxyXG5cclxuZXhwb3J0cy5pbnN0YWxsID0gKCkgPT4ge1xyXG4gIGlmIChwcm9jZXNzLnR5cGUgPT09ICdyZW5kZXJlcicgfHwgcHJvY2Vzcy50eXBlID09PSAnYnJvd3NlcicpIHtcclxuICAgIGNvbnNvbGUubG9nKGBJbnN0YWxsaW5nICR7ZXh0TmFtZX0gZnJvbSAke2V4dFBhdGh9YClcclxuXHJcbiAgICBpZiAoZWxlY3Ryb24uc2Vzc2lvbi5kZWZhdWx0U2Vzc2lvbi5nZXRBbGxFeHRlbnNpb25zKSB7XHJcbiAgICAgIGlmIChlbGVjdHJvbi5zZXNzaW9uLmRlZmF1bHRTZXNzaW9uLmdldEFsbEV4dGVuc2lvbnMoKVtleHROYW1lXSkgcmV0dXJuIHRydWVcclxuICAgICAgcmV0dXJuIGVsZWN0cm9uLnNlc3Npb24uZGVmYXVsdFNlc3Npb24ubG9hZEV4dGVuc2lvbihleHRQYXRoKVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChwcm9jZXNzLnR5cGUgPT09ICdyZW5kZXJlcicpIHtcclxuICAgICAgaWYgKGVsZWN0cm9uLnJlbW90ZS5Ccm93c2VyV2luZG93LmdldERldlRvb2xzRXh0ZW5zaW9ucyAmJlxyXG4gICAgICAgICAgICBlbGVjdHJvbi5yZW1vdGUuQnJvd3NlcldpbmRvdy5nZXREZXZUb29sc0V4dGVuc2lvbnMoKVtleHROYW1lXSkgcmV0dXJuIHRydWVcclxuICAgICAgcmV0dXJuIGVsZWN0cm9uLnJlbW90ZS5Ccm93c2VyV2luZG93LmFkZERldlRvb2xzRXh0ZW5zaW9uKGV4dFBhdGgpXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHByb2Nlc3MudHlwZSA9PT0gJ2Jyb3dzZXInKSB7XHJcbiAgICAgIGlmIChlbGVjdHJvbi5Ccm93c2VyV2luZG93LmdldERldlRvb2xzRXh0ZW5zaW9ucyAmJlxyXG4gICAgICAgIGVsZWN0cm9uLkJyb3dzZXJXaW5kb3cuZ2V0RGV2VG9vbHNFeHRlbnNpb25zKClbZXh0TmFtZV0pIHJldHVybiB0cnVlXHJcbiAgICAgIHJldHVybiBlbGVjdHJvbi5Ccm93c2VyV2luZG93LmFkZERldlRvb2xzRXh0ZW5zaW9uKGV4dFBhdGgpXHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgJHtleHROYW1lfSBjYW4gb25seSBiZSBpbnN0YWxsZWQgZnJvbSBhbiBFbGVjdHJvbiBwcm9jZXNzLmApXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnRzLnVuaW5zdGFsbCA9ICgpID0+IHtcclxuICBpZiAocHJvY2Vzcy50eXBlID09PSAncmVuZGVyZXInIHx8IHByb2Nlc3MudHlwZSA9PT0gJ2Jyb3dzZXInKSB7XHJcbiAgICBjb25zb2xlLmxvZyhgVW5pbnN0YWxsaW5nICR7ZXh0TmFtZX0gZnJvbSAke2V4dFBhdGh9YClcclxuICAgIGlmIChlbGVjdHJvbi5zZXNzaW9uLmRlZmF1bHRTZXNzaW9uLnJlbW92ZUV4dGVuc2lvbikge1xyXG4gICAgICByZXR1cm4gZWxlY3Ryb24uc2Vzc2lvbi5kZWZhdWx0U2Vzc2lvbi5yZW1vdmVFeHRlbnNpb24oZXh0TmFtZSlcclxuICAgIH1cclxuXHJcbiAgICBpZiAocHJvY2Vzcy50eXBlID09PSAncmVuZGVyZXInKSB7XHJcbiAgICAgIHJldHVybiBlbGVjdHJvbi5yZW1vdGUuQnJvd3NlcldpbmRvdy5yZW1vdmVEZXZUb29sc0V4dGVuc2lvbihleHROYW1lKVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChwcm9jZXNzLnR5cGUgPT09ICdicm93c2VyJykge1xyXG4gICAgICByZXR1cm4gZWxlY3Ryb24uQnJvd3NlcldpbmRvdy5yZW1vdmVEZXZUb29sc0V4dGVuc2lvbihleHROYW1lKVxyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXh0TmFtZX0gY2FuIG9ubHkgYmUgdW5pbnN0YWxsZWQgZnJvbSBhbiBFbGVjdHJvbiBwcm9jZXNzLmApXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnRzLnBhdGggPSBleHRQYXRoXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-devtools/lib/index.js\n");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("electron");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "./node_modules/mime-db/db.json":
/*!**************************************!*\
  !*** ./node_modules/mime-db/db.json ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/3gpphal+json":{"source":"iana","compressible":true},"application/3gpphalforms+json":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/ace+cbor":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/alto-updatestreamcontrol+json":{"source":"iana","compressible":true},"application/alto-updatestreamparams+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/at+jwt":{"source":"iana"},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-dynamic-event-message":{"source":"iana"},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/captive+json":{"source":"iana","compressible":true},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/city+json":{"source":"iana","compressible":true},"application/clr":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true,"extensions":["cpl"]},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dash-patch+xml":{"source":"iana","compressible":true,"extensions":["mpp"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dots+cbor":{"source":"iana"},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["es","ecma"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/elm+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/elm+xml":{"source":"iana","compressible":true},"application/emergencycalldata.cap+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/express":{"source":"iana","extensions":["exp"]},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/fhir+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/jscalendar+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lpf+zip":{"source":"iana","compressible":false},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true,"extensions":["mpf"]},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/missing-blocks+cbor-seq":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true},"application/mrb-publish+xml":{"source":"iana","compressible":true},"application/msc-ivr+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msc-mixer+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana","charset":"US-ASCII"},"application/news-groupinfo":{"source":"iana","charset":"US-ASCII"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana","extensions":["cjs"]},"application/nss":{"source":"iana"},"application/oauth-authz-req+jwt":{"source":"iana"},"application/oblivious-dns-message":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{"source":"iana","compressible":true},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p21":{"source":"iana"},"application/p21+zip":{"source":"iana","compressible":false},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana","extensions":["asc"]},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pidf-diff+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.cyn":{"source":"iana","charset":"7-BIT"},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/pvd+json":{"source":"iana","compressible":true},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sarif+json":{"source":"iana","compressible":true},"application/sarif-external-properties+json":{"source":"iana","compressible":true},"application/sbe":{"source":"iana"},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-etch+cbor":{"source":"iana"},"application/senml-etch+json":{"source":"iana","compressible":true},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spdx+json":{"source":"iana","compressible":true},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/td+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/token-introspection+jwt":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana","extensions":["trig"]},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ubjson":{"compressible":false,"extensions":["ubj"]},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true,"extensions":["td"]},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.5gnas":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gtpc":{"source":"iana"},"application/vnd.3gpp.interworking-data":{"source":"iana"},"application/vnd.3gpp.lpp":{"source":"iana"},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ngap":{"source":"iana"},"application/vnd.3gpp.pfcp":{"source":"iana"},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.s1ap":{"source":"iana"},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.cmoca-cmresource":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-cmtable":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.age":{"source":"iana","extensions":["age"]},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.arrow.file":{"source":"iana"},"application/vnd.apache.arrow.stream":{"source":"iana"},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["key"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.cryptomator.encrypted":{"source":"iana"},"application/vnd.cryptomator.vault":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.cyclonedx+json":{"source":"iana","compressible":true},"application/vnd.cyclonedx+xml":{"source":"iana","compressible":true},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.d3m-dataset":{"source":"iana"},"application/vnd.d3m-problem":{"source":"iana"},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.dbf":{"source":"iana","extensions":["dbf"]},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbisl+xml":{"source":"iana","compressible":true},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.eclipse.ditto+json":{"source":"iana","compressible":true},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eu.kasparian.car+json":{"source":"iana","compressible":true},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.familysearch.gedcom+zip":{"source":"iana","compressible":false},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujifilm.fb.docuworks":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.container":{"source":"iana"},"application/vnd.fujifilm.fb.jfi+xml":{"source":"iana","compressible":true},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.slides":{"source":"iana"},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hl7cda+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hl7v2+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana","extensions":["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxar.archive.3tz+zip":{"source":"iana","compressible":false},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.nacamar.ybrid+json":{"source":"iana","compressible":true},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nebumind.line":{"source":"iana"},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oci.image.manifest.v1+json":{"source":"iana","compressible":true},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+cbor":{"source":"iana"},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.opentimestamps.ots":{"source":"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana","extensions":["rar"]},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.resilient.logic":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sar":{"source":"iana"},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.seis+json":{"source":"iana","compressible":true},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.shp":{"source":"iana"},"application/vnd.shx":{"source":"iana"},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.snesdev-page-table":{"source":"iana"},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.sycle+xml":{"source":"iana","compressible":true},"application/vnd.syft+json":{"source":"iana","compressible":true},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","charset":"UTF-8","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veritone.aion+json":{"source":"iana","compressible":true},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","charset":"UTF-8","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.dpp":{"source":"iana"},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"source":"iana","compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true,"extensions":["wif"]},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-iwork-keynote-sffkey":{"extensions":["key"]},"application/x-iwork-numbers-sffnumbers":{"extensions":["numbers"]},"application/x-iwork-pages-sffpages":{"extensions":["pages"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-pki-message":{"source":"iana"},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"iana","extensions":["der","crt","pem"]},"application/x-x509-ca-ra-cert":{"source":"iana"},"application/x-x509-next-ca-cert":{"source":"iana"},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xsl","xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana","extensions":["amr"]},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/mhas":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx","opus"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/scip":{"source":"iana"},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sofa":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tetra_acelp_bb":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/tsvcis":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana","extensions":["avci"]},"image/avcs":{"source":"iana","extensions":["avcs"]},"image/avif":{"source":"iana","compressible":false,"extensions":["avif"]},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/ktx2":{"source":"iana","extensions":["ktx2"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","compressible":true,"extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"compressible":true,"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.pco.b16":{"source":"iana","extensions":["b16"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/e57":{"source":"iana"},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/mtl":{"source":"iana","extensions":["mtl"]},"model/obj":{"source":"iana","extensions":["obj"]},"model/step":{"source":"iana"},"model/step+xml":{"source":"iana","compressible":true,"extensions":["stpx"]},"model/step+zip":{"source":"iana","compressible":false,"extensions":["stpz"]},"model/step-xml+zip":{"source":"iana","compressible":false,"extensions":["stpxz"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.pytha.pyox":{"source":"iana"},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.sap.vds":{"source":"iana","extensions":["vds"]},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/cql":{"source":"iana"},"text/cql-expression":{"source":"iana"},"text/cql-identifier":{"source":"iana"},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/fhirpath":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/gff3":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana","charset":"UTF-8"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana","charset":"UTF-8"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shaclc":{"source":"iana"},"text/shex":{"source":"iana","extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/spdx":{"source":"iana","extensions":["spdx"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana","charset":"UTF-8"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana","charset":"UTF-8"},"text/vnd.familysearch.gedcom":{"source":"iana","extensions":["ged"]},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hans":{"source":"iana"},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","charset":"UTF-8","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana","charset":"UTF-8"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"compressible":true,"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/av1":{"source":"iana"},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/ffv1":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana","extensions":["m4s"]},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/jxsv":{"source":"iana"},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/scip":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/vp9":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main/index.js");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;